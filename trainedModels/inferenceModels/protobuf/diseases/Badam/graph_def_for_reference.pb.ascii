node {
  name: "keras_learning_phase/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "keras_learning_phase/input"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09975093603134155
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09975093603134155
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_1/kernel/Initializer/random_uniform/max"
  input: "conv2d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_1/kernel/Initializer/random_uniform/mul"
  input: "conv2d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_1/kernel"
    }
  }
}
node {
  name: "conv2d_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_1/kernel"
}
node {
  name: "conv2d_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_1/kernel"
  input: "conv2d_1/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_1/bias"
    }
  }
}
node {
  name: "conv2d_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_1/bias"
}
node {
  name: "conv2d_1/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_1/bias"
  input: "conv2d_1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/Conv2D"
  op: "Conv2D"
  input: "input_1"
  input: "conv2d_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_1/Conv2D"
  input: "conv2d_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_1/Relu"
  op: "Relu"
  input: "conv2d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_2/kernel/Initializer/random_uniform/max"
  input: "conv2d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_2/kernel/Initializer/random_uniform/mul"
  input: "conv2d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "conv2d_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_2/kernel"
    }
  }
}
node {
  name: "conv2d_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_2/kernel"
}
node {
  name: "conv2d_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_2/kernel"
  input: "conv2d_2/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_2/bias"
    }
  }
}
node {
  name: "conv2d_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_2/bias"
}
node {
  name: "conv2d_2/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_2/bias"
  input: "conv2d_2/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/Conv2D"
  op: "Conv2D"
  input: "conv2d_1/Relu"
  input: "conv2d_2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_2/Conv2D"
  input: "conv2d_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_2/Relu"
  op: "Relu"
  input: "conv2d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_3/kernel/Initializer/random_uniform/max"
  input: "conv2d_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_3/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_3/kernel/Initializer/random_uniform/mul"
  input: "conv2d_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "conv2d_3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_3/kernel"
    }
  }
}
node {
  name: "conv2d_3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_3/kernel"
}
node {
  name: "conv2d_3/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_3/kernel"
  input: "conv2d_3/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_3/bias"
    }
  }
}
node {
  name: "conv2d_3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_3/bias"
}
node {
  name: "conv2d_3/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_3/bias"
  input: "conv2d_3/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/Conv2D"
  op: "Conv2D"
  input: "conv2d_2/Relu"
  input: "conv2d_3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_3/Conv2D"
  input: "conv2d_3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_3/Relu"
  op: "Relu"
  input: "conv2d_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_1/gamma"
    }
  }
}
node {
  name: "batch_normalization_1/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/gamma"
}
node {
  name: "batch_normalization_1/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_1/gamma"
  input: "batch_normalization_1/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_1/beta"
    }
  }
}
node {
  name: "batch_normalization_1/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/beta"
}
node {
  name: "batch_normalization_1/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_1/beta"
  input: "batch_normalization_1/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_1/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/moving_mean"
}
node {
  name: "batch_normalization_1/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_1/moving_mean"
  input: "batch_normalization_1/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_1/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/moving_variance"
}
node {
  name: "batch_normalization_1/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_1/moving_variance"
  input: "batch_normalization_1/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_1/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_3/Relu"
  input: "batch_normalization_1/ReadVariableOp"
  input: "batch_normalization_1/ReadVariableOp_1"
  input: "batch_normalization_1/FusedBatchNorm/ReadVariableOp"
  input: "batch_normalization_1/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "activation_1/Relu"
  op: "Relu"
  input: "batch_normalization_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_4/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_4/kernel/Initializer/random_uniform/max"
  input: "conv2d_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_4/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_4/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_4/kernel/Initializer/random_uniform/mul"
  input: "conv2d_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "conv2d_4/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_4/kernel"
    }
  }
}
node {
  name: "conv2d_4/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_4/kernel"
}
node {
  name: "conv2d_4/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_4/kernel"
  input: "conv2d_4/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_4/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_4/bias"
    }
  }
}
node {
  name: "conv2d_4/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_4/bias"
}
node {
  name: "conv2d_4/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_4/bias"
  input: "conv2d_4/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_4/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_4/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4/Conv2D"
  op: "Conv2D"
  input: "activation_1/Relu"
  input: "conv2d_4/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_4/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_4/Conv2D"
  input: "conv2d_4/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_4/Relu"
  op: "Relu"
  input: "conv2d_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_1/MaxPool"
  op: "MaxPool"
  input: "conv2d_4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_8/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_8/kernel/Initializer/random_uniform/max"
  input: "conv2d_8/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_8/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_8/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_8/kernel/Initializer/random_uniform/mul"
  input: "conv2d_8/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "conv2d_8/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_8/kernel"
    }
  }
}
node {
  name: "conv2d_8/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_8/kernel"
}
node {
  name: "conv2d_8/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_8/kernel"
  input: "conv2d_8/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_8/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_8/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_8/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_8/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_8/bias"
    }
  }
}
node {
  name: "conv2d_8/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_8/bias"
}
node {
  name: "conv2d_8/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_8/bias"
  input: "conv2d_8/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_8/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_8/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_8/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_8/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_8/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_8/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_1/MaxPool"
  input: "conv2d_8/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_8/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_8/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_8/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_8/Conv2D"
  input: "conv2d_8/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_8/Relu"
  op: "Relu"
  input: "conv2d_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_6/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_6/kernel/Initializer/random_uniform/max"
  input: "conv2d_6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_6/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_6/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_6/kernel/Initializer/random_uniform/mul"
  input: "conv2d_6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "conv2d_6/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_6/kernel"
    }
  }
}
node {
  name: "conv2d_6/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_6/kernel"
}
node {
  name: "conv2d_6/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_6/kernel"
  input: "conv2d_6/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_6/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_6/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_6/bias"
    }
  }
}
node {
  name: "conv2d_6/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_6/bias"
}
node {
  name: "conv2d_6/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_6/bias"
  input: "conv2d_6/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_6/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_6/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_1/MaxPool"
  input: "conv2d_6/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_6/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_6/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_6/Conv2D"
  input: "conv2d_6/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_6/Relu"
  op: "Relu"
  input: "conv2d_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_9/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_9/kernel/Initializer/random_uniform/max"
  input: "conv2d_9/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_9/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_9/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_9/kernel/Initializer/random_uniform/mul"
  input: "conv2d_9/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "conv2d_9/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_9/kernel"
    }
  }
}
node {
  name: "conv2d_9/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_9/kernel"
}
node {
  name: "conv2d_9/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_9/kernel"
  input: "conv2d_9/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_9/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_9/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_9/bias"
    }
  }
}
node {
  name: "conv2d_9/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_9/bias"
}
node {
  name: "conv2d_9/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_9/bias"
  input: "conv2d_9/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_9/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_9/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_9/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9/Conv2D"
  op: "Conv2D"
  input: "conv2d_8/Relu"
  input: "conv2d_9/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_9/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_9/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_9/Conv2D"
  input: "conv2d_9/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_9/Relu"
  op: "Relu"
  input: "conv2d_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_11/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_11/kernel/Initializer/random_uniform/max"
  input: "conv2d_11/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_11/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_11/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_11/kernel/Initializer/random_uniform/mul"
  input: "conv2d_11/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
}
node {
  name: "conv2d_11/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_11/kernel"
    }
  }
}
node {
  name: "conv2d_11/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_11/kernel"
}
node {
  name: "conv2d_11/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_11/kernel"
  input: "conv2d_11/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_11/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_11/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_11/bias"
    }
  }
}
node {
  name: "conv2d_11/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_11/bias"
}
node {
  name: "conv2d_11/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_11/bias"
  input: "conv2d_11/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_11/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_11/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_11/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_1/MaxPool"
  input: "conv2d_11/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_11/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_11/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_11/Conv2D"
  input: "conv2d_11/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_11/Relu"
  op: "Relu"
  input: "conv2d_11/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_5/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_5/kernel/Initializer/random_uniform/max"
  input: "conv2d_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_5/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_5/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_5/kernel/Initializer/random_uniform/mul"
  input: "conv2d_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "conv2d_5/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_5/kernel"
    }
  }
}
node {
  name: "conv2d_5/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_5/kernel"
}
node {
  name: "conv2d_5/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_5/kernel"
  input: "conv2d_5/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_5/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_5/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_5/bias"
    }
  }
}
node {
  name: "conv2d_5/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_5/bias"
}
node {
  name: "conv2d_5/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_5/bias"
  input: "conv2d_5/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_5/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_5/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_1/MaxPool"
  input: "conv2d_5/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_5/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_5/Conv2D"
  input: "conv2d_5/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_5/Relu"
  op: "Relu"
  input: "conv2d_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_7/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_7/kernel/Initializer/random_uniform/max"
  input: "conv2d_7/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_7/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_7/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_7/kernel/Initializer/random_uniform/mul"
  input: "conv2d_7/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "conv2d_7/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_7/kernel"
    }
  }
}
node {
  name: "conv2d_7/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_7/kernel"
}
node {
  name: "conv2d_7/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_7/kernel"
  input: "conv2d_7/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_7/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_7/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_7/bias"
    }
  }
}
node {
  name: "conv2d_7/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_7/bias"
}
node {
  name: "conv2d_7/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_7/bias"
  input: "conv2d_7/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_7/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_7/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_7/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7/Conv2D"
  op: "Conv2D"
  input: "conv2d_6/Relu"
  input: "conv2d_7/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_7/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_7/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_7/Conv2D"
  input: "conv2d_7/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_7/Relu"
  op: "Relu"
  input: "conv2d_7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_10/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_10/kernel/Initializer/random_uniform/max"
  input: "conv2d_10/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_10/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_10/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_10/kernel/Initializer/random_uniform/mul"
  input: "conv2d_10/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "conv2d_10/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_10/kernel"
    }
  }
}
node {
  name: "conv2d_10/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_10/kernel"
}
node {
  name: "conv2d_10/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_10/kernel"
  input: "conv2d_10/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_10/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_10/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_10/bias"
    }
  }
}
node {
  name: "conv2d_10/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_10/bias"
}
node {
  name: "conv2d_10/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_10/bias"
  input: "conv2d_10/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_10/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_10/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_10/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10/Conv2D"
  op: "Conv2D"
  input: "conv2d_9/Relu"
  input: "conv2d_10/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_10/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_10/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_10/Conv2D"
  input: "conv2d_10/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_10/Relu"
  op: "Relu"
  input: "conv2d_10/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_2/MaxPool"
  op: "MaxPool"
  input: "conv2d_11/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "concatenate_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "concatenate_1/concat"
  op: "ConcatV2"
  input: "conv2d_5/Relu"
  input: "conv2d_7/Relu"
  input: "conv2d_10/Relu"
  input: "max_pooling2d_2/MaxPool"
  input: "concatenate_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "add_1/add"
  op: "Add"
  input: "concatenate_1/concat"
  input: "max_pooling2d_1/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_2/gamma"
    }
  }
}
node {
  name: "batch_normalization_2/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_2/gamma"
}
node {
  name: "batch_normalization_2/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_2/gamma"
  input: "batch_normalization_2/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_2/beta"
    }
  }
}
node {
  name: "batch_normalization_2/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_2/beta"
}
node {
  name: "batch_normalization_2/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_2/beta"
  input: "batch_normalization_2/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_2/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_2/moving_mean"
}
node {
  name: "batch_normalization_2/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_2/moving_mean"
  input: "batch_normalization_2/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_2/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_2/moving_variance"
}
node {
  name: "batch_normalization_2/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_2/moving_variance"
  input: "batch_normalization_2/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_2/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_2/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_2/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_1/add"
  input: "batch_normalization_2/ReadVariableOp"
  input: "batch_normalization_2/ReadVariableOp_1"
  input: "batch_normalization_2/FusedBatchNorm/ReadVariableOp"
  input: "batch_normalization_2/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "activation_2/Relu"
  op: "Relu"
  input: "batch_normalization_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000 \001\000\000"
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10502100735902786
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10502100735902786
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_12/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_12/kernel/Initializer/random_uniform/max"
  input: "conv2d_12/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_12/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_12/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_12/kernel/Initializer/random_uniform/mul"
  input: "conv2d_12/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
}
node {
  name: "conv2d_12/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 288
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_12/kernel"
    }
  }
}
node {
  name: "conv2d_12/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_12/kernel"
}
node {
  name: "conv2d_12/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_12/kernel"
  input: "conv2d_12/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_12/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 288
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_12/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_12/bias"
    }
  }
}
node {
  name: "conv2d_12/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_12/bias"
}
node {
  name: "conv2d_12/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_12/bias"
  input: "conv2d_12/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_12/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_12/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_12/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12/Conv2D"
  op: "Conv2D"
  input: "activation_2/Relu"
  input: "conv2d_12/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_12/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_12/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_12/Conv2D"
  input: "conv2d_12/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_12/Relu"
  op: "Relu"
  input: "conv2d_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_3/MaxPool"
  op: "MaxPool"
  input: "conv2d_12/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_14/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_14/kernel/Initializer/random_uniform/max"
  input: "conv2d_14/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_14/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_14/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_14/kernel/Initializer/random_uniform/mul"
  input: "conv2d_14/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
}
node {
  name: "conv2d_14/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_14/kernel"
    }
  }
}
node {
  name: "conv2d_14/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_14/kernel"
}
node {
  name: "conv2d_14/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_14/kernel"
  input: "conv2d_14/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_14/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_14/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_14/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_14/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_14/bias"
    }
  }
}
node {
  name: "conv2d_14/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_14/bias"
}
node {
  name: "conv2d_14/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_14/bias"
  input: "conv2d_14/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_14/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_14/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_14/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_14/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_14/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_14/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_3/MaxPool"
  input: "conv2d_14/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_14/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_14/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_14/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_14/Conv2D"
  input: "conv2d_14/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_14/Relu"
  op: "Relu"
  input: "conv2d_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_16/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_16/kernel/Initializer/random_uniform/max"
  input: "conv2d_16/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_16/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_16/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_16/kernel/Initializer/random_uniform/mul"
  input: "conv2d_16/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
}
node {
  name: "conv2d_16/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_16/kernel"
    }
  }
}
node {
  name: "conv2d_16/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_16/kernel"
}
node {
  name: "conv2d_16/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_16/kernel"
  input: "conv2d_16/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_16/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_16/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_16/bias"
    }
  }
}
node {
  name: "conv2d_16/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_16/bias"
}
node {
  name: "conv2d_16/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_16/bias"
  input: "conv2d_16/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_16/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_16/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_16/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_3/MaxPool"
  input: "conv2d_16/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_16/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_16/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_16/Conv2D"
  input: "conv2d_16/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_16/Relu"
  op: "Relu"
  input: "conv2d_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_13/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_13/kernel/Initializer/random_uniform/max"
  input: "conv2d_13/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_13/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_13/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_13/kernel/Initializer/random_uniform/mul"
  input: "conv2d_13/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
}
node {
  name: "conv2d_13/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_13/kernel"
    }
  }
}
node {
  name: "conv2d_13/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_13/kernel"
}
node {
  name: "conv2d_13/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_13/kernel"
  input: "conv2d_13/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_13/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_13/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_13/bias"
    }
  }
}
node {
  name: "conv2d_13/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_13/bias"
}
node {
  name: "conv2d_13/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_13/bias"
  input: "conv2d_13/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_13/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_13/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_13/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_3/MaxPool"
  input: "conv2d_13/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_13/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_13/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_13/Conv2D"
  input: "conv2d_13/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_13/Relu"
  op: "Relu"
  input: "conv2d_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_15/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_15/kernel/Initializer/random_uniform/max"
  input: "conv2d_15/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_15/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_15/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_15/kernel/Initializer/random_uniform/mul"
  input: "conv2d_15/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
}
node {
  name: "conv2d_15/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_15/kernel"
    }
  }
}
node {
  name: "conv2d_15/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_15/kernel"
}
node {
  name: "conv2d_15/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_15/kernel"
  input: "conv2d_15/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_15/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_15/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_15/bias"
    }
  }
}
node {
  name: "conv2d_15/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_15/bias"
}
node {
  name: "conv2d_15/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_15/bias"
  input: "conv2d_15/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_15/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_15/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_15/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15/Conv2D"
  op: "Conv2D"
  input: "conv2d_14/Relu"
  input: "conv2d_15/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_15/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_15/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_15/Conv2D"
  input: "conv2d_15/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_15/Relu"
  op: "Relu"
  input: "conv2d_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_4/MaxPool"
  op: "MaxPool"
  input: "conv2d_16/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "concatenate_2/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "concatenate_2/concat"
  op: "ConcatV2"
  input: "conv2d_13/Relu"
  input: "conv2d_15/Relu"
  input: "max_pooling2d_4/MaxPool"
  input: "concatenate_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "add_2/add"
  op: "Add"
  input: "concatenate_2/concat"
  input: "max_pooling2d_3/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 288
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_3/gamma"
    }
  }
}
node {
  name: "batch_normalization_3/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_3/gamma"
}
node {
  name: "batch_normalization_3/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_3/gamma"
  input: "batch_normalization_3/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 288
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_3/beta"
    }
  }
}
node {
  name: "batch_normalization_3/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_3/beta"
}
node {
  name: "batch_normalization_3/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_3/beta"
  input: "batch_normalization_3/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 288
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_3/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_3/moving_mean"
}
node {
  name: "batch_normalization_3/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_3/moving_mean"
  input: "batch_normalization_3/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 288
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_3/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_3/moving_variance"
}
node {
  name: "batch_normalization_3/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_3/moving_variance"
  input: "batch_normalization_3/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_3/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_3/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_3/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_2/add"
  input: "batch_normalization_3/ReadVariableOp"
  input: "batch_normalization_3/ReadVariableOp_1"
  input: "batch_normalization_3/FusedBatchNorm/ReadVariableOp"
  input: "batch_normalization_3/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "activation_3/Relu"
  op: "Relu"
  input: "batch_normalization_3/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10502100735902786
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10502100735902786
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_17/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_17/kernel/Initializer/random_uniform/max"
  input: "conv2d_17/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_17/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_17/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_17/kernel/Initializer/random_uniform/mul"
  input: "conv2d_17/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
}
node {
  name: "conv2d_17/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_17/kernel"
    }
  }
}
node {
  name: "conv2d_17/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_17/kernel"
}
node {
  name: "conv2d_17/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_17/kernel"
  input: "conv2d_17/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_17/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_17/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_17/bias"
    }
  }
}
node {
  name: "conv2d_17/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_17/bias"
}
node {
  name: "conv2d_17/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_17/bias"
  input: "conv2d_17/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_17/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_17/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_17/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17/Conv2D"
  op: "Conv2D"
  input: "activation_3/Relu"
  input: "conv2d_17/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_17/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_17/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_17/Conv2D"
  input: "conv2d_17/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_17/Relu"
  op: "Relu"
  input: "conv2d_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_5/MaxPool"
  op: "MaxPool"
  input: "conv2d_17/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_19/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_19/kernel/Initializer/random_uniform/max"
  input: "conv2d_19/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_19/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_19/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_19/kernel/Initializer/random_uniform/mul"
  input: "conv2d_19/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
}
node {
  name: "conv2d_19/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_19/kernel"
    }
  }
}
node {
  name: "conv2d_19/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_19/kernel"
}
node {
  name: "conv2d_19/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_19/kernel"
  input: "conv2d_19/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_19/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_19/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_19/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_19/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_19/bias"
    }
  }
}
node {
  name: "conv2d_19/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_19/bias"
}
node {
  name: "conv2d_19/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_19/bias"
  input: "conv2d_19/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_19/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_19/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_19/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_19/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_19/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_19/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_5/MaxPool"
  input: "conv2d_19/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_19/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_19/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_19/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_19/Conv2D"
  input: "conv2d_19/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_19/Relu"
  op: "Relu"
  input: "conv2d_19/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_18/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_18/kernel/Initializer/random_uniform/max"
  input: "conv2d_18/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_18/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_18/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_18/kernel/Initializer/random_uniform/mul"
  input: "conv2d_18/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
}
node {
  name: "conv2d_18/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_18/kernel"
    }
  }
}
node {
  name: "conv2d_18/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_18/kernel"
}
node {
  name: "conv2d_18/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_18/kernel"
  input: "conv2d_18/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_18/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_18/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_18/bias"
    }
  }
}
node {
  name: "conv2d_18/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_18/bias"
}
node {
  name: "conv2d_18/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_18/bias"
  input: "conv2d_18/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_18/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_18/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_18/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_5/MaxPool"
  input: "conv2d_18/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_18/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_18/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_18/Conv2D"
  input: "conv2d_18/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_18/Relu"
  op: "Relu"
  input: "conv2d_18/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_20/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_20/kernel/Initializer/random_uniform/max"
  input: "conv2d_20/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_20/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_20/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_20/kernel/Initializer/random_uniform/mul"
  input: "conv2d_20/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
}
node {
  name: "conv2d_20/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_20/kernel"
    }
  }
}
node {
  name: "conv2d_20/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_20/kernel"
}
node {
  name: "conv2d_20/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_20/kernel"
  input: "conv2d_20/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_20/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_20/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_20/bias"
    }
  }
}
node {
  name: "conv2d_20/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_20/bias"
}
node {
  name: "conv2d_20/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_20/bias"
  input: "conv2d_20/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_20/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_20/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_20/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20/Conv2D"
  op: "Conv2D"
  input: "conv2d_19/Relu"
  input: "conv2d_20/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_20/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_20/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_20/Conv2D"
  input: "conv2d_20/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_20/Relu"
  op: "Relu"
  input: "conv2d_20/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concatenate_3/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "concatenate_3/concat"
  op: "ConcatV2"
  input: "conv2d_18/Relu"
  input: "conv2d_20/Relu"
  input: "concatenate_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "add_3/add"
  op: "Add"
  input: "concatenate_3/concat"
  input: "max_pooling2d_5/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_4/gamma"
    }
  }
}
node {
  name: "batch_normalization_4/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_4/gamma"
}
node {
  name: "batch_normalization_4/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_4/gamma"
  input: "batch_normalization_4/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_4/beta"
    }
  }
}
node {
  name: "batch_normalization_4/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_4/beta"
}
node {
  name: "batch_normalization_4/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_4/beta"
  input: "batch_normalization_4/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_4/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_4/moving_mean"
}
node {
  name: "batch_normalization_4/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_4/moving_mean"
  input: "batch_normalization_4/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_4/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_4/moving_variance"
}
node {
  name: "batch_normalization_4/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_4/moving_variance"
  input: "batch_normalization_4/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_4/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/FusedBatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_4/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/FusedBatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_4/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_3/add"
  input: "batch_normalization_4/ReadVariableOp"
  input: "batch_normalization_4/ReadVariableOp_1"
  input: "batch_normalization_4/FusedBatchNorm/ReadVariableOp"
  input: "batch_normalization_4/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9900000095367432
      }
    }
  }
}
node {
  name: "activation_4/Relu"
  op: "Relu"
  input: "batch_normalization_4/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_6/MaxPool"
  op: "MaxPool"
  input: "activation_4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "dropout_1/Identity"
  op: "Identity"
  input: "max_pooling2d_6/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_average_pooling2d_1/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global_average_pooling2d_1/Mean"
  op: "Mean"
  input: "dropout_1/Identity"
  input: "global_average_pooling2d_1/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_5/gamma"
    }
  }
}
node {
  name: "batch_normalization_5/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_5/gamma"
}
node {
  name: "batch_normalization_5/gamma/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_5/gamma"
  input: "batch_normalization_5/gamma/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_5/beta"
    }
  }
}
node {
  name: "batch_normalization_5/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_5/beta"
}
node {
  name: "batch_normalization_5/beta/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_5/beta"
  input: "batch_normalization_5/beta/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_5/moving_mean"
    }
  }
}
node {
  name: "batch_normalization_5/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_5/moving_mean"
}
node {
  name: "batch_normalization_5/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_5/moving_mean"
  input: "batch_normalization_5/moving_mean/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "batch_normalization_5/moving_variance"
    }
  }
}
node {
  name: "batch_normalization_5/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "batch_normalization_5/moving_variance"
}
node {
  name: "batch_normalization_5/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "batch_normalization_5/moving_variance"
  input: "batch_normalization_5/moving_variance/Initializer/ones"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/add"
  op: "Add"
  input: "batch_normalization_5/batchnorm/ReadVariableOp"
  input: "batch_normalization_5/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_5/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "batch_normalization_5/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_5/batchnorm/Rsqrt"
  input: "batch_normalization_5/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/mul_1"
  op: "Mul"
  input: "global_average_pooling2d_1/Mean"
  input: "batch_normalization_5/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "batch_normalization_5/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_5/batchnorm/ReadVariableOp_1"
  input: "batch_normalization_5/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "batch_normalization_5/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_5/batchnorm/ReadVariableOp_2"
  input: "batch_normalization_5/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_5/batchnorm/mul_1"
  input: "batch_normalization_5/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_1/kernel/Initializer/random_uniform/max"
  input: "dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_1/kernel/Initializer/random_uniform/mul"
  input: "dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel"
    }
  }
}
node {
  name: "dense_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
}
node {
  name: "dense_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias"
    }
  }
}
node {
  name: "dense_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
}
node {
  name: "dense_1/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "dense_1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul"
  op: "MatMul"
  input: "batch_normalization_5/batchnorm/add_1"
  input: "dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_1/MatMul"
  input: "dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_1/Relu"
  op: "Relu"
  input: "dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/Identity"
  op: "Identity"
  input: "dense_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "y/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2970442771911621
      }
    }
  }
}
node {
  name: "y/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2970442771911621
      }
    }
  }
}
node {
  name: "y/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "y/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "y/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "y/kernel/Initializer/random_uniform/max"
  input: "y/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/kernel"
      }
    }
  }
}
node {
  name: "y/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "y/kernel/Initializer/random_uniform/RandomUniform"
  input: "y/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/kernel"
      }
    }
  }
}
node {
  name: "y/kernel/Initializer/random_uniform"
  op: "Add"
  input: "y/kernel/Initializer/random_uniform/mul"
  input: "y/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/kernel"
      }
    }
  }
}
node {
  name: "y/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "y/kernel"
    }
  }
}
node {
  name: "y/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "y/kernel"
}
node {
  name: "y/kernel/Assign"
  op: "AssignVariableOp"
  input: "y/kernel"
  input: "y/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "y/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "y/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "y/bias"
    }
  }
}
node {
  name: "y/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "y/bias"
}
node {
  name: "y/bias/Assign"
  op: "AssignVariableOp"
  input: "y/bias"
  input: "y/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "y/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "y/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y/MatMul"
  op: "MatMul"
  input: "dropout_2/Identity"
  input: "y/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "y/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "y/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y/BiasAdd"
  op: "BiasAdd"
  input: "y/MatMul"
  input: "y/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "y/Softmax"
  op: "Softmax"
  input: "y/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "conv2d_1/kernel"
  input: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/kernel"
  input: "^AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_1/bias"
  input: "Placeholder_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv2d_1/bias"
  input: "^AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "conv2d_2/kernel"
  input: "Placeholder_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv2d_2/kernel"
  input: "^AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "conv2d_2/bias"
  input: "Placeholder_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv2d_2/bias"
  input: "^AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "conv2d_3/kernel"
  input: "Placeholder_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_3/kernel"
  input: "^AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "conv2d_3/bias"
  input: "Placeholder_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_3/bias"
  input: "^AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "batch_normalization_1/gamma"
  input: "Placeholder_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "batch_normalization_1/gamma"
  input: "^AssignVariableOp_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "batch_normalization_1/beta"
  input: "Placeholder_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "batch_normalization_1/beta"
  input: "^AssignVariableOp_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "batch_normalization_1/moving_mean"
  input: "Placeholder_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_mean"
  input: "^AssignVariableOp_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "batch_normalization_1/moving_variance"
  input: "Placeholder_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "batch_normalization_1/moving_variance"
  input: "^AssignVariableOp_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "conv2d_4/kernel"
  input: "Placeholder_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "conv2d_4/kernel"
  input: "^AssignVariableOp_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_11"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "conv2d_4/bias"
  input: "Placeholder_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "conv2d_4/bias"
  input: "^AssignVariableOp_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_12"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "conv2d_8/kernel"
  input: "Placeholder_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "conv2d_8/kernel"
  input: "^AssignVariableOp_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_13"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "conv2d_8/bias"
  input: "Placeholder_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "conv2d_8/bias"
  input: "^AssignVariableOp_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_14"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "conv2d_6/kernel"
  input: "Placeholder_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "conv2d_6/kernel"
  input: "^AssignVariableOp_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_15"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "conv2d_6/bias"
  input: "Placeholder_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "conv2d_6/bias"
  input: "^AssignVariableOp_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_16"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "conv2d_9/kernel"
  input: "Placeholder_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "conv2d_9/kernel"
  input: "^AssignVariableOp_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_17"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "conv2d_9/bias"
  input: "Placeholder_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "conv2d_9/bias"
  input: "^AssignVariableOp_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_18"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "conv2d_11/kernel"
  input: "Placeholder_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "conv2d_11/kernel"
  input: "^AssignVariableOp_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_19"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "conv2d_11/bias"
  input: "Placeholder_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "conv2d_11/bias"
  input: "^AssignVariableOp_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_20"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "conv2d_5/kernel"
  input: "Placeholder_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "conv2d_5/kernel"
  input: "^AssignVariableOp_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_21"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "conv2d_5/bias"
  input: "Placeholder_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "conv2d_5/bias"
  input: "^AssignVariableOp_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_22"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "conv2d_7/kernel"
  input: "Placeholder_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "conv2d_7/kernel"
  input: "^AssignVariableOp_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_23"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "conv2d_7/bias"
  input: "Placeholder_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "conv2d_7/bias"
  input: "^AssignVariableOp_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_24"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "conv2d_10/kernel"
  input: "Placeholder_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "conv2d_10/kernel"
  input: "^AssignVariableOp_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_25"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "conv2d_10/bias"
  input: "Placeholder_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "conv2d_10/bias"
  input: "^AssignVariableOp_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_26"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "batch_normalization_2/gamma"
  input: "Placeholder_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "batch_normalization_2/gamma"
  input: "^AssignVariableOp_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_27"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "batch_normalization_2/beta"
  input: "Placeholder_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "batch_normalization_2/beta"
  input: "^AssignVariableOp_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_28"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "batch_normalization_2/moving_mean"
  input: "Placeholder_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "batch_normalization_2/moving_mean"
  input: "^AssignVariableOp_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_29"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "batch_normalization_2/moving_variance"
  input: "Placeholder_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "batch_normalization_2/moving_variance"
  input: "^AssignVariableOp_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_30"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 288
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "conv2d_12/kernel"
  input: "Placeholder_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "conv2d_12/kernel"
  input: "^AssignVariableOp_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_31"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "conv2d_12/bias"
  input: "Placeholder_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "conv2d_12/bias"
  input: "^AssignVariableOp_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_32"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "conv2d_14/kernel"
  input: "Placeholder_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_32"
  op: "ReadVariableOp"
  input: "conv2d_14/kernel"
  input: "^AssignVariableOp_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_33"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "conv2d_14/bias"
  input: "Placeholder_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_33"
  op: "ReadVariableOp"
  input: "conv2d_14/bias"
  input: "^AssignVariableOp_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_34"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "conv2d_16/kernel"
  input: "Placeholder_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_34"
  op: "ReadVariableOp"
  input: "conv2d_16/kernel"
  input: "^AssignVariableOp_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_35"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "conv2d_16/bias"
  input: "Placeholder_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_35"
  op: "ReadVariableOp"
  input: "conv2d_16/bias"
  input: "^AssignVariableOp_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_36"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "conv2d_13/kernel"
  input: "Placeholder_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_36"
  op: "ReadVariableOp"
  input: "conv2d_13/kernel"
  input: "^AssignVariableOp_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_37"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "conv2d_13/bias"
  input: "Placeholder_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_37"
  op: "ReadVariableOp"
  input: "conv2d_13/bias"
  input: "^AssignVariableOp_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_38"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "conv2d_15/kernel"
  input: "Placeholder_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_38"
  op: "ReadVariableOp"
  input: "conv2d_15/kernel"
  input: "^AssignVariableOp_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_39"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "conv2d_15/bias"
  input: "Placeholder_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_39"
  op: "ReadVariableOp"
  input: "conv2d_15/bias"
  input: "^AssignVariableOp_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_40"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "batch_normalization_3/gamma"
  input: "Placeholder_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_40"
  op: "ReadVariableOp"
  input: "batch_normalization_3/gamma"
  input: "^AssignVariableOp_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_41"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "batch_normalization_3/beta"
  input: "Placeholder_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_41"
  op: "ReadVariableOp"
  input: "batch_normalization_3/beta"
  input: "^AssignVariableOp_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_42"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "batch_normalization_3/moving_mean"
  input: "Placeholder_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_42"
  op: "ReadVariableOp"
  input: "batch_normalization_3/moving_mean"
  input: "^AssignVariableOp_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_43"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "batch_normalization_3/moving_variance"
  input: "Placeholder_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_43"
  op: "ReadVariableOp"
  input: "batch_normalization_3/moving_variance"
  input: "^AssignVariableOp_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_44"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "conv2d_17/kernel"
  input: "Placeholder_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_44"
  op: "ReadVariableOp"
  input: "conv2d_17/kernel"
  input: "^AssignVariableOp_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_45"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "conv2d_17/bias"
  input: "Placeholder_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_45"
  op: "ReadVariableOp"
  input: "conv2d_17/bias"
  input: "^AssignVariableOp_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_46"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "conv2d_19/kernel"
  input: "Placeholder_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_46"
  op: "ReadVariableOp"
  input: "conv2d_19/kernel"
  input: "^AssignVariableOp_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_47"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "conv2d_19/bias"
  input: "Placeholder_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_47"
  op: "ReadVariableOp"
  input: "conv2d_19/bias"
  input: "^AssignVariableOp_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_48"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "conv2d_18/kernel"
  input: "Placeholder_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_48"
  op: "ReadVariableOp"
  input: "conv2d_18/kernel"
  input: "^AssignVariableOp_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_49"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "conv2d_18/bias"
  input: "Placeholder_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_49"
  op: "ReadVariableOp"
  input: "conv2d_18/bias"
  input: "^AssignVariableOp_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_50"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "conv2d_20/kernel"
  input: "Placeholder_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_50"
  op: "ReadVariableOp"
  input: "conv2d_20/kernel"
  input: "^AssignVariableOp_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_51"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "conv2d_20/bias"
  input: "Placeholder_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_51"
  op: "ReadVariableOp"
  input: "conv2d_20/bias"
  input: "^AssignVariableOp_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_52"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "batch_normalization_4/gamma"
  input: "Placeholder_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_52"
  op: "ReadVariableOp"
  input: "batch_normalization_4/gamma"
  input: "^AssignVariableOp_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_53"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "batch_normalization_4/beta"
  input: "Placeholder_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_53"
  op: "ReadVariableOp"
  input: "batch_normalization_4/beta"
  input: "^AssignVariableOp_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_54"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "batch_normalization_4/moving_mean"
  input: "Placeholder_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_54"
  op: "ReadVariableOp"
  input: "batch_normalization_4/moving_mean"
  input: "^AssignVariableOp_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_55"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "batch_normalization_4/moving_variance"
  input: "Placeholder_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_55"
  op: "ReadVariableOp"
  input: "batch_normalization_4/moving_variance"
  input: "^AssignVariableOp_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_56"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "batch_normalization_5/gamma"
  input: "Placeholder_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_56"
  op: "ReadVariableOp"
  input: "batch_normalization_5/gamma"
  input: "^AssignVariableOp_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_57"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "batch_normalization_5/beta"
  input: "Placeholder_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_57"
  op: "ReadVariableOp"
  input: "batch_normalization_5/beta"
  input: "^AssignVariableOp_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_58"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "batch_normalization_5/moving_mean"
  input: "Placeholder_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_58"
  op: "ReadVariableOp"
  input: "batch_normalization_5/moving_mean"
  input: "^AssignVariableOp_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_59"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "batch_normalization_5/moving_variance"
  input: "Placeholder_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_59"
  op: "ReadVariableOp"
  input: "batch_normalization_5/moving_variance"
  input: "^AssignVariableOp_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_60"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "Placeholder_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_60"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  input: "^AssignVariableOp_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_61"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "Placeholder_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_61"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  input: "^AssignVariableOp_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_62"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "y/kernel"
  input: "Placeholder_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_62"
  op: "ReadVariableOp"
  input: "y/kernel"
  input: "^AssignVariableOp_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_63"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "y/bias"
  input: "Placeholder_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_63"
  op: "ReadVariableOp"
  input: "y/bias"
  input: "^AssignVariableOp_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_6/bias"
}
node {
  name: "VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "conv2d_17/kernel"
}
node {
  name: "VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "batch_normalization_4/moving_variance"
}
node {
  name: "VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "batch_normalization_3/beta"
}
node {
  name: "VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/gamma"
}
node {
  name: "VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "conv2d_8/bias"
}
node {
  name: "VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "conv2d_9/kernel"
}
node {
  name: "VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "batch_normalization_4/beta"
}
node {
  name: "VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "batch_normalization_3/gamma"
}
node {
  name: "VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "conv2d_14/kernel"
}
node {
  name: "VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "conv2d_3/bias"
}
node {
  name: "VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "conv2d_10/kernel"
}
node {
  name: "VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "conv2d_18/kernel"
}
node {
  name: "VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "y/bias"
}
node {
  name: "VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "conv2d_2/bias"
}
node {
  name: "VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "batch_normalization_3/moving_mean"
}
node {
  name: "VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "conv2d_2/kernel"
}
node {
  name: "VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "batch_normalization_3/moving_variance"
}
node {
  name: "VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "conv2d_16/kernel"
}
node {
  name: "VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "batch_normalization_2/moving_variance"
}
node {
  name: "VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "conv2d_17/bias"
}
node {
  name: "VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "conv2d_16/bias"
}
node {
  name: "VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "batch_normalization_5/moving_mean"
}
node {
  name: "VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "conv2d_19/bias"
}
node {
  name: "VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "batch_normalization_4/moving_mean"
}
node {
  name: "VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "batch_normalization_4/gamma"
}
node {
  name: "VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "batch_normalization_5/gamma"
}
node {
  name: "VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "conv2d_7/kernel"
}
node {
  name: "VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
}
node {
  name: "VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "conv2d_7/bias"
}
node {
  name: "VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "conv2d_19/kernel"
}
node {
  name: "VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "batch_normalization_5/moving_variance"
}
node {
  name: "VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "conv2d_13/kernel"
}
node {
  name: "VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/moving_mean"
}
node {
  name: "VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "conv2d_11/bias"
}
node {
  name: "VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "conv2d_5/kernel"
}
node {
  name: "VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "conv2d_15/kernel"
}
node {
  name: "VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "conv2d_18/bias"
}
node {
  name: "VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "conv2d_20/bias"
}
node {
  name: "VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "conv2d_6/kernel"
}
node {
  name: "VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "conv2d_5/bias"
}
node {
  name: "VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "conv2d_12/bias"
}
node {
  name: "VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "conv2d_4/kernel"
}
node {
  name: "VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "conv2d_20/kernel"
}
node {
  name: "VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/moving_variance"
}
node {
  name: "VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "batch_normalization_2/moving_mean"
}
node {
  name: "VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "conv2d_13/bias"
}
node {
  name: "VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "batch_normalization_5/beta"
}
node {
  name: "VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "y/kernel"
}
node {
  name: "VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "batch_normalization_1/beta"
}
node {
  name: "VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "conv2d_11/kernel"
}
node {
  name: "VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "conv2d_1/kernel"
}
node {
  name: "VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "conv2d_9/bias"
}
node {
  name: "VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "conv2d_4/bias"
}
node {
  name: "VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "conv2d_1/bias"
}
node {
  name: "VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "conv2d_8/kernel"
}
node {
  name: "VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "batch_normalization_2/gamma"
}
node {
  name: "VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
}
node {
  name: "VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "conv2d_3/kernel"
}
node {
  name: "VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "conv2d_12/kernel"
}
node {
  name: "VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "conv2d_15/bias"
}
node {
  name: "VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "batch_normalization_2/beta"
}
node {
  name: "VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "conv2d_14/bias"
}
node {
  name: "VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "conv2d_10/bias"
}
node {
  name: "init"
  op: "NoOp"
  input: "^batch_normalization_1/beta/Assign"
  input: "^batch_normalization_1/gamma/Assign"
  input: "^batch_normalization_1/moving_mean/Assign"
  input: "^batch_normalization_1/moving_variance/Assign"
  input: "^batch_normalization_2/beta/Assign"
  input: "^batch_normalization_2/gamma/Assign"
  input: "^batch_normalization_2/moving_mean/Assign"
  input: "^batch_normalization_2/moving_variance/Assign"
  input: "^batch_normalization_3/beta/Assign"
  input: "^batch_normalization_3/gamma/Assign"
  input: "^batch_normalization_3/moving_mean/Assign"
  input: "^batch_normalization_3/moving_variance/Assign"
  input: "^batch_normalization_4/beta/Assign"
  input: "^batch_normalization_4/gamma/Assign"
  input: "^batch_normalization_4/moving_mean/Assign"
  input: "^batch_normalization_4/moving_variance/Assign"
  input: "^batch_normalization_5/beta/Assign"
  input: "^batch_normalization_5/gamma/Assign"
  input: "^batch_normalization_5/moving_mean/Assign"
  input: "^batch_normalization_5/moving_variance/Assign"
  input: "^conv2d_1/bias/Assign"
  input: "^conv2d_1/kernel/Assign"
  input: "^conv2d_10/bias/Assign"
  input: "^conv2d_10/kernel/Assign"
  input: "^conv2d_11/bias/Assign"
  input: "^conv2d_11/kernel/Assign"
  input: "^conv2d_12/bias/Assign"
  input: "^conv2d_12/kernel/Assign"
  input: "^conv2d_13/bias/Assign"
  input: "^conv2d_13/kernel/Assign"
  input: "^conv2d_14/bias/Assign"
  input: "^conv2d_14/kernel/Assign"
  input: "^conv2d_15/bias/Assign"
  input: "^conv2d_15/kernel/Assign"
  input: "^conv2d_16/bias/Assign"
  input: "^conv2d_16/kernel/Assign"
  input: "^conv2d_17/bias/Assign"
  input: "^conv2d_17/kernel/Assign"
  input: "^conv2d_18/bias/Assign"
  input: "^conv2d_18/kernel/Assign"
  input: "^conv2d_19/bias/Assign"
  input: "^conv2d_19/kernel/Assign"
  input: "^conv2d_2/bias/Assign"
  input: "^conv2d_2/kernel/Assign"
  input: "^conv2d_20/bias/Assign"
  input: "^conv2d_20/kernel/Assign"
  input: "^conv2d_3/bias/Assign"
  input: "^conv2d_3/kernel/Assign"
  input: "^conv2d_4/bias/Assign"
  input: "^conv2d_4/kernel/Assign"
  input: "^conv2d_5/bias/Assign"
  input: "^conv2d_5/kernel/Assign"
  input: "^conv2d_6/bias/Assign"
  input: "^conv2d_6/kernel/Assign"
  input: "^conv2d_7/bias/Assign"
  input: "^conv2d_7/kernel/Assign"
  input: "^conv2d_8/bias/Assign"
  input: "^conv2d_8/kernel/Assign"
  input: "^conv2d_9/bias/Assign"
  input: "^conv2d_9/kernel/Assign"
  input: "^dense_1/bias/Assign"
  input: "^dense_1/kernel/Assign"
  input: "^y/bias/Assign"
  input: "^y/kernel/Assign"
}
node {
  name: "Adam/iterations/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "Adam/iterations"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/iterations"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam/iterations"
    }
  }
}
node {
  name: "Adam/iterations/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/iterations"
}
node {
  name: "Adam/iterations/Assign"
  op: "AssignVariableOp"
  input: "Adam/iterations"
  input: "Adam/iterations/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam/iterations/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/iterations"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Adam/lr/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/lr"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.3841283816873329e-06
      }
    }
  }
}
node {
  name: "Adam/lr"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/lr"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam/lr"
    }
  }
}
node {
  name: "Adam/lr/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/lr"
}
node {
  name: "Adam/lr/Assign"
  op: "AssignVariableOp"
  input: "Adam/lr"
  input: "Adam/lr/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/lr"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/lr/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/lr"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/lr"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/beta_1/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam/beta_1"
    }
  }
}
node {
  name: "Adam/beta_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/beta_1"
}
node {
  name: "Adam/beta_1/Assign"
  op: "AssignVariableOp"
  input: "Adam/beta_1"
  input: "Adam/beta_1/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/beta_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/beta_2/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/beta_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam/beta_2"
    }
  }
}
node {
  name: "Adam/beta_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/beta_2"
}
node {
  name: "Adam/beta_2/Assign"
  op: "AssignVariableOp"
  input: "Adam/beta_2"
  input: "Adam/beta_2/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/beta_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Adam/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/decay"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Adam/decay"
    }
  }
}
node {
  name: "Adam/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Adam/decay"
}
node {
  name: "Adam/decay/Assign"
  op: "AssignVariableOp"
  input: "Adam/decay"
  input: "Adam/decay/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/decay"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "y_sample_weights"
  op: "PlaceholderWithDefault"
  input: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total"
    }
  }
}
node {
  name: "total/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "total/Assign"
  op: "AssignVariableOp"
  input: "total"
  input: "total/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count"
    }
  }
}
node {
  name: "count/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "count/Assign"
  op: "AssignVariableOp"
  input: "count"
  input: "count/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_1"
    }
  }
}
node {
  name: "total_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_1"
}
node {
  name: "total_1/Assign"
  op: "AssignVariableOp"
  input: "total_1"
  input: "total_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_1"
    }
  }
}
node {
  name: "count_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_1"
}
node {
  name: "count_1/Assign"
  op: "AssignVariableOp"
  input: "count_1"
  input: "count_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/y_loss/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/y_loss/Sum"
  op: "Sum"
  input: "y/Softmax"
  input: "loss/y_loss/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "loss/y_loss/truediv"
  op: "RealDiv"
  input: "y/Softmax"
  input: "loss/y_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/y_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "loss/y_loss/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/y_loss/sub"
  op: "Sub"
  input: "loss/y_loss/sub/x"
  input: "loss/y_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/y_loss/clip_by_value/Minimum"
  op: "Minimum"
  input: "loss/y_loss/truediv"
  input: "loss/y_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/y_loss/clip_by_value"
  op: "Maximum"
  input: "loss/y_loss/clip_by_value/Minimum"
  input: "loss/y_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/y_loss/Log"
  op: "Log"
  input: "loss/y_loss/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/y_loss/mul"
  op: "Mul"
  input: "y_target"
  input: "loss/y_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/y_loss/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/y_loss/Sum_1"
  op: "Sum"
  input: "loss/y_loss/mul"
  input: "loss/y_loss/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/y_loss/Neg"
  op: "Neg"
  input: "loss/y_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Shape"
  input: "y_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "loss/y_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_scalar/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_scalar"
  op: "Equal"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_scalar/x"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/weights/rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch"
  op: "Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_scalar"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_scalar"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/switch_t"
  op: "Identity"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/switch_f"
  op: "Identity"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
  op: "Identity"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_scalar"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch_1"
  op: "Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_scalar"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/broadcast_weights/assert_broadcastable/is_scalar"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  op: "Equal"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
  op: "Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/values/rank"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/broadcast_weights/assert_broadcastable/values/rank"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
  op: "Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/weights/rank"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/broadcast_weights/assert_broadcastable/weights/rank"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
  op: "Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  op: "Identity"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_f"
  op: "Identity"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  op: "Identity"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
  op: "Const"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  op: "ExpandDims"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1:1"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
  op: "Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/values/shape"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/broadcast_weights/assert_broadcastable/values/shape"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1"
  op: "Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/broadcast_weights/assert_broadcastable/values/shape"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
  op: "Const"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
  op: "Const"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
  op: "Fill"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
  op: "Const"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
  op: "ConcatV2"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
  op: "Const"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
  op: "ExpandDims"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1:1"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
  op: "Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/weights/shape"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/broadcast_weights/assert_broadcastable/weights/shape"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1"
  op: "Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/broadcast_weights/assert_broadcastable/weights/shape"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation"
  op: "DenseToDenseSetOperation"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "set_operation"
    value {
      s: "a-b"
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
  op: "Size"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
  op: "Const"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
  op: "Equal"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
  op: "Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
  op: "Merge"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
  op: "Merge"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights can not be broadcast to values."
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights.shape="
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y_sample_weights:0"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "values.shape="
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/y_loss/Neg:0"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "is_scalar="
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Switch"
  op: "Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_t"
  op: "Identity"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
  op: "Identity"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id"
  op: "Identity"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/NoOp"
  op: "NoOp"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_t"
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency"
  op: "Identity"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_t"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights can not be broadcast to values."
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "weights.shape="
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y_sample_weights:0"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "values.shape="
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_5"
  op: "Const"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/y_loss/Neg:0"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_7"
  op: "Const"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "is_scalar="
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert"
  op: "Assert"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_0"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_1"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_2"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_1"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_4"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_5"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_2"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_7"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_3"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_BOOL
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/weights/shape"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/broadcast_weights/assert_broadcastable/weights/shape"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/values/shape"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/broadcast_weights/assert_broadcastable/values/shape"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_3"
  op: "Switch"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/is_scalar"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/broadcast_weights/assert_broadcastable/is_scalar"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Merge"
  op: "Merge"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency_1"
  input: "loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "loss/y_loss/Neg"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^loss/y_loss/broadcast_weights/assert_broadcastable/AssertGuard/Merge"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "loss/y_loss/broadcast_weights/ones_like/Shape"
  input: "loss/y_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/y_loss/broadcast_weights"
  op: "Mul"
  input: "y_sample_weights"
  input: "loss/y_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/y_loss/Mul_1"
  op: "Mul"
  input: "loss/y_loss/Neg"
  input: "loss/y_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/y_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/y_loss/Sum_2"
  op: "Sum"
  input: "loss/y_loss/Mul_1"
  input: "loss/y_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/y_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/y_loss/Sum_3"
  op: "Sum"
  input: "loss/y_loss/broadcast_weights"
  input: "loss/y_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/y_loss/div_no_nan"
  op: "DivNoNan"
  input: "loss/y_loss/Sum_2"
  input: "loss/y_loss/Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/y_loss/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/y_loss/Mean"
  op: "Mean"
  input: "loss/y_loss/div_no_nan"
  input: "loss/y_loss/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/mul/x"
  input: "loss/y_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax"
  op: "ArgMax"
  input: "y_target"
  input: "metrics/acc/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax_1"
  op: "ArgMax"
  input: "y/Softmax"
  input: "metrics/acc/ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/Equal"
  op: "Equal"
  input: "metrics/acc/ArgMax"
  input: "metrics/acc/ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/Cast"
  op: "Cast"
  input: "metrics/acc/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/Size"
  op: "Size"
  input: "metrics/acc/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/acc/Cast_1"
  op: "Cast"
  input: "metrics/acc/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/acc/Sum"
  op: "Sum"
  input: "metrics/acc/Cast"
  input: "metrics/acc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total"
  input: "metrics/acc/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/acc/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count"
  input: "metrics/acc/Cast_1"
  input: "^metrics/acc/ReadVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/acc/AssignAddVariableOp_1"
  input: "^metrics/acc/ReadVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/acc/ReadVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/acc/ReadVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan"
  op: "DivNoNan"
  input: "metrics/acc/div_no_nan/ReadVariableOp"
  input: "metrics/acc/div_no_nan/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ArgMax_2/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax_2"
  op: "ArgMax"
  input: "y_target"
  input: "metrics/acc/ArgMax_2/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/ArgMax_3/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax_3"
  op: "ArgMax"
  input: "y/Softmax"
  input: "metrics/acc/ArgMax_3/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/Equal_1"
  op: "Equal"
  input: "metrics/acc/ArgMax_2"
  input: "metrics/acc/ArgMax_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/Cast_2"
  op: "Cast"
  input: "metrics/acc/Equal_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/acc/Mean"
  op: "Mean"
  input: "metrics/acc/Cast_2"
  input: "metrics/acc/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/get_f1/mul"
  op: "Mul"
  input: "y_target"
  input: "y/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/get_f1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "metrics/get_f1/clip_by_value/Minimum"
  op: "Minimum"
  input: "metrics/get_f1/mul"
  input: "metrics/get_f1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/clip_by_value"
  op: "Maximum"
  input: "metrics/get_f1/clip_by_value/Minimum"
  input: "metrics/get_f1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/Round"
  op: "Round"
  input: "metrics/get_f1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/get_f1/Sum"
  op: "Sum"
  input: "metrics/get_f1/Round"
  input: "metrics/get_f1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/get_f1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/get_f1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "metrics/get_f1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "y_target"
  input: "metrics/get_f1/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/clip_by_value_1"
  op: "Maximum"
  input: "metrics/get_f1/clip_by_value_1/Minimum"
  input: "metrics/get_f1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/Round_1"
  op: "Round"
  input: "metrics/get_f1/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/get_f1/Sum_1"
  op: "Sum"
  input: "metrics/get_f1/Round_1"
  input: "metrics/get_f1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/get_f1/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/get_f1/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "metrics/get_f1/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "y/Softmax"
  input: "metrics/get_f1/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/clip_by_value_2"
  op: "Maximum"
  input: "metrics/get_f1/clip_by_value_2/Minimum"
  input: "metrics/get_f1/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/Round_2"
  op: "Round"
  input: "metrics/get_f1/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/get_f1/Sum_2"
  op: "Sum"
  input: "metrics/get_f1/Round_2"
  input: "metrics/get_f1/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/get_f1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "metrics/get_f1/add"
  op: "Add"
  input: "metrics/get_f1/Sum_2"
  input: "metrics/get_f1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/truediv"
  op: "RealDiv"
  input: "metrics/get_f1/Sum"
  input: "metrics/get_f1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "metrics/get_f1/add_1"
  op: "Add"
  input: "metrics/get_f1/Sum_1"
  input: "metrics/get_f1/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/truediv_1"
  op: "RealDiv"
  input: "metrics/get_f1/Sum"
  input: "metrics/get_f1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/mul_1"
  op: "Mul"
  input: "metrics/get_f1/truediv"
  input: "metrics/get_f1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "metrics/get_f1/mul_2"
  op: "Mul"
  input: "metrics/get_f1/mul_2/x"
  input: "metrics/get_f1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/add_2"
  op: "Add"
  input: "metrics/get_f1/truediv"
  input: "metrics/get_f1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "metrics/get_f1/add_3"
  op: "Add"
  input: "metrics/get_f1/add_2"
  input: "metrics/get_f1/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/truediv_2"
  op: "RealDiv"
  input: "metrics/get_f1/mul_2"
  input: "metrics/get_f1/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/get_f1/Cast"
  op: "Cast"
  input: "metrics/get_f1/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/get_f1/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "metrics/get_f1/Sum_3"
  op: "Sum"
  input: "metrics/get_f1/truediv_2"
  input: "metrics/get_f1/Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/get_f1/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_1"
  input: "metrics/get_f1/Sum_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_1"
  input: "^metrics/get_f1/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_1"
  input: "metrics/get_f1/Cast"
  input: "^metrics/get_f1/ReadVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_1"
  input: "^metrics/get_f1/AssignAddVariableOp_1"
  input: "^metrics/get_f1/ReadVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/div_no_nan/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_1"
  input: "^metrics/get_f1/ReadVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/div_no_nan/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_1"
  input: "^metrics/get_f1/ReadVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/div_no_nan"
  op: "DivNoNan"
  input: "metrics/get_f1/div_no_nan/ReadVariableOp"
  input: "metrics/get_f1/div_no_nan/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/mul_3"
  op: "Mul"
  input: "y_target"
  input: "y/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/get_f1/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "metrics/get_f1/clip_by_value_3/Minimum"
  op: "Minimum"
  input: "metrics/get_f1/mul_3"
  input: "metrics/get_f1/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/clip_by_value_3"
  op: "Maximum"
  input: "metrics/get_f1/clip_by_value_3/Minimum"
  input: "metrics/get_f1/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/Round_3"
  op: "Round"
  input: "metrics/get_f1/clip_by_value_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/get_f1/Sum_4"
  op: "Sum"
  input: "metrics/get_f1/Round_3"
  input: "metrics/get_f1/Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/get_f1/Const_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/get_f1/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "metrics/get_f1/clip_by_value_4/Minimum"
  op: "Minimum"
  input: "y_target"
  input: "metrics/get_f1/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/clip_by_value_4"
  op: "Maximum"
  input: "metrics/get_f1/clip_by_value_4/Minimum"
  input: "metrics/get_f1/Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/Round_4"
  op: "Round"
  input: "metrics/get_f1/clip_by_value_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/get_f1/Sum_5"
  op: "Sum"
  input: "metrics/get_f1/Round_4"
  input: "metrics/get_f1/Const_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/get_f1/Const_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/get_f1/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "metrics/get_f1/clip_by_value_5/Minimum"
  op: "Minimum"
  input: "y/Softmax"
  input: "metrics/get_f1/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/clip_by_value_5"
  op: "Maximum"
  input: "metrics/get_f1/clip_by_value_5/Minimum"
  input: "metrics/get_f1/Const_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/Round_5"
  op: "Round"
  input: "metrics/get_f1/clip_by_value_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/get_f1/Sum_6"
  op: "Sum"
  input: "metrics/get_f1/Round_5"
  input: "metrics/get_f1/Const_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/get_f1/add_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "metrics/get_f1/add_4"
  op: "Add"
  input: "metrics/get_f1/Sum_6"
  input: "metrics/get_f1/add_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/truediv_3"
  op: "RealDiv"
  input: "metrics/get_f1/Sum_4"
  input: "metrics/get_f1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/add_5/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "metrics/get_f1/add_5"
  op: "Add"
  input: "metrics/get_f1/Sum_5"
  input: "metrics/get_f1/add_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/truediv_4"
  op: "RealDiv"
  input: "metrics/get_f1/Sum_4"
  input: "metrics/get_f1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/mul_4"
  op: "Mul"
  input: "metrics/get_f1/truediv_3"
  input: "metrics/get_f1/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/mul_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "metrics/get_f1/mul_5"
  op: "Mul"
  input: "metrics/get_f1/mul_5/x"
  input: "metrics/get_f1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/add_6"
  op: "Add"
  input: "metrics/get_f1/truediv_3"
  input: "metrics/get_f1/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/add_7/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "metrics/get_f1/add_7"
  op: "Add"
  input: "metrics/get_f1/add_6"
  input: "metrics/get_f1/add_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/truediv_5"
  op: "RealDiv"
  input: "metrics/get_f1/mul_5"
  input: "metrics/get_f1/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/get_f1/Const_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "metrics/get_f1/Mean"
  op: "Mean"
  input: "metrics/get_f1/truediv_5"
  input: "metrics/get_f1/Const_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/Fill"
  op: "Fill"
  input: "training/Adam/gradients/Shape"
  input: "training/Adam/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/Fill"
  input: "loss/y_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/mul_grad/Mul_1"
  op: "Mul"
  input: "training/Adam/gradients/Fill"
  input: "loss/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/mul_grad/Mul_1"
  input: "training/Adam/gradients/loss/y_loss/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Mean_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/loss/y_loss/Mean_grad/Reshape"
  input: "training/Adam/gradients/loss/y_loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/y_loss/Mean_grad/Tile"
  input: "training/Adam/gradients/loss/y_loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/div_no_nan"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/div_no_nan"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/Shape"
  input: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/div_no_nan"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/div_no_nan"
  op: "DivNoNan"
  input: "training/Adam/gradients/loss/y_loss/Mean_grad/truediv"
  input: "loss/y_loss/Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/div_no_nan"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/div_no_nan"
  input: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/div_no_nan"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/Sum"
  input: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/div_no_nan"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/Neg"
  op: "Neg"
  input: "loss/y_loss/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/div_no_nan"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/Neg"
  input: "loss/y_loss/Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/div_no_nan"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/div_no_nan_1"
  input: "loss/y_loss/Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/div_no_nan"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/y_loss/Mean_grad/truediv"
  input: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/div_no_nan"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/mul"
  input: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/div_no_nan"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/Sum_1"
  input: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/div_no_nan"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/y_loss/div_no_nan_grad/Reshape"
  input: "training/Adam/gradients/loss/y_loss/Sum_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_2"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_2_grad/Shape"
  op: "Shape"
  input: "loss/y_loss/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_2"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_2_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/loss/y_loss/Sum_2_grad/Reshape"
  input: "training/Adam/gradients/loss/y_loss/Sum_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_2"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Shape"
  op: "Shape"
  input: "loss/y_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Shape_1"
  op: "Shape"
  input: "loss/y_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Shape"
  input: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Mul_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/y_loss/Sum_2_grad/Tile"
  input: "loss/y_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Mul_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Mul"
  input: "training/Adam/gradients/loss/y_loss/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Sum"
  input: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Mul_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "loss/y_loss/Neg"
  input: "training/Adam/gradients/loss/y_loss/Sum_2_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Mul_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Mul_1"
  input: "training/Adam/gradients/loss/y_loss/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Sum_1"
  input: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Mul_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Neg_grad/Neg"
  op: "Neg"
  input: "training/Adam/gradients/loss/y_loss/Mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Neg"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Shape"
  op: "Shape"
  input: "loss/y_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_1_grad/add"
  op: "Add"
  input: "loss/y_loss/Sum_1/reduction_indices"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_1_grad/mod"
  op: "FloorMod"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/add"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_1_grad/range"
  op: "Range"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/range/start"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Size"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Fill"
  op: "Fill"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Shape_1"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/range"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/mod"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Shape"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/DynamicStitch"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Shape"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/y_loss/Neg_grad/Neg"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Reshape"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/mul_grad/Shape"
  op: "Shape"
  input: "y_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "loss/y_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/y_loss/mul_grad/Shape"
  input: "training/Adam/gradients/loss/y_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Tile"
  input: "loss/y_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/mul_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/y_loss/mul_grad/Mul"
  input: "training/Adam/gradients/loss/y_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/y_loss/mul_grad/Sum"
  input: "training/Adam/gradients/loss/y_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "y_target"
  input: "training/Adam/gradients/loss/y_loss/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/y_loss/mul_grad/Mul_1"
  input: "training/Adam/gradients/loss/y_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/y_loss/mul_grad/Sum_1"
  input: "training/Adam/gradients/loss/y_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "loss/y_loss/clip_by_value"
  input: "^training/Adam/gradients/loss/y_loss/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Log"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Log_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/y_loss/mul_grad/Reshape_1"
  input: "training/Adam/gradients/loss/y_loss/Log_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Log"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Shape"
  op: "Shape"
  input: "loss/y_loss/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "training/Adam/gradients/loss/y_loss/Log_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/zeros"
  op: "Fill"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Shape_2"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "loss/y_loss/clip_by_value/Minimum"
  input: "loss/y_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Shape"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Select"
  op: "Select"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/GreaterEqual"
  input: "training/Adam/gradients/loss/y_loss/Log_grad/mul"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Select_1"
  op: "Select"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/GreaterEqual"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/zeros"
  input: "training/Adam/gradients/loss/y_loss/Log_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Select"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Sum"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Select_1"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Sum_1"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "loss/y_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Shape_2"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "loss/y_loss/truediv"
  input: "loss/y_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Shape"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/LessEqual"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Reshape"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/LessEqual"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/zeros"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Select"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Sum"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Select_1"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Sum_1"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/truediv_grad/Shape"
  op: "Shape"
  input: "y/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/truediv_grad/Shape_1"
  op: "Shape"
  input: "loss/y_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/loss/y_loss/truediv_grad/Shape"
  input: "training/Adam/gradients/loss/y_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Reshape"
  input: "loss/y_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/truediv_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/loss/y_loss/truediv_grad/RealDiv"
  input: "training/Adam/gradients/loss/y_loss/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/truediv_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/y_loss/truediv_grad/Sum"
  input: "training/Adam/gradients/loss/y_loss/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/truediv_grad/Neg"
  op: "Neg"
  input: "y/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/y_loss/truediv_grad/Neg"
  input: "loss/y_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/Adam/gradients/loss/y_loss/truediv_grad/RealDiv_1"
  input: "loss/y_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/truediv_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/loss/y_loss/clip_by_value/Minimum_grad/Reshape"
  input: "training/Adam/gradients/loss/y_loss/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/truediv_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/loss/y_loss/truediv_grad/mul"
  input: "training/Adam/gradients/loss/y_loss/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/loss/y_loss/truediv_grad/Sum_1"
  input: "training/Adam/gradients/loss/y_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_grad/Shape"
  op: "Shape"
  input: "y/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_grad/add"
  op: "Add"
  input: "loss/y_loss/Sum/reduction_indices"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_grad/mod"
  op: "FloorMod"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/add"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_grad/range"
  op: "Range"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/range/start"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/Size"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_grad/Fill"
  op: "Fill"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/Shape_1"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/range"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/mod"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/Shape"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_grad/Maximum"
  op: "Maximum"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/DynamicStitch"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/Shape"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/loss/y_loss/truediv_grad/Reshape_1"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/loss/y_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/Reshape"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/AddN"
  op: "AddN"
  input: "training/Adam/gradients/loss/y_loss/truediv_grad/Reshape"
  input: "training/Adam/gradients/loss/y_loss/Sum_grad/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/y/Softmax_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/AddN"
  input: "y/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/Softmax"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/y/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/Softmax"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/y/Softmax_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/y/Softmax_grad/mul"
  input: "training/Adam/gradients/y/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/Softmax"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/y/Softmax_grad/sub"
  op: "Sub"
  input: "training/Adam/gradients/AddN"
  input: "training/Adam/gradients/y/Softmax_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/Softmax"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/y/Softmax_grad/mul_1"
  op: "Mul"
  input: "training/Adam/gradients/y/Softmax_grad/sub"
  input: "y/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/Softmax"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/y/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/y/Softmax_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/y/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adam/gradients/y/Softmax_grad/mul_1"
  input: "y/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/y/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout_2/Identity"
  input: "training/Adam/gradients/y/Softmax_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/dense_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/y/MatMul_grad/MatMul"
  input: "dense_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/dense_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adam/gradients/dense_1/Relu_grad/ReluGrad"
  input: "dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "batch_normalization_5/batchnorm/add_1"
  input: "training/Adam/gradients/dense_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_5/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Shape"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/dense_1/MatMul_grad/MatMul"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Sum"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/dense_1/MatMul_grad/MatMul"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Sum_1"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "global_average_pooling2d_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Shape"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_5/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Mul"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Sum"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "global_average_pooling2d_1/Mean"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Mul_1"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Sum_1"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape"
  op: "Shape"
  input: "dropout_1/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/add"
  op: "Add"
  input: "global_average_pooling2d_1/Mean/reduction_indices"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/mod"
  op: "FloorMod"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/add"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/range"
  op: "Range"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/range/start"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Size"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Fill"
  op: "Fill"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape_1"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/range"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/mod"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Maximum"
  op: "Maximum"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/DynamicStitch"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Reshape"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Reshape"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape_2"
  op: "Shape"
  input: "dropout_1/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape_3"
  op: "Shape"
  input: "global_average_pooling2d_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Prod"
  op: "Prod"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape_2"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Prod_1"
  op: "Prod"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Shape_3"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Prod_1"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Prod"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Cast"
  op: "Cast"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/truediv"
  op: "RealDiv"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Tile"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1/Mean"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/sub_grad/Neg"
  input: "batch_normalization_5/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/sub_grad/Neg"
  input: "batch_normalization_5/batchnorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/AddN_1"
  op: "AddN"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_1_grad/Reshape_1"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/AddN_1"
  input: "batch_normalization_5/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training/Adam/gradients/AddN_1"
  input: "batch_normalization_5/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/max_pooling2d_6/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "activation_4/Relu"
  input: "max_pooling2d_6/MaxPool"
  input: "training/Adam/gradients/global_average_pooling2d_1/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6/MaxPool"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/activation_4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/max_pooling2d_6/MaxPool_grad/MaxPoolGrad"
  input: "activation_4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_4/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like"
  op: "ZerosLike"
  input: "batch_normalization_4/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "batch_normalization_4/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "batch_normalization_4/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "batch_normalization_4/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/activation_4/Relu_grad/ReluGrad"
  input: "add_3/add"
  input: "batch_normalization_4/ReadVariableOp"
  input: "batch_normalization_4/FusedBatchNorm/ReadVariableOp"
  input: "batch_normalization_4/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/add_3/add_grad/Shape"
  op: "Shape"
  input: "concatenate_3/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_3/add"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/add_3/add_grad/Shape_1"
  op: "Shape"
  input: "max_pooling2d_5/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_3/add"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/add_3/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/add_3/add_grad/Shape"
  input: "training/Adam/gradients/add_3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_3/add"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/add_3/add_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "training/Adam/gradients/add_3/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_3/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/add_3/add_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/add_3/add_grad/Sum"
  input: "training/Adam/gradients/add_3/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_3/add"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/add_3/add_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "training/Adam/gradients/add_3/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_3/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/add_3/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/add_3/add_grad/Sum_1"
  input: "training/Adam/gradients/add_3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_3/add"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_3/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_3/concat_grad/mod"
  op: "FloorMod"
  input: "concatenate_3/concat/axis"
  input: "training/Adam/gradients/concatenate_3/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3/concat"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_3/concat_grad/Shape"
  op: "Shape"
  input: "conv2d_18/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_3/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_18/Relu"
  input: "conv2d_20/Relu"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_3/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "training/Adam/gradients/concatenate_3/concat_grad/mod"
  input: "training/Adam/gradients/concatenate_3/concat_grad/ShapeN"
  input: "training/Adam/gradients/concatenate_3/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3/concat"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_3/concat_grad/Slice"
  op: "Slice"
  input: "training/Adam/gradients/add_3/add_grad/Reshape"
  input: "training/Adam/gradients/concatenate_3/concat_grad/ConcatOffset"
  input: "training/Adam/gradients/concatenate_3/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3/concat"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_3/concat_grad/Slice_1"
  op: "Slice"
  input: "training/Adam/gradients/add_3/add_grad/Reshape"
  input: "training/Adam/gradients/concatenate_3/concat_grad/ConcatOffset:1"
  input: "training/Adam/gradients/concatenate_3/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3/concat"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_18/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/concatenate_3/concat_grad/Slice"
  input: "conv2d_18/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_20/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/concatenate_3/concat_grad/Slice_1"
  input: "conv2d_20/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_18/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_18/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_20/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_20/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_18/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_5/MaxPool"
  input: "conv2d_18/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_18/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_18/Conv2D_grad/ShapeN"
  input: "conv2d_18/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_18/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_18/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_5/MaxPool"
  input: "training/Adam/gradients/conv2d_18/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_18/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_20/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_19/Relu"
  input: "conv2d_20/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_20/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_20/Conv2D_grad/ShapeN"
  input: "conv2d_20/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_20/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_20/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_19/Relu"
  input: "training/Adam/gradients/conv2d_20/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_20/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_19/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/conv2d_20/Conv2D_grad/Conv2DBackpropInput"
  input: "conv2d_19/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_19/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_19/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_19/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_5/MaxPool"
  input: "conv2d_19/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_19/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_19/Conv2D_grad/ShapeN"
  input: "conv2d_19/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_19/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_19/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_5/MaxPool"
  input: "training/Adam/gradients/conv2d_19/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_19/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/AddN_2"
  op: "AddN"
  input: "training/Adam/gradients/add_3/add_grad/Reshape_1"
  input: "training/Adam/gradients/conv2d_18/Conv2D_grad/Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_19/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_3/add"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/max_pooling2d_5/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_17/Relu"
  input: "max_pooling2d_5/MaxPool"
  input: "training/Adam/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_5/MaxPool"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_17/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/max_pooling2d_5/MaxPool_grad/MaxPoolGrad"
  input: "conv2d_17/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_17/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_17/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_17/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "activation_3/Relu"
  input: "conv2d_17/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_17/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_17/Conv2D_grad/ShapeN"
  input: "conv2d_17/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_17/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_17/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "activation_3/Relu"
  input: "training/Adam/gradients/conv2d_17/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_17/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/activation_3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/conv2d_17/Conv2D_grad/Conv2DBackpropInput"
  input: "activation_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_3/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "batch_normalization_3/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "batch_normalization_3/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "batch_normalization_3/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "batch_normalization_3/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/activation_3/Relu_grad/ReluGrad"
  input: "add_2/add"
  input: "batch_normalization_3/ReadVariableOp"
  input: "batch_normalization_3/FusedBatchNorm/ReadVariableOp"
  input: "batch_normalization_3/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/add_2/add_grad/Shape"
  op: "Shape"
  input: "concatenate_2/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_2/add"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/add_2/add_grad/Shape_1"
  op: "Shape"
  input: "max_pooling2d_3/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_2/add"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/add_2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/add_2/add_grad/Shape"
  input: "training/Adam/gradients/add_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_2/add"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/add_2/add_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "training/Adam/gradients/add_2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_2/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/add_2/add_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/add_2/add_grad/Sum"
  input: "training/Adam/gradients/add_2/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_2/add"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/add_2/add_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "training/Adam/gradients/add_2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_2/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/add_2/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/add_2/add_grad/Sum_1"
  input: "training/Adam/gradients/add_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_2/add"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_2/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_2/concat_grad/mod"
  op: "FloorMod"
  input: "concatenate_2/concat/axis"
  input: "training/Adam/gradients/concatenate_2/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2/concat"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_2/concat_grad/Shape"
  op: "Shape"
  input: "conv2d_13/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_2/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_13/Relu"
  input: "conv2d_15/Relu"
  input: "max_pooling2d_4/MaxPool"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_2/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "training/Adam/gradients/concatenate_2/concat_grad/mod"
  input: "training/Adam/gradients/concatenate_2/concat_grad/ShapeN"
  input: "training/Adam/gradients/concatenate_2/concat_grad/ShapeN:1"
  input: "training/Adam/gradients/concatenate_2/concat_grad/ShapeN:2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2/concat"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_2/concat_grad/Slice"
  op: "Slice"
  input: "training/Adam/gradients/add_2/add_grad/Reshape"
  input: "training/Adam/gradients/concatenate_2/concat_grad/ConcatOffset"
  input: "training/Adam/gradients/concatenate_2/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2/concat"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_2/concat_grad/Slice_1"
  op: "Slice"
  input: "training/Adam/gradients/add_2/add_grad/Reshape"
  input: "training/Adam/gradients/concatenate_2/concat_grad/ConcatOffset:1"
  input: "training/Adam/gradients/concatenate_2/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2/concat"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_2/concat_grad/Slice_2"
  op: "Slice"
  input: "training/Adam/gradients/add_2/add_grad/Reshape"
  input: "training/Adam/gradients/concatenate_2/concat_grad/ConcatOffset:2"
  input: "training/Adam/gradients/concatenate_2/concat_grad/ShapeN:2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2/concat"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_13/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/concatenate_2/concat_grad/Slice"
  input: "conv2d_13/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_15/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/concatenate_2/concat_grad/Slice_1"
  input: "conv2d_15/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/max_pooling2d_4/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_16/Relu"
  input: "max_pooling2d_4/MaxPool"
  input: "training/Adam/gradients/concatenate_2/concat_grad/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_4/MaxPool"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_13/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_13/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_15/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_15/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_16/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/max_pooling2d_4/MaxPool_grad/MaxPoolGrad"
  input: "conv2d_16/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_13/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_3/MaxPool"
  input: "conv2d_13/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_13/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_13/Conv2D_grad/ShapeN"
  input: "conv2d_13/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_13/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_13/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_3/MaxPool"
  input: "training/Adam/gradients/conv2d_13/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_13/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_15/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_14/Relu"
  input: "conv2d_15/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_15/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_15/Conv2D_grad/ShapeN"
  input: "conv2d_15/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_15/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_15/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_14/Relu"
  input: "training/Adam/gradients/conv2d_15/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_15/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_16/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_16/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_14/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/conv2d_15/Conv2D_grad/Conv2DBackpropInput"
  input: "conv2d_14/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_16/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_3/MaxPool"
  input: "conv2d_16/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_16/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_16/Conv2D_grad/ShapeN"
  input: "conv2d_16/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_16/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_16/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_3/MaxPool"
  input: "training/Adam/gradients/conv2d_16/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_16/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_14/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_14/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_14/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_3/MaxPool"
  input: "conv2d_14/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_14/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_14/Conv2D_grad/ShapeN"
  input: "conv2d_14/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_14/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_14/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_3/MaxPool"
  input: "training/Adam/gradients/conv2d_14/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_14/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/AddN_3"
  op: "AddN"
  input: "training/Adam/gradients/add_2/add_grad/Reshape_1"
  input: "training/Adam/gradients/conv2d_13/Conv2D_grad/Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_16/Conv2D_grad/Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_14/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_2/add"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/max_pooling2d_3/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_12/Relu"
  input: "max_pooling2d_3/MaxPool"
  input: "training/Adam/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_3/MaxPool"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_12/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/max_pooling2d_3/MaxPool_grad/MaxPoolGrad"
  input: "conv2d_12/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_12/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_12/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_12/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "activation_2/Relu"
  input: "conv2d_12/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_12/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_12/Conv2D_grad/ShapeN"
  input: "conv2d_12/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_12/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_12/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "activation_2/Relu"
  input: "training/Adam/gradients/conv2d_12/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_12/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/activation_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/conv2d_12/Conv2D_grad/Conv2DBackpropInput"
  input: "activation_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_2/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "batch_normalization_2/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_9"
  op: "ZerosLike"
  input: "batch_normalization_2/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_10"
  op: "ZerosLike"
  input: "batch_normalization_2/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_11"
  op: "ZerosLike"
  input: "batch_normalization_2/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/activation_2/Relu_grad/ReluGrad"
  input: "add_1/add"
  input: "batch_normalization_2/ReadVariableOp"
  input: "batch_normalization_2/FusedBatchNorm/ReadVariableOp"
  input: "batch_normalization_2/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/add_1/add_grad/Shape"
  op: "Shape"
  input: "concatenate_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_1/add"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/add_1/add_grad/Shape_1"
  op: "Shape"
  input: "max_pooling2d_1/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_1/add"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/add_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/add_1/add_grad/Shape"
  input: "training/Adam/gradients/add_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_1/add"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/add_1/add_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "training/Adam/gradients/add_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_1/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/add_1/add_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/add_1/add_grad/Sum"
  input: "training/Adam/gradients/add_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_1/add"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/add_1/add_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "training/Adam/gradients/add_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_1/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/add_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/add_1/add_grad/Sum_1"
  input: "training/Adam/gradients/add_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_1/add"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_1/concat_grad/mod"
  op: "FloorMod"
  input: "concatenate_1/concat/axis"
  input: "training/Adam/gradients/concatenate_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1/concat"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_1/concat_grad/Shape"
  op: "Shape"
  input: "conv2d_5/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_5/Relu"
  input: "conv2d_7/Relu"
  input: "conv2d_10/Relu"
  input: "max_pooling2d_2/MaxPool"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "training/Adam/gradients/concatenate_1/concat_grad/mod"
  input: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN"
  input: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN:1"
  input: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN:2"
  input: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN:3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1/concat"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_1/concat_grad/Slice"
  op: "Slice"
  input: "training/Adam/gradients/add_1/add_grad/Reshape"
  input: "training/Adam/gradients/concatenate_1/concat_grad/ConcatOffset"
  input: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1/concat"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_1/concat_grad/Slice_1"
  op: "Slice"
  input: "training/Adam/gradients/add_1/add_grad/Reshape"
  input: "training/Adam/gradients/concatenate_1/concat_grad/ConcatOffset:1"
  input: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1/concat"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_1/concat_grad/Slice_2"
  op: "Slice"
  input: "training/Adam/gradients/add_1/add_grad/Reshape"
  input: "training/Adam/gradients/concatenate_1/concat_grad/ConcatOffset:2"
  input: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN:2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1/concat"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/concatenate_1/concat_grad/Slice_3"
  op: "Slice"
  input: "training/Adam/gradients/add_1/add_grad/Reshape"
  input: "training/Adam/gradients/concatenate_1/concat_grad/ConcatOffset:3"
  input: "training/Adam/gradients/concatenate_1/concat_grad/ShapeN:3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1/concat"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_5/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/concatenate_1/concat_grad/Slice"
  input: "conv2d_5/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_7/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/concatenate_1/concat_grad/Slice_1"
  input: "conv2d_7/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_10/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/concatenate_1/concat_grad/Slice_2"
  input: "conv2d_10/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/max_pooling2d_2/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_11/Relu"
  input: "max_pooling2d_2/MaxPool"
  input: "training/Adam/gradients/concatenate_1/concat_grad/Slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_2/MaxPool"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_5/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_5/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_7/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_10/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_10/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_11/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/max_pooling2d_2/MaxPool_grad/MaxPoolGrad"
  input: "conv2d_11/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_5/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_1/MaxPool"
  input: "conv2d_5/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_5/Conv2D_grad/ShapeN"
  input: "conv2d_5/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_5/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_1/MaxPool"
  input: "training/Adam/gradients/conv2d_5/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_5/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_7/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_6/Relu"
  input: "conv2d_7/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_7/Conv2D_grad/ShapeN"
  input: "conv2d_7/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_7/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_6/Relu"
  input: "training/Adam/gradients/conv2d_7/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_7/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_10/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_9/Relu"
  input: "conv2d_10/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_10/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_10/Conv2D_grad/ShapeN"
  input: "conv2d_10/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_10/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_10/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_9/Relu"
  input: "training/Adam/gradients/conv2d_10/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_10/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_11/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_11/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_6/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
  input: "conv2d_6/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_9/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/conv2d_10/Conv2D_grad/Conv2DBackpropInput"
  input: "conv2d_9/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_11/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_1/MaxPool"
  input: "conv2d_11/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_11/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_11/Conv2D_grad/ShapeN"
  input: "conv2d_11/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_11/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_11/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_1/MaxPool"
  input: "training/Adam/gradients/conv2d_11/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_11/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_6/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_9/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_9/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_6/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_1/MaxPool"
  input: "conv2d_6/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_6/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_6/Conv2D_grad/ShapeN"
  input: "conv2d_6/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_6/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_1/MaxPool"
  input: "training/Adam/gradients/conv2d_6/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_6/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_9/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_8/Relu"
  input: "conv2d_9/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_9/Conv2D_grad/ShapeN"
  input: "conv2d_9/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_9/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_8/Relu"
  input: "training/Adam/gradients/conv2d_9/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_9/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_8/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
  input: "conv2d_8/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_8/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_8/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_8/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_1/MaxPool"
  input: "conv2d_8/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_8/Conv2D_grad/ShapeN"
  input: "conv2d_8/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_8/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_1/MaxPool"
  input: "training/Adam/gradients/conv2d_8/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_8/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/AddN_4"
  op: "AddN"
  input: "training/Adam/gradients/add_1/add_grad/Reshape_1"
  input: "training/Adam/gradients/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_11/Conv2D_grad/Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_6/Conv2D_grad/Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@add_1/add"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/max_pooling2d_1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_4/Relu"
  input: "max_pooling2d_1/MaxPool"
  input: "training/Adam/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_1/MaxPool"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/max_pooling2d_1/MaxPool_grad/MaxPoolGrad"
  input: "conv2d_4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_4/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_4/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "activation_1/Relu"
  input: "conv2d_4/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_4/Conv2D_grad/ShapeN"
  input: "conv2d_4/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_4/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "activation_1/Relu"
  input: "training/Adam/gradients/conv2d_4/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_4/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/activation_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
  input: "activation_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_1/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_12"
  op: "ZerosLike"
  input: "batch_normalization_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_13"
  op: "ZerosLike"
  input: "batch_normalization_1/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_14"
  op: "ZerosLike"
  input: "batch_normalization_1/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/zeros_like_15"
  op: "ZerosLike"
  input: "batch_normalization_1/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training/Adam/gradients/activation_1/Relu_grad/ReluGrad"
  input: "conv2d_3/Relu"
  input: "batch_normalization_1/ReadVariableOp"
  input: "batch_normalization_1/FusedBatchNorm/ReadVariableOp"
  input: "batch_normalization_1/FusedBatchNorm/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "conv2d_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_2/Relu"
  input: "conv2d_3/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_3/Conv2D_grad/ShapeN"
  input: "conv2d_3/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_2/Relu"
  input: "training/Adam/gradients/conv2d_3/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
  input: "conv2d_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_1/Relu"
  input: "conv2d_2/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_2/Conv2D_grad/ShapeN"
  input: "conv2d_2/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_1/Relu"
  input: "training/Adam/gradients/conv2d_2/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
  input: "conv2d_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/Relu"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/conv2d_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "input_1"
  input: "conv2d_1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/Conv2D"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/conv2d_1/Conv2D_grad/ShapeN"
  input: "conv2d_1/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/conv2d_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "input_1"
  input: "training/Adam/gradients/conv2d_1/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/conv2d_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/Conv2D"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "Adam/iterations"
  input: "training/Adam/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/iterations"
  input: "^training/Adam/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/Cast/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/iterations"
  input: "^training/Adam/ReadVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/Cast"
  op: "Cast"
  input: "training/Adam/Cast/ReadVariableOp"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Pow/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Pow"
  op: "Pow"
  input: "training/Adam/Pow/ReadVariableOp"
  input: "training/Adam/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub"
  op: "Sub"
  input: "training/Adam/sub/x"
  input: "training/Adam/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value/Minimum"
  op: "Minimum"
  input: "training/Adam/sub"
  input: "training/Adam/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value"
  op: "Maximum"
  input: "training/Adam/clip_by_value/Minimum"
  input: "training/Adam/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt"
  op: "Sqrt"
  input: "training/Adam/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Pow_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Pow_1"
  op: "Pow"
  input: "training/Adam/Pow_1/ReadVariableOp"
  input: "training/Adam/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_1"
  op: "Sub"
  input: "training/Adam/sub_1/x"
  input: "training/Adam/Pow_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv"
  op: "RealDiv"
  input: "training/Adam/Sqrt"
  input: "training/Adam/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Adam/lr"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_1"
  input: "training/Adam/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros"
  op: "Fill"
  input: "training/Adam/zeros/shape_as_tensor"
  input: "training/Adam/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable"
    }
  }
}
node {
  name: "training/Adam/Variable/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable"
}
node {
  name: "training/Adam/Variable/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable"
  input: "training/Adam/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_1"
    }
  }
}
node {
  name: "training/Adam/Variable_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_1"
}
node {
  name: "training/Adam/Variable_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_1"
  input: "training/Adam/zeros_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_2"
  op: "Fill"
  input: "training/Adam/zeros_2/shape_as_tensor"
  input: "training/Adam/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_2"
    }
  }
}
node {
  name: "training/Adam/Variable_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_2"
}
node {
  name: "training/Adam/Variable_2/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_2"
  input: "training/Adam/zeros_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_3"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_3"
    }
  }
}
node {
  name: "training/Adam/Variable_3/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_3"
}
node {
  name: "training/Adam/Variable_3/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_3"
  input: "training/Adam/zeros_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_3/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_4/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_4"
  op: "Fill"
  input: "training/Adam/zeros_4/shape_as_tensor"
  input: "training/Adam/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_4"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_4"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_4"
    }
  }
}
node {
  name: "training/Adam/Variable_4/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_4"
}
node {
  name: "training/Adam/Variable_4/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_4"
  input: "training/Adam/zeros_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_4/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_5"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_5"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_5"
    }
  }
}
node {
  name: "training/Adam/Variable_5/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_5"
}
node {
  name: "training/Adam/Variable_5/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_5"
  input: "training/Adam/zeros_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_5/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_6"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_6"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_6"
    }
  }
}
node {
  name: "training/Adam/Variable_6/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_6"
}
node {
  name: "training/Adam/Variable_6/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_6"
  input: "training/Adam/zeros_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_6"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_6/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_6"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_7"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_7"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_7"
    }
  }
}
node {
  name: "training/Adam/Variable_7/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_7"
}
node {
  name: "training/Adam/Variable_7/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_7"
  input: "training/Adam/zeros_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_7"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_7/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_7"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_8/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_8/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_8"
  op: "Fill"
  input: "training/Adam/zeros_8/shape_as_tensor"
  input: "training/Adam/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_8"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_8"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_8"
    }
  }
}
node {
  name: "training/Adam/Variable_8/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_8"
}
node {
  name: "training/Adam/Variable_8/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_8"
  input: "training/Adam/zeros_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_8"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_8/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_8"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_9"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_9"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_9"
    }
  }
}
node {
  name: "training/Adam/Variable_9/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_9"
}
node {
  name: "training/Adam/Variable_9/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_9"
  input: "training/Adam/zeros_9"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_9"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_9/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_9"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_9"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_10/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_10/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_10"
  op: "Fill"
  input: "training/Adam/zeros_10/shape_as_tensor"
  input: "training/Adam/zeros_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_10"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_10"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_10"
    }
  }
}
node {
  name: "training/Adam/Variable_10/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_10"
}
node {
  name: "training/Adam/Variable_10/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_10"
  input: "training/Adam/zeros_10"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_10"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_10/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_10"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_10"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_11"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_11"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_11"
    }
  }
}
node {
  name: "training/Adam/Variable_11/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_11"
}
node {
  name: "training/Adam/Variable_11/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_11"
  input: "training/Adam/zeros_11"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_11"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_11/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_11"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_11"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_12/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_12"
  op: "Fill"
  input: "training/Adam/zeros_12/shape_as_tensor"
  input: "training/Adam/zeros_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_12"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_12"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_12"
    }
  }
}
node {
  name: "training/Adam/Variable_12/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_12"
}
node {
  name: "training/Adam/Variable_12/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_12"
  input: "training/Adam/zeros_12"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_12"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_12/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_12"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_12"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_13"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_13"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_13"
    }
  }
}
node {
  name: "training/Adam/Variable_13/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_13"
}
node {
  name: "training/Adam/Variable_13/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_13"
  input: "training/Adam/zeros_13"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_13"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_13/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_13"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_13"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_14/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_14/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_14"
  op: "Fill"
  input: "training/Adam/zeros_14/shape_as_tensor"
  input: "training/Adam/zeros_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_14"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_14"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_14"
    }
  }
}
node {
  name: "training/Adam/Variable_14/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_14"
}
node {
  name: "training/Adam/Variable_14/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_14"
  input: "training/Adam/zeros_14"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_14"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_14/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_14"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_14"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_15"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_15"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_15"
    }
  }
}
node {
  name: "training/Adam/Variable_15/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_15"
}
node {
  name: "training/Adam/Variable_15/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_15"
  input: "training/Adam/zeros_15"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_15"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_15/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_15"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_15"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_16/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_16/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_16"
  op: "Fill"
  input: "training/Adam/zeros_16/shape_as_tensor"
  input: "training/Adam/zeros_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_16"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_16"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_16"
    }
  }
}
node {
  name: "training/Adam/Variable_16/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_16"
}
node {
  name: "training/Adam/Variable_16/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_16"
  input: "training/Adam/zeros_16"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_16"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_16/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_16"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_16"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_17"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_17"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_17"
    }
  }
}
node {
  name: "training/Adam/Variable_17/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_17"
}
node {
  name: "training/Adam/Variable_17/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_17"
  input: "training/Adam/zeros_17"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_17"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_17/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_17"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_17"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_18/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_18/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_18"
  op: "Fill"
  input: "training/Adam/zeros_18/shape_as_tensor"
  input: "training/Adam/zeros_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_18"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_18"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_18"
    }
  }
}
node {
  name: "training/Adam/Variable_18/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_18"
}
node {
  name: "training/Adam/Variable_18/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_18"
  input: "training/Adam/zeros_18"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_18"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_18/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_18"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_18"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_19"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_19"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_19"
    }
  }
}
node {
  name: "training/Adam/Variable_19/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_19"
}
node {
  name: "training/Adam/Variable_19/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_19"
  input: "training/Adam/zeros_19"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_19"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_19/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_19"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_19"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_20/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_20/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_20"
  op: "Fill"
  input: "training/Adam/zeros_20/shape_as_tensor"
  input: "training/Adam/zeros_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_20"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_20"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_20"
    }
  }
}
node {
  name: "training/Adam/Variable_20/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_20"
}
node {
  name: "training/Adam/Variable_20/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_20"
  input: "training/Adam/zeros_20"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_20"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_20/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_20"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_20"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_21"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_21"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_21"
    }
  }
}
node {
  name: "training/Adam/Variable_21/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_21"
}
node {
  name: "training/Adam/Variable_21/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_21"
  input: "training/Adam/zeros_21"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_21"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_21/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_21"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_21"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_22/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_22/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_22"
  op: "Fill"
  input: "training/Adam/zeros_22/shape_as_tensor"
  input: "training/Adam/zeros_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_22"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_22"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_22"
    }
  }
}
node {
  name: "training/Adam/Variable_22/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_22"
}
node {
  name: "training/Adam/Variable_22/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_22"
  input: "training/Adam/zeros_22"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_22"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_22/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_22"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_22"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_23"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_23"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_23"
    }
  }
}
node {
  name: "training/Adam/Variable_23/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_23"
}
node {
  name: "training/Adam/Variable_23/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_23"
  input: "training/Adam/zeros_23"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_23"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_23/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_23"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_23"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_24"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_24"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_24"
    }
  }
}
node {
  name: "training/Adam/Variable_24/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_24"
}
node {
  name: "training/Adam/Variable_24/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_24"
  input: "training/Adam/zeros_24"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_24"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_24/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_24"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_24"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_25"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_25"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_25"
    }
  }
}
node {
  name: "training/Adam/Variable_25/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_25"
}
node {
  name: "training/Adam/Variable_25/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_25"
  input: "training/Adam/zeros_25"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_25"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_25/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_25"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_25"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_26/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000 \001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_26/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_26"
  op: "Fill"
  input: "training/Adam/zeros_26/shape_as_tensor"
  input: "training/Adam/zeros_26/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_26"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_26"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 288
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_26"
    }
  }
}
node {
  name: "training/Adam/Variable_26/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_26"
}
node {
  name: "training/Adam/Variable_26/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_26"
  input: "training/Adam/zeros_26"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_26"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_26/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_26"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_26"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 288
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_27"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_27"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_27"
    }
  }
}
node {
  name: "training/Adam/Variable_27/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_27"
}
node {
  name: "training/Adam/Variable_27/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_27"
  input: "training/Adam/zeros_27"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_27"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_27/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_27"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_27"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_28/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_28/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_28"
  op: "Fill"
  input: "training/Adam/zeros_28/shape_as_tensor"
  input: "training/Adam/zeros_28/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_28"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_28"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_28"
    }
  }
}
node {
  name: "training/Adam/Variable_28/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_28"
}
node {
  name: "training/Adam/Variable_28/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_28"
  input: "training/Adam/zeros_28"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_28"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_28/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_28"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_28"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_29"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_29"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_29"
    }
  }
}
node {
  name: "training/Adam/Variable_29/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_29"
}
node {
  name: "training/Adam/Variable_29/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_29"
  input: "training/Adam/zeros_29"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_29"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_29/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_29"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_29"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_30/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_30/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_30"
  op: "Fill"
  input: "training/Adam/zeros_30/shape_as_tensor"
  input: "training/Adam/zeros_30/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_30"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_30"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_30"
    }
  }
}
node {
  name: "training/Adam/Variable_30/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_30"
}
node {
  name: "training/Adam/Variable_30/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_30"
  input: "training/Adam/zeros_30"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_30"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_30/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_30"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_30"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_31"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_31"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_31"
    }
  }
}
node {
  name: "training/Adam/Variable_31/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_31"
}
node {
  name: "training/Adam/Variable_31/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_31"
  input: "training/Adam/zeros_31"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_31"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_31/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_31"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_31"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_32/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_32/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_32"
  op: "Fill"
  input: "training/Adam/zeros_32/shape_as_tensor"
  input: "training/Adam/zeros_32/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_32"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_32"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_32"
    }
  }
}
node {
  name: "training/Adam/Variable_32/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_32"
}
node {
  name: "training/Adam/Variable_32/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_32"
  input: "training/Adam/zeros_32"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_32"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_32/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_32"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_32"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_33"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_33"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_33"
    }
  }
}
node {
  name: "training/Adam/Variable_33/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_33"
}
node {
  name: "training/Adam/Variable_33/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_33"
  input: "training/Adam/zeros_33"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_33"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_33/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_33"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_33"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_34/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_34/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_34"
  op: "Fill"
  input: "training/Adam/zeros_34/shape_as_tensor"
  input: "training/Adam/zeros_34/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_34"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_34"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_34"
    }
  }
}
node {
  name: "training/Adam/Variable_34/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_34"
}
node {
  name: "training/Adam/Variable_34/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_34"
  input: "training/Adam/zeros_34"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_34"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_34/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_34"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_34"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_35"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_35"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_35"
    }
  }
}
node {
  name: "training/Adam/Variable_35/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_35"
}
node {
  name: "training/Adam/Variable_35/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_35"
  input: "training/Adam/zeros_35"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_35"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_35/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_35"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_35"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 288
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_36"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_36"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_36"
    }
  }
}
node {
  name: "training/Adam/Variable_36/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_36"
}
node {
  name: "training/Adam/Variable_36/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_36"
  input: "training/Adam/zeros_36"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_36"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_36/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_36"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_36"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_37"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 288
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_37"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_37"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_37"
    }
  }
}
node {
  name: "training/Adam/Variable_37/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_37"
}
node {
  name: "training/Adam/Variable_37/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_37"
  input: "training/Adam/zeros_37"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_37"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_37/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_37"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_37"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_38/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_38/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_38"
  op: "Fill"
  input: "training/Adam/zeros_38/shape_as_tensor"
  input: "training/Adam/zeros_38/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_38"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_38"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_38"
    }
  }
}
node {
  name: "training/Adam/Variable_38/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_38"
}
node {
  name: "training/Adam/Variable_38/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_38"
  input: "training/Adam/zeros_38"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_38"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_38/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_38"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_38"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_39"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_39"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_39"
    }
  }
}
node {
  name: "training/Adam/Variable_39/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_39"
}
node {
  name: "training/Adam/Variable_39/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_39"
  input: "training/Adam/zeros_39"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_39"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_39/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_39"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_39"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_40/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_40/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_40"
  op: "Fill"
  input: "training/Adam/zeros_40/shape_as_tensor"
  input: "training/Adam/zeros_40/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_40"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_40"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_40"
    }
  }
}
node {
  name: "training/Adam/Variable_40/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_40"
}
node {
  name: "training/Adam/Variable_40/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_40"
  input: "training/Adam/zeros_40"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_40"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_40/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_40"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_40"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_41"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_41"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_41"
    }
  }
}
node {
  name: "training/Adam/Variable_41/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_41"
}
node {
  name: "training/Adam/Variable_41/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_41"
  input: "training/Adam/zeros_41"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_41"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_41/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_41"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_41"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_42/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_42/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_42"
  op: "Fill"
  input: "training/Adam/zeros_42/shape_as_tensor"
  input: "training/Adam/zeros_42/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_42"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_42"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_42"
    }
  }
}
node {
  name: "training/Adam/Variable_42/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_42"
}
node {
  name: "training/Adam/Variable_42/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_42"
  input: "training/Adam/zeros_42"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_42"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_42/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_42"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_42"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_43"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_43"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_43"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_43"
    }
  }
}
node {
  name: "training/Adam/Variable_43/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_43"
}
node {
  name: "training/Adam/Variable_43/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_43"
  input: "training/Adam/zeros_43"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_43"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_43/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_43"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_43"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_44/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_44/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_44"
  op: "Fill"
  input: "training/Adam/zeros_44/shape_as_tensor"
  input: "training/Adam/zeros_44/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_44"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_44"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_44"
    }
  }
}
node {
  name: "training/Adam/Variable_44/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_44"
}
node {
  name: "training/Adam/Variable_44/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_44"
  input: "training/Adam/zeros_44"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_44"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_44/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_44"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_44"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_45"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_45"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_45"
    }
  }
}
node {
  name: "training/Adam/Variable_45/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_45"
}
node {
  name: "training/Adam/Variable_45/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_45"
  input: "training/Adam/zeros_45"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_45"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_45/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_45"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_45"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_46"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_46"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_46"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_46"
    }
  }
}
node {
  name: "training/Adam/Variable_46/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_46"
}
node {
  name: "training/Adam/Variable_46/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_46"
  input: "training/Adam/zeros_46"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_46"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_46/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_46"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_46"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_47"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_47"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_47"
    }
  }
}
node {
  name: "training/Adam/Variable_47/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_47"
}
node {
  name: "training/Adam/Variable_47/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_47"
  input: "training/Adam/zeros_47"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_47"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_47/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_47"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_47"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_48"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_48"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_48"
    }
  }
}
node {
  name: "training/Adam/Variable_48/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_48"
}
node {
  name: "training/Adam/Variable_48/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_48"
  input: "training/Adam/zeros_48"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_48"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_48/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_48"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_48"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_49"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_49"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_49"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_49"
    }
  }
}
node {
  name: "training/Adam/Variable_49/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_49"
}
node {
  name: "training/Adam/Variable_49/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_49"
  input: "training/Adam/zeros_49"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_49"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_49/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_49"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_49"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_50/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_50/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_50"
  op: "Fill"
  input: "training/Adam/zeros_50/shape_as_tensor"
  input: "training/Adam/zeros_50/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_50"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_50"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_50"
    }
  }
}
node {
  name: "training/Adam/Variable_50/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_50"
}
node {
  name: "training/Adam/Variable_50/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_50"
  input: "training/Adam/zeros_50"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_50"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_50/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_50"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_50"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_51"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_51"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_51"
    }
  }
}
node {
  name: "training/Adam/Variable_51/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_51"
}
node {
  name: "training/Adam/Variable_51/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_51"
  input: "training/Adam/zeros_51"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_51"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_51/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_51"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_51"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_52"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_52"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_52"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_52"
    }
  }
}
node {
  name: "training/Adam/Variable_52/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_52"
}
node {
  name: "training/Adam/Variable_52/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_52"
  input: "training/Adam/zeros_52"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_52"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_52/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_52"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_52"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_53"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_53"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_53"
    }
  }
}
node {
  name: "training/Adam/Variable_53/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_53"
}
node {
  name: "training/Adam/Variable_53/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_53"
  input: "training/Adam/zeros_53"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_53"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_53/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_53"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_53"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_54/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_54/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_54"
  op: "Fill"
  input: "training/Adam/zeros_54/shape_as_tensor"
  input: "training/Adam/zeros_54/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_54"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_54"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_54"
    }
  }
}
node {
  name: "training/Adam/Variable_54/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_54"
}
node {
  name: "training/Adam/Variable_54/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_54"
  input: "training/Adam/zeros_54"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_54"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_54/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_54"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_54"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_55"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_55"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_55"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_55"
    }
  }
}
node {
  name: "training/Adam/Variable_55/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_55"
}
node {
  name: "training/Adam/Variable_55/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_55"
  input: "training/Adam/zeros_55"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_55"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_55/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_55"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_55"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_56/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_56/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_56"
  op: "Fill"
  input: "training/Adam/zeros_56/shape_as_tensor"
  input: "training/Adam/zeros_56/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_56"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_56"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_56"
    }
  }
}
node {
  name: "training/Adam/Variable_56/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_56"
}
node {
  name: "training/Adam/Variable_56/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_56"
  input: "training/Adam/zeros_56"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_56"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_56/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_56"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_56"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_57"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_57"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_57"
    }
  }
}
node {
  name: "training/Adam/Variable_57/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_57"
}
node {
  name: "training/Adam/Variable_57/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_57"
  input: "training/Adam/zeros_57"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_57"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_57/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_57"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_57"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_58/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_58/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_58"
  op: "Fill"
  input: "training/Adam/zeros_58/shape_as_tensor"
  input: "training/Adam/zeros_58/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_58"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_58"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_58"
    }
  }
}
node {
  name: "training/Adam/Variable_58/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_58"
}
node {
  name: "training/Adam/Variable_58/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_58"
  input: "training/Adam/zeros_58"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_58"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_58/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_58"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_58"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_59"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_59"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_59"
    }
  }
}
node {
  name: "training/Adam/Variable_59/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_59"
}
node {
  name: "training/Adam/Variable_59/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_59"
  input: "training/Adam/zeros_59"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_59"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_59/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_59"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_59"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_60"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_60"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_60"
    }
  }
}
node {
  name: "training/Adam/Variable_60/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_60"
}
node {
  name: "training/Adam/Variable_60/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_60"
  input: "training/Adam/zeros_60"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_60"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_60/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_60"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_60"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_61"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_61"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_61"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_61"
    }
  }
}
node {
  name: "training/Adam/Variable_61/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_61"
}
node {
  name: "training/Adam/Variable_61/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_61"
  input: "training/Adam/zeros_61"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_61"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_61/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_61"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_61"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_62/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_62/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_62"
  op: "Fill"
  input: "training/Adam/zeros_62/shape_as_tensor"
  input: "training/Adam/zeros_62/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_62"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_62"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_62"
    }
  }
}
node {
  name: "training/Adam/Variable_62/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_62"
}
node {
  name: "training/Adam/Variable_62/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_62"
  input: "training/Adam/zeros_62"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_62"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_62/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_62"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_62"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_63"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_63"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_63"
    }
  }
}
node {
  name: "training/Adam/Variable_63/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_63"
}
node {
  name: "training/Adam/Variable_63/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_63"
  input: "training/Adam/zeros_63"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_63"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_63/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_63"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_63"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_64/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_64/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_64"
  op: "Fill"
  input: "training/Adam/zeros_64/shape_as_tensor"
  input: "training/Adam/zeros_64/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_64"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_64"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_64"
    }
  }
}
node {
  name: "training/Adam/Variable_64/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_64"
}
node {
  name: "training/Adam/Variable_64/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_64"
  input: "training/Adam/zeros_64"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_64"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_64/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_64"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_64"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_65"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_65"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_65"
    }
  }
}
node {
  name: "training/Adam/Variable_65/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_65"
}
node {
  name: "training/Adam/Variable_65/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_65"
  input: "training/Adam/zeros_65"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_65"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_65/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_65"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_65"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_66/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_66/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_66"
  op: "Fill"
  input: "training/Adam/zeros_66/shape_as_tensor"
  input: "training/Adam/zeros_66/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_66"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_66"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_66"
    }
  }
}
node {
  name: "training/Adam/Variable_66/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_66"
}
node {
  name: "training/Adam/Variable_66/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_66"
  input: "training/Adam/zeros_66"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_66"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_66/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_66"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_66"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_67"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_67"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_67"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_67"
    }
  }
}
node {
  name: "training/Adam/Variable_67/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_67"
}
node {
  name: "training/Adam/Variable_67/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_67"
  input: "training/Adam/zeros_67"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_67"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_67/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_67"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_67"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_68/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_68/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_68"
  op: "Fill"
  input: "training/Adam/zeros_68/shape_as_tensor"
  input: "training/Adam/zeros_68/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_68"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_68"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_68"
    }
  }
}
node {
  name: "training/Adam/Variable_68/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_68"
}
node {
  name: "training/Adam/Variable_68/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_68"
  input: "training/Adam/zeros_68"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_68"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_68/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_68"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_68"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_69"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_69"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_69"
    }
  }
}
node {
  name: "training/Adam/Variable_69/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_69"
}
node {
  name: "training/Adam/Variable_69/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_69"
  input: "training/Adam/zeros_69"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_69"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_69/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_69"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_69"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_70/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_70/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_70"
  op: "Fill"
  input: "training/Adam/zeros_70/shape_as_tensor"
  input: "training/Adam/zeros_70/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_70"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_70"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_70"
    }
  }
}
node {
  name: "training/Adam/Variable_70/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_70"
}
node {
  name: "training/Adam/Variable_70/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_70"
  input: "training/Adam/zeros_70"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_70"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_70/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_70"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_70"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_71"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_71"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_71"
    }
  }
}
node {
  name: "training/Adam/Variable_71/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_71"
}
node {
  name: "training/Adam/Variable_71/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_71"
  input: "training/Adam/zeros_71"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_71"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_71/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_71"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_71"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_72/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_72/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_72"
  op: "Fill"
  input: "training/Adam/zeros_72/shape_as_tensor"
  input: "training/Adam/zeros_72/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_72"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_72"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_72"
    }
  }
}
node {
  name: "training/Adam/Variable_72/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_72"
}
node {
  name: "training/Adam/Variable_72/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_72"
  input: "training/Adam/zeros_72"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_72"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_72/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_72"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_72"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_73"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_73"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_73"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_73"
    }
  }
}
node {
  name: "training/Adam/Variable_73/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_73"
}
node {
  name: "training/Adam/Variable_73/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_73"
  input: "training/Adam/zeros_73"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_73"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_73/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_73"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_73"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_74/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_74/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_74"
  op: "Fill"
  input: "training/Adam/zeros_74/shape_as_tensor"
  input: "training/Adam/zeros_74/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_74"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_74"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_74"
    }
  }
}
node {
  name: "training/Adam/Variable_74/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_74"
}
node {
  name: "training/Adam/Variable_74/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_74"
  input: "training/Adam/zeros_74"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_74"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_74/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_74"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_74"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_75"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_75"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_75"
    }
  }
}
node {
  name: "training/Adam/Variable_75/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_75"
}
node {
  name: "training/Adam/Variable_75/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_75"
  input: "training/Adam/zeros_75"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_75"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_75/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_75"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_75"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_76/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_76/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_76"
  op: "Fill"
  input: "training/Adam/zeros_76/shape_as_tensor"
  input: "training/Adam/zeros_76/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_76"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_76"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_76"
    }
  }
}
node {
  name: "training/Adam/Variable_76/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_76"
}
node {
  name: "training/Adam/Variable_76/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_76"
  input: "training/Adam/zeros_76"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_76"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_76/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_76"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_76"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_77"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_77"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_77"
    }
  }
}
node {
  name: "training/Adam/Variable_77/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_77"
}
node {
  name: "training/Adam/Variable_77/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_77"
  input: "training/Adam/zeros_77"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_77"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_77/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_77"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_77"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_78"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_78"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_78"
    }
  }
}
node {
  name: "training/Adam/Variable_78/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_78"
}
node {
  name: "training/Adam/Variable_78/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_78"
  input: "training/Adam/zeros_78"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_78"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_78/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_78"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_78"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_79"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_79"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_79"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_79"
    }
  }
}
node {
  name: "training/Adam/Variable_79/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_79"
}
node {
  name: "training/Adam/Variable_79/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_79"
  input: "training/Adam/zeros_79"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_79"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_79/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_79"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_79"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_80/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000 \001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_80/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_80"
  op: "Fill"
  input: "training/Adam/zeros_80/shape_as_tensor"
  input: "training/Adam/zeros_80/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_80"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_80"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 288
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_80"
    }
  }
}
node {
  name: "training/Adam/Variable_80/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_80"
}
node {
  name: "training/Adam/Variable_80/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_80"
  input: "training/Adam/zeros_80"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_80"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_80/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_80"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_80"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 288
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_81"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_81"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_81"
    }
  }
}
node {
  name: "training/Adam/Variable_81/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_81"
}
node {
  name: "training/Adam/Variable_81/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_81"
  input: "training/Adam/zeros_81"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_81"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_81/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_81"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_81"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_82/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_82/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_82"
  op: "Fill"
  input: "training/Adam/zeros_82/shape_as_tensor"
  input: "training/Adam/zeros_82/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_82"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_82"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_82"
    }
  }
}
node {
  name: "training/Adam/Variable_82/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_82"
}
node {
  name: "training/Adam/Variable_82/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_82"
  input: "training/Adam/zeros_82"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_82"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_82/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_82"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_82"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_83"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_83"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_83"
    }
  }
}
node {
  name: "training/Adam/Variable_83/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_83"
}
node {
  name: "training/Adam/Variable_83/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_83"
  input: "training/Adam/zeros_83"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_83"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_83/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_83"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_83"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_84/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_84/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_84"
  op: "Fill"
  input: "training/Adam/zeros_84/shape_as_tensor"
  input: "training/Adam/zeros_84/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_84"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_84"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_84"
    }
  }
}
node {
  name: "training/Adam/Variable_84/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_84"
}
node {
  name: "training/Adam/Variable_84/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_84"
  input: "training/Adam/zeros_84"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_84"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_84/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_84"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_84"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_85"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_85"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_85"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_85"
    }
  }
}
node {
  name: "training/Adam/Variable_85/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_85"
}
node {
  name: "training/Adam/Variable_85/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_85"
  input: "training/Adam/zeros_85"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_85"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_85/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_85"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_85"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_86/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_86/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_86"
  op: "Fill"
  input: "training/Adam/zeros_86/shape_as_tensor"
  input: "training/Adam/zeros_86/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_86"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_86"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_86"
    }
  }
}
node {
  name: "training/Adam/Variable_86/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_86"
}
node {
  name: "training/Adam/Variable_86/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_86"
  input: "training/Adam/zeros_86"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_86"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_86/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_86"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_86"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_87"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_87"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_87"
    }
  }
}
node {
  name: "training/Adam/Variable_87/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_87"
}
node {
  name: "training/Adam/Variable_87/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_87"
  input: "training/Adam/zeros_87"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_87"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_87/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_87"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_87"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_88/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_88/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_88"
  op: "Fill"
  input: "training/Adam/zeros_88/shape_as_tensor"
  input: "training/Adam/zeros_88/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_88"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_88"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_88"
    }
  }
}
node {
  name: "training/Adam/Variable_88/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_88"
}
node {
  name: "training/Adam/Variable_88/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_88"
  input: "training/Adam/zeros_88"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_88"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_88/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_88"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_88"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_89"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_89"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_89"
    }
  }
}
node {
  name: "training/Adam/Variable_89/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_89"
}
node {
  name: "training/Adam/Variable_89/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_89"
  input: "training/Adam/zeros_89"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_89"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_89/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_89"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_89"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 288
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_90"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_90"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_90"
    }
  }
}
node {
  name: "training/Adam/Variable_90/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_90"
}
node {
  name: "training/Adam/Variable_90/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_90"
  input: "training/Adam/zeros_90"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_90"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_90/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_90"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_90"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_91"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 288
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_91"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_91"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_91"
    }
  }
}
node {
  name: "training/Adam/Variable_91/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_91"
}
node {
  name: "training/Adam/Variable_91/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_91"
  input: "training/Adam/zeros_91"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_91"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_91/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_91"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_91"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_92/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_92/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_92"
  op: "Fill"
  input: "training/Adam/zeros_92/shape_as_tensor"
  input: "training/Adam/zeros_92/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_92"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_92"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_92"
    }
  }
}
node {
  name: "training/Adam/Variable_92/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_92"
}
node {
  name: "training/Adam/Variable_92/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_92"
  input: "training/Adam/zeros_92"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_92"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_92/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_92"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_92"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_93"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_93"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_93"
    }
  }
}
node {
  name: "training/Adam/Variable_93/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_93"
}
node {
  name: "training/Adam/Variable_93/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_93"
  input: "training/Adam/zeros_93"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_93"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_93/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_93"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_93"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_94/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_94/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_94"
  op: "Fill"
  input: "training/Adam/zeros_94/shape_as_tensor"
  input: "training/Adam/zeros_94/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_94"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_94"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_94"
    }
  }
}
node {
  name: "training/Adam/Variable_94/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_94"
}
node {
  name: "training/Adam/Variable_94/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_94"
  input: "training/Adam/zeros_94"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_94"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_94/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_94"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_94"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_95"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_95"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_95"
    }
  }
}
node {
  name: "training/Adam/Variable_95/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_95"
}
node {
  name: "training/Adam/Variable_95/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_95"
  input: "training/Adam/zeros_95"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_95"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_95/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_95"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_95"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_96/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_96/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_96"
  op: "Fill"
  input: "training/Adam/zeros_96/shape_as_tensor"
  input: "training/Adam/zeros_96/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_96"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_96"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_96"
    }
  }
}
node {
  name: "training/Adam/Variable_96/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_96"
}
node {
  name: "training/Adam/Variable_96/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_96"
  input: "training/Adam/zeros_96"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_96"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_96/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_96"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_96"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_97"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_97"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_97"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_97"
    }
  }
}
node {
  name: "training/Adam/Variable_97/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_97"
}
node {
  name: "training/Adam/Variable_97/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_97"
  input: "training/Adam/zeros_97"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_97"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_97/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_97"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_97"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_98/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_98/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_98"
  op: "Fill"
  input: "training/Adam/zeros_98/shape_as_tensor"
  input: "training/Adam/zeros_98/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_98"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_98"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_98"
    }
  }
}
node {
  name: "training/Adam/Variable_98/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_98"
}
node {
  name: "training/Adam/Variable_98/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_98"
  input: "training/Adam/zeros_98"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_98"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_98/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_98"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_98"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_99"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_99"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_99"
    }
  }
}
node {
  name: "training/Adam/Variable_99/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_99"
}
node {
  name: "training/Adam/Variable_99/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_99"
  input: "training/Adam/zeros_99"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_99"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_99/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_99"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_99"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_100"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_100"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_100"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_100"
    }
  }
}
node {
  name: "training/Adam/Variable_100/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_100"
}
node {
  name: "training/Adam/Variable_100/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_100"
  input: "training/Adam/zeros_100"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_100"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_100/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_100"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_100"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_101"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_101"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_101"
    }
  }
}
node {
  name: "training/Adam/Variable_101/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_101"
}
node {
  name: "training/Adam/Variable_101/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_101"
  input: "training/Adam/zeros_101"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_101"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_101/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_101"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_101"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_102"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_102"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_102"
    }
  }
}
node {
  name: "training/Adam/Variable_102/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_102"
}
node {
  name: "training/Adam/Variable_102/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_102"
  input: "training/Adam/zeros_102"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_102"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_102/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_102"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_102"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_103"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_103"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_103"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_103"
    }
  }
}
node {
  name: "training/Adam/Variable_103/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_103"
}
node {
  name: "training/Adam/Variable_103/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_103"
  input: "training/Adam/zeros_103"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_103"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_103/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_103"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_103"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_104/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/zeros_104/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_104"
  op: "Fill"
  input: "training/Adam/zeros_104/shape_as_tensor"
  input: "training/Adam/zeros_104/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_104"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_104"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_104"
    }
  }
}
node {
  name: "training/Adam/Variable_104/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_104"
}
node {
  name: "training/Adam/Variable_104/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_104"
  input: "training/Adam/zeros_104"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_104"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_104/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_104"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_104"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_105"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_105"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_105"
    }
  }
}
node {
  name: "training/Adam/Variable_105/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_105"
}
node {
  name: "training/Adam/Variable_105/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_105"
  input: "training/Adam/zeros_105"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_105"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_105/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_105"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_105"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_106"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_106"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_106"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_106"
    }
  }
}
node {
  name: "training/Adam/Variable_106/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_106"
}
node {
  name: "training/Adam/Variable_106/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_106"
  input: "training/Adam/zeros_106"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_106"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_106/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_106"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_106"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Variable_107"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_107"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_107"
    }
  }
}
node {
  name: "training/Adam/Variable_107/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_107"
}
node {
  name: "training/Adam/Variable_107/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_107"
  input: "training/Adam/zeros_107"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_107"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_107/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_107"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_107"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_108/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_108/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_108"
  op: "Fill"
  input: "training/Adam/zeros_108/shape_as_tensor"
  input: "training/Adam/zeros_108/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_108"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_108"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_108"
    }
  }
}
node {
  name: "training/Adam/Variable_108/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_108"
}
node {
  name: "training/Adam/Variable_108/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_108"
  input: "training/Adam/zeros_108"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_108"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_108/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_108"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_108"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_109/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_109/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_109"
  op: "Fill"
  input: "training/Adam/zeros_109/shape_as_tensor"
  input: "training/Adam/zeros_109/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_109"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_109"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_109"
    }
  }
}
node {
  name: "training/Adam/Variable_109/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_109"
}
node {
  name: "training/Adam/Variable_109/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_109"
  input: "training/Adam/zeros_109"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_109"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_109/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_109"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_109"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_110/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_110/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_110"
  op: "Fill"
  input: "training/Adam/zeros_110/shape_as_tensor"
  input: "training/Adam/zeros_110/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_110"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_110"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_110"
    }
  }
}
node {
  name: "training/Adam/Variable_110/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_110"
}
node {
  name: "training/Adam/Variable_110/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_110"
  input: "training/Adam/zeros_110"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_110"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_110/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_110"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_110"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_111/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_111/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_111"
  op: "Fill"
  input: "training/Adam/zeros_111/shape_as_tensor"
  input: "training/Adam/zeros_111/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_111"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_111"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_111"
    }
  }
}
node {
  name: "training/Adam/Variable_111/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_111"
}
node {
  name: "training/Adam/Variable_111/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_111"
  input: "training/Adam/zeros_111"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_111"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_111/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_111"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_111"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_112/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_112/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_112"
  op: "Fill"
  input: "training/Adam/zeros_112/shape_as_tensor"
  input: "training/Adam/zeros_112/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_112"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_112"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_112"
    }
  }
}
node {
  name: "training/Adam/Variable_112/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_112"
}
node {
  name: "training/Adam/Variable_112/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_112"
  input: "training/Adam/zeros_112"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_112"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_112/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_112"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_112"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_113/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_113/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_113"
  op: "Fill"
  input: "training/Adam/zeros_113/shape_as_tensor"
  input: "training/Adam/zeros_113/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_113"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_113"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_113"
    }
  }
}
node {
  name: "training/Adam/Variable_113/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_113"
}
node {
  name: "training/Adam/Variable_113/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_113"
  input: "training/Adam/zeros_113"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_113"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_113/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_113"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_113"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_114/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_114/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_114"
  op: "Fill"
  input: "training/Adam/zeros_114/shape_as_tensor"
  input: "training/Adam/zeros_114/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_114"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_114"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_114"
    }
  }
}
node {
  name: "training/Adam/Variable_114/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_114"
}
node {
  name: "training/Adam/Variable_114/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_114"
  input: "training/Adam/zeros_114"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_114"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_114/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_114"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_114"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_115/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_115/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_115"
  op: "Fill"
  input: "training/Adam/zeros_115/shape_as_tensor"
  input: "training/Adam/zeros_115/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_115"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_115"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_115"
    }
  }
}
node {
  name: "training/Adam/Variable_115/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_115"
}
node {
  name: "training/Adam/Variable_115/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_115"
  input: "training/Adam/zeros_115"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_115"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_115/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_115"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_115"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_116/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_116/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_116"
  op: "Fill"
  input: "training/Adam/zeros_116/shape_as_tensor"
  input: "training/Adam/zeros_116/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_116"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_116"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_116"
    }
  }
}
node {
  name: "training/Adam/Variable_116/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_116"
}
node {
  name: "training/Adam/Variable_116/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_116"
  input: "training/Adam/zeros_116"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_116"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_116/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_116"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_116"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_117/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_117/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_117"
  op: "Fill"
  input: "training/Adam/zeros_117/shape_as_tensor"
  input: "training/Adam/zeros_117/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_117"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_117"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_117"
    }
  }
}
node {
  name: "training/Adam/Variable_117/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_117"
}
node {
  name: "training/Adam/Variable_117/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_117"
  input: "training/Adam/zeros_117"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_117"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_117/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_117"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_117"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_118/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_118/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_118"
  op: "Fill"
  input: "training/Adam/zeros_118/shape_as_tensor"
  input: "training/Adam/zeros_118/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_118"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_118"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_118"
    }
  }
}
node {
  name: "training/Adam/Variable_118/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_118"
}
node {
  name: "training/Adam/Variable_118/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_118"
  input: "training/Adam/zeros_118"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_118"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_118/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_118"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_118"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_119/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_119/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_119"
  op: "Fill"
  input: "training/Adam/zeros_119/shape_as_tensor"
  input: "training/Adam/zeros_119/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_119"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_119"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_119"
    }
  }
}
node {
  name: "training/Adam/Variable_119/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_119"
}
node {
  name: "training/Adam/Variable_119/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_119"
  input: "training/Adam/zeros_119"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_119"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_119/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_119"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_119"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_120/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_120/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_120"
  op: "Fill"
  input: "training/Adam/zeros_120/shape_as_tensor"
  input: "training/Adam/zeros_120/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_120"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_120"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_120"
    }
  }
}
node {
  name: "training/Adam/Variable_120/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_120"
}
node {
  name: "training/Adam/Variable_120/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_120"
  input: "training/Adam/zeros_120"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_120"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_120/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_120"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_120"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_121/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_121/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_121"
  op: "Fill"
  input: "training/Adam/zeros_121/shape_as_tensor"
  input: "training/Adam/zeros_121/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_121"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_121"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_121"
    }
  }
}
node {
  name: "training/Adam/Variable_121/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_121"
}
node {
  name: "training/Adam/Variable_121/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_121"
  input: "training/Adam/zeros_121"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_121"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_121/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_121"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_121"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_122/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_122/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_122"
  op: "Fill"
  input: "training/Adam/zeros_122/shape_as_tensor"
  input: "training/Adam/zeros_122/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_122"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_122"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_122"
    }
  }
}
node {
  name: "training/Adam/Variable_122/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_122"
}
node {
  name: "training/Adam/Variable_122/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_122"
  input: "training/Adam/zeros_122"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_122"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_122/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_122"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_122"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_123/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_123/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_123"
  op: "Fill"
  input: "training/Adam/zeros_123/shape_as_tensor"
  input: "training/Adam/zeros_123/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_123"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_123"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_123"
    }
  }
}
node {
  name: "training/Adam/Variable_123/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_123"
}
node {
  name: "training/Adam/Variable_123/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_123"
  input: "training/Adam/zeros_123"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_123"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_123/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_123"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_123"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_124/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_124/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_124"
  op: "Fill"
  input: "training/Adam/zeros_124/shape_as_tensor"
  input: "training/Adam/zeros_124/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_124"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_124"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_124"
    }
  }
}
node {
  name: "training/Adam/Variable_124/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_124"
}
node {
  name: "training/Adam/Variable_124/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_124"
  input: "training/Adam/zeros_124"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_124"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_124/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_124"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_124"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_125/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_125/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_125"
  op: "Fill"
  input: "training/Adam/zeros_125/shape_as_tensor"
  input: "training/Adam/zeros_125/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_125"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_125"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_125"
    }
  }
}
node {
  name: "training/Adam/Variable_125/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_125"
}
node {
  name: "training/Adam/Variable_125/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_125"
  input: "training/Adam/zeros_125"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_125"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_125/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_125"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_125"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_126/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_126/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_126"
  op: "Fill"
  input: "training/Adam/zeros_126/shape_as_tensor"
  input: "training/Adam/zeros_126/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_126"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_126"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_126"
    }
  }
}
node {
  name: "training/Adam/Variable_126/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_126"
}
node {
  name: "training/Adam/Variable_126/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_126"
  input: "training/Adam/zeros_126"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_126"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_126/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_126"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_126"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_127/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_127/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_127"
  op: "Fill"
  input: "training/Adam/zeros_127/shape_as_tensor"
  input: "training/Adam/zeros_127/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_127"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_127"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_127"
    }
  }
}
node {
  name: "training/Adam/Variable_127/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_127"
}
node {
  name: "training/Adam/Variable_127/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_127"
  input: "training/Adam/zeros_127"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_127"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_127/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_127"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_127"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_128/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_128/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_128"
  op: "Fill"
  input: "training/Adam/zeros_128/shape_as_tensor"
  input: "training/Adam/zeros_128/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_128"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_128"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_128"
    }
  }
}
node {
  name: "training/Adam/Variable_128/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_128"
}
node {
  name: "training/Adam/Variable_128/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_128"
  input: "training/Adam/zeros_128"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_128"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_128/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_128"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_128"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_129/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_129/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_129"
  op: "Fill"
  input: "training/Adam/zeros_129/shape_as_tensor"
  input: "training/Adam/zeros_129/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_129"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_129"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_129"
    }
  }
}
node {
  name: "training/Adam/Variable_129/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_129"
}
node {
  name: "training/Adam/Variable_129/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_129"
  input: "training/Adam/zeros_129"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_129"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_129/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_129"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_129"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_130/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_130/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_130"
  op: "Fill"
  input: "training/Adam/zeros_130/shape_as_tensor"
  input: "training/Adam/zeros_130/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_130"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_130"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_130"
    }
  }
}
node {
  name: "training/Adam/Variable_130/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_130"
}
node {
  name: "training/Adam/Variable_130/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_130"
  input: "training/Adam/zeros_130"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_130"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_130/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_130"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_130"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_131/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_131/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_131"
  op: "Fill"
  input: "training/Adam/zeros_131/shape_as_tensor"
  input: "training/Adam/zeros_131/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_131"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_131"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_131"
    }
  }
}
node {
  name: "training/Adam/Variable_131/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_131"
}
node {
  name: "training/Adam/Variable_131/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_131"
  input: "training/Adam/zeros_131"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_131"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_131/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_131"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_131"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_132/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_132/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_132"
  op: "Fill"
  input: "training/Adam/zeros_132/shape_as_tensor"
  input: "training/Adam/zeros_132/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_132"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_132"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_132"
    }
  }
}
node {
  name: "training/Adam/Variable_132/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_132"
}
node {
  name: "training/Adam/Variable_132/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_132"
  input: "training/Adam/zeros_132"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_132"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_132/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_132"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_132"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_133/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_133/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_133"
  op: "Fill"
  input: "training/Adam/zeros_133/shape_as_tensor"
  input: "training/Adam/zeros_133/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_133"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_133"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_133"
    }
  }
}
node {
  name: "training/Adam/Variable_133/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_133"
}
node {
  name: "training/Adam/Variable_133/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_133"
  input: "training/Adam/zeros_133"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_133"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_133/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_133"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_133"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_134/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_134/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_134"
  op: "Fill"
  input: "training/Adam/zeros_134/shape_as_tensor"
  input: "training/Adam/zeros_134/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_134"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_134"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_134"
    }
  }
}
node {
  name: "training/Adam/Variable_134/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_134"
}
node {
  name: "training/Adam/Variable_134/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_134"
  input: "training/Adam/zeros_134"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_134"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_134/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_134"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_134"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_135/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_135/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_135"
  op: "Fill"
  input: "training/Adam/zeros_135/shape_as_tensor"
  input: "training/Adam/zeros_135/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_135"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_135"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_135"
    }
  }
}
node {
  name: "training/Adam/Variable_135/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_135"
}
node {
  name: "training/Adam/Variable_135/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_135"
  input: "training/Adam/zeros_135"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_135"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_135/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_135"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_135"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_136/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_136/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_136"
  op: "Fill"
  input: "training/Adam/zeros_136/shape_as_tensor"
  input: "training/Adam/zeros_136/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_136"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_136"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_136"
    }
  }
}
node {
  name: "training/Adam/Variable_136/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_136"
}
node {
  name: "training/Adam/Variable_136/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_136"
  input: "training/Adam/zeros_136"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_136"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_136/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_136"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_136"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_137/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_137/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_137"
  op: "Fill"
  input: "training/Adam/zeros_137/shape_as_tensor"
  input: "training/Adam/zeros_137/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_137"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_137"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_137"
    }
  }
}
node {
  name: "training/Adam/Variable_137/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_137"
}
node {
  name: "training/Adam/Variable_137/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_137"
  input: "training/Adam/zeros_137"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_137"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_137/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_137"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_137"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_138/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_138/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_138"
  op: "Fill"
  input: "training/Adam/zeros_138/shape_as_tensor"
  input: "training/Adam/zeros_138/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_138"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_138"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_138"
    }
  }
}
node {
  name: "training/Adam/Variable_138/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_138"
}
node {
  name: "training/Adam/Variable_138/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_138"
  input: "training/Adam/zeros_138"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_138"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_138/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_138"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_138"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_139/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_139/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_139"
  op: "Fill"
  input: "training/Adam/zeros_139/shape_as_tensor"
  input: "training/Adam/zeros_139/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_139"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_139"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_139"
    }
  }
}
node {
  name: "training/Adam/Variable_139/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_139"
}
node {
  name: "training/Adam/Variable_139/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_139"
  input: "training/Adam/zeros_139"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_139"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_139/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_139"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_139"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_140/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_140/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_140"
  op: "Fill"
  input: "training/Adam/zeros_140/shape_as_tensor"
  input: "training/Adam/zeros_140/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_140"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_140"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_140"
    }
  }
}
node {
  name: "training/Adam/Variable_140/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_140"
}
node {
  name: "training/Adam/Variable_140/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_140"
  input: "training/Adam/zeros_140"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_140"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_140/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_140"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_140"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_141/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_141/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_141"
  op: "Fill"
  input: "training/Adam/zeros_141/shape_as_tensor"
  input: "training/Adam/zeros_141/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_141"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_141"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_141"
    }
  }
}
node {
  name: "training/Adam/Variable_141/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_141"
}
node {
  name: "training/Adam/Variable_141/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_141"
  input: "training/Adam/zeros_141"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_141"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_141/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_141"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_141"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_142/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_142/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_142"
  op: "Fill"
  input: "training/Adam/zeros_142/shape_as_tensor"
  input: "training/Adam/zeros_142/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_142"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_142"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_142"
    }
  }
}
node {
  name: "training/Adam/Variable_142/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_142"
}
node {
  name: "training/Adam/Variable_142/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_142"
  input: "training/Adam/zeros_142"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_142"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_142/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_142"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_142"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_143/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_143/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_143"
  op: "Fill"
  input: "training/Adam/zeros_143/shape_as_tensor"
  input: "training/Adam/zeros_143/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_143"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_143"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_143"
    }
  }
}
node {
  name: "training/Adam/Variable_143/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_143"
}
node {
  name: "training/Adam/Variable_143/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_143"
  input: "training/Adam/zeros_143"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_143"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_143/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_143"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_143"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_144/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_144/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_144"
  op: "Fill"
  input: "training/Adam/zeros_144/shape_as_tensor"
  input: "training/Adam/zeros_144/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_144"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_144"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_144"
    }
  }
}
node {
  name: "training/Adam/Variable_144/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_144"
}
node {
  name: "training/Adam/Variable_144/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_144"
  input: "training/Adam/zeros_144"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_144"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_144/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_144"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_144"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_145/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_145/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_145"
  op: "Fill"
  input: "training/Adam/zeros_145/shape_as_tensor"
  input: "training/Adam/zeros_145/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_145"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_145"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_145"
    }
  }
}
node {
  name: "training/Adam/Variable_145/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_145"
}
node {
  name: "training/Adam/Variable_145/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_145"
  input: "training/Adam/zeros_145"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_145"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_145/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_145"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_145"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_146/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_146/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_146"
  op: "Fill"
  input: "training/Adam/zeros_146/shape_as_tensor"
  input: "training/Adam/zeros_146/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_146"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_146"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_146"
    }
  }
}
node {
  name: "training/Adam/Variable_146/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_146"
}
node {
  name: "training/Adam/Variable_146/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_146"
  input: "training/Adam/zeros_146"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_146"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_146/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_146"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_146"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_147/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_147/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_147"
  op: "Fill"
  input: "training/Adam/zeros_147/shape_as_tensor"
  input: "training/Adam/zeros_147/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_147"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_147"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_147"
    }
  }
}
node {
  name: "training/Adam/Variable_147/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_147"
}
node {
  name: "training/Adam/Variable_147/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_147"
  input: "training/Adam/zeros_147"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_147"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_147/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_147"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_147"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_148/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_148/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_148"
  op: "Fill"
  input: "training/Adam/zeros_148/shape_as_tensor"
  input: "training/Adam/zeros_148/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_148"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_148"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_148"
    }
  }
}
node {
  name: "training/Adam/Variable_148/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_148"
}
node {
  name: "training/Adam/Variable_148/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_148"
  input: "training/Adam/zeros_148"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_148"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_148/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_148"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_148"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_149/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_149/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_149"
  op: "Fill"
  input: "training/Adam/zeros_149/shape_as_tensor"
  input: "training/Adam/zeros_149/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_149"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_149"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_149"
    }
  }
}
node {
  name: "training/Adam/Variable_149/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_149"
}
node {
  name: "training/Adam/Variable_149/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_149"
  input: "training/Adam/zeros_149"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_149"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_149/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_149"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_149"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_150/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_150/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_150"
  op: "Fill"
  input: "training/Adam/zeros_150/shape_as_tensor"
  input: "training/Adam/zeros_150/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_150"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_150"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_150"
    }
  }
}
node {
  name: "training/Adam/Variable_150/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_150"
}
node {
  name: "training/Adam/Variable_150/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_150"
  input: "training/Adam/zeros_150"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_150"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_150/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_150"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_150"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_151/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_151/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_151"
  op: "Fill"
  input: "training/Adam/zeros_151/shape_as_tensor"
  input: "training/Adam/zeros_151/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_151"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_151"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_151"
    }
  }
}
node {
  name: "training/Adam/Variable_151/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_151"
}
node {
  name: "training/Adam/Variable_151/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_151"
  input: "training/Adam/zeros_151"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_151"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_151/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_151"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_151"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_152/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_152/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_152"
  op: "Fill"
  input: "training/Adam/zeros_152/shape_as_tensor"
  input: "training/Adam/zeros_152/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_152"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_152"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_152"
    }
  }
}
node {
  name: "training/Adam/Variable_152/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_152"
}
node {
  name: "training/Adam/Variable_152/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_152"
  input: "training/Adam/zeros_152"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_152"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_152/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_152"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_152"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_153/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_153/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_153"
  op: "Fill"
  input: "training/Adam/zeros_153/shape_as_tensor"
  input: "training/Adam/zeros_153/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_153"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_153"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_153"
    }
  }
}
node {
  name: "training/Adam/Variable_153/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_153"
}
node {
  name: "training/Adam/Variable_153/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_153"
  input: "training/Adam/zeros_153"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_153"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_153/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_153"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_153"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_154/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_154/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_154"
  op: "Fill"
  input: "training/Adam/zeros_154/shape_as_tensor"
  input: "training/Adam/zeros_154/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_154"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_154"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_154"
    }
  }
}
node {
  name: "training/Adam/Variable_154/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_154"
}
node {
  name: "training/Adam/Variable_154/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_154"
  input: "training/Adam/zeros_154"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_154"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_154/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_154"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_154"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_155/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_155/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_155"
  op: "Fill"
  input: "training/Adam/zeros_155/shape_as_tensor"
  input: "training/Adam/zeros_155/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_155"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_155"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_155"
    }
  }
}
node {
  name: "training/Adam/Variable_155/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_155"
}
node {
  name: "training/Adam/Variable_155/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_155"
  input: "training/Adam/zeros_155"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_155"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_155/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_155"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_155"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_156/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_156/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_156"
  op: "Fill"
  input: "training/Adam/zeros_156/shape_as_tensor"
  input: "training/Adam/zeros_156/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_156"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_156"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_156"
    }
  }
}
node {
  name: "training/Adam/Variable_156/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_156"
}
node {
  name: "training/Adam/Variable_156/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_156"
  input: "training/Adam/zeros_156"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_156"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_156/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_156"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_156"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_157/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_157/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_157"
  op: "Fill"
  input: "training/Adam/zeros_157/shape_as_tensor"
  input: "training/Adam/zeros_157/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_157"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_157"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_157"
    }
  }
}
node {
  name: "training/Adam/Variable_157/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_157"
}
node {
  name: "training/Adam/Variable_157/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_157"
  input: "training/Adam/zeros_157"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_157"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_157/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_157"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_157"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_158/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_158/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_158"
  op: "Fill"
  input: "training/Adam/zeros_158/shape_as_tensor"
  input: "training/Adam/zeros_158/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_158"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_158"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_158"
    }
  }
}
node {
  name: "training/Adam/Variable_158/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_158"
}
node {
  name: "training/Adam/Variable_158/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_158"
  input: "training/Adam/zeros_158"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_158"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_158/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_158"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_158"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_159/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_159/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_159"
  op: "Fill"
  input: "training/Adam/zeros_159/shape_as_tensor"
  input: "training/Adam/zeros_159/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_159"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_159"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_159"
    }
  }
}
node {
  name: "training/Adam/Variable_159/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_159"
}
node {
  name: "training/Adam/Variable_159/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_159"
  input: "training/Adam/zeros_159"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_159"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_159/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_159"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_159"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_160/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_160/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_160"
  op: "Fill"
  input: "training/Adam/zeros_160/shape_as_tensor"
  input: "training/Adam/zeros_160/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_160"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_160"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_160"
    }
  }
}
node {
  name: "training/Adam/Variable_160/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_160"
}
node {
  name: "training/Adam/Variable_160/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_160"
  input: "training/Adam/zeros_160"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_160"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_160/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_160"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_160"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/zeros_161/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/zeros_161/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/zeros_161"
  op: "Fill"
  input: "training/Adam/zeros_161/shape_as_tensor"
  input: "training/Adam/zeros_161/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/Variable_161"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_161"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/Variable_161"
    }
  }
}
node {
  name: "training/Adam/Variable_161/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_161"
}
node {
  name: "training/Adam/Variable_161/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_161"
  input: "training/Adam/zeros_161"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_161"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Variable_161/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_161"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/Variable_161"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_1"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_2"
  input: "training/Adam/mul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_2"
  op: "Sub"
  input: "training/Adam/sub_2/x"
  input: "training/Adam/ReadVariableOp_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_2"
  op: "Mul"
  input: "training/Adam/sub_2"
  input: "training/Adam/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add"
  op: "Add"
  input: "training/Adam/mul_1"
  input: "training/Adam/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_3"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_4"
  input: "training/Adam/mul_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_3"
  op: "Sub"
  input: "training/Adam/sub_3/x"
  input: "training/Adam/ReadVariableOp_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square"
  op: "Square"
  input: "training/Adam/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_4"
  op: "Mul"
  input: "training/Adam/sub_3"
  input: "training/Adam/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_1"
  op: "Add"
  input: "training/Adam/mul_3"
  input: "training/Adam/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_5"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "training/Adam/add_1"
  input: "training/Adam/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_1"
  op: "Maximum"
  input: "training/Adam/clip_by_value_1/Minimum"
  input: "training/Adam/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_1"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_2"
  op: "Add"
  input: "training/Adam/Sqrt_1"
  input: "training/Adam/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_1"
  op: "RealDiv"
  input: "training/Adam/mul_5"
  input: "training/Adam/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv2d_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_4"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_6"
  input: "training/Adam/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "training/Adam/Variable"
  input: "training/Adam/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "training/Adam/Variable"
  input: "^training/Adam/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_54"
  input: "training/Adam/add_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_54"
  input: "^training/Adam/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "conv2d_1/kernel"
  input: "training/Adam/sub_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "conv2d_1/kernel"
  input: "^training/Adam/AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_6"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_10"
  input: "training/Adam/mul_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_5"
  op: "Sub"
  input: "training/Adam/sub_5/x"
  input: "training/Adam/ReadVariableOp_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_7"
  op: "Mul"
  input: "training/Adam/sub_5"
  input: "training/Adam/gradients/conv2d_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_3"
  op: "Add"
  input: "training/Adam/mul_6"
  input: "training/Adam/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_8"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_12"
  input: "training/Adam/mul_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_6"
  op: "Sub"
  input: "training/Adam/sub_6/x"
  input: "training/Adam/ReadVariableOp_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_1"
  op: "Square"
  input: "training/Adam/gradients/conv2d_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_9"
  op: "Mul"
  input: "training/Adam/sub_6"
  input: "training/Adam/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_4"
  op: "Add"
  input: "training/Adam/mul_8"
  input: "training/Adam/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_10"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "training/Adam/add_4"
  input: "training/Adam/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_2"
  op: "Maximum"
  input: "training/Adam/clip_by_value_2/Minimum"
  input: "training/Adam/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_2"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_5/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_5"
  op: "Add"
  input: "training/Adam/Sqrt_2"
  input: "training/Adam/add_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_2"
  op: "RealDiv"
  input: "training/Adam/mul_10"
  input: "training/Adam/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "conv2d_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_7"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_14"
  input: "training/Adam/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_1"
  input: "training/Adam/add_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_1"
  input: "^training/Adam/AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_55"
  input: "training/Adam/add_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_55"
  input: "^training/Adam/AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "conv2d_1/bias"
  input: "training/Adam/sub_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "conv2d_1/bias"
  input: "^training/Adam/AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_11/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_11"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_18"
  input: "training/Adam/mul_11/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_8/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_8"
  op: "Sub"
  input: "training/Adam/sub_8/x"
  input: "training/Adam/ReadVariableOp_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_12"
  op: "Mul"
  input: "training/Adam/sub_8"
  input: "training/Adam/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_6"
  op: "Add"
  input: "training/Adam/mul_11"
  input: "training/Adam/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_13/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_13"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_20"
  input: "training/Adam/mul_13/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_9/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_9"
  op: "Sub"
  input: "training/Adam/sub_9/x"
  input: "training/Adam/ReadVariableOp_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_2"
  op: "Square"
  input: "training/Adam/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_14"
  op: "Mul"
  input: "training/Adam/sub_9"
  input: "training/Adam/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_7"
  op: "Add"
  input: "training/Adam/mul_13"
  input: "training/Adam/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_15"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_3/Minimum"
  op: "Minimum"
  input: "training/Adam/add_7"
  input: "training/Adam/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_3"
  op: "Maximum"
  input: "training/Adam/clip_by_value_3/Minimum"
  input: "training/Adam/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_3"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_8/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_8"
  op: "Add"
  input: "training/Adam/Sqrt_3"
  input: "training/Adam/add_8/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_3"
  op: "RealDiv"
  input: "training/Adam/mul_15"
  input: "training/Adam/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "conv2d_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_10"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_22"
  input: "training/Adam/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_2"
  input: "training/Adam/add_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_2"
  input: "^training/Adam/AssignVariableOp_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_56"
  input: "training/Adam/add_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_56"
  input: "^training/Adam/AssignVariableOp_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "conv2d_2/kernel"
  input: "training/Adam/sub_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "conv2d_2/kernel"
  input: "^training/Adam/AssignVariableOp_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_16/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_16"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_26"
  input: "training/Adam/mul_16/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_11/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_11"
  op: "Sub"
  input: "training/Adam/sub_11/x"
  input: "training/Adam/ReadVariableOp_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_17"
  op: "Mul"
  input: "training/Adam/sub_11"
  input: "training/Adam/gradients/conv2d_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_9"
  op: "Add"
  input: "training/Adam/mul_16"
  input: "training/Adam/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_18/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_18"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_28"
  input: "training/Adam/mul_18/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_12/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_12"
  op: "Sub"
  input: "training/Adam/sub_12/x"
  input: "training/Adam/ReadVariableOp_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_3"
  op: "Square"
  input: "training/Adam/gradients/conv2d_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_19"
  op: "Mul"
  input: "training/Adam/sub_12"
  input: "training/Adam/Square_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_10"
  op: "Add"
  input: "training/Adam/mul_18"
  input: "training/Adam/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_20"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_4/Minimum"
  op: "Minimum"
  input: "training/Adam/add_10"
  input: "training/Adam/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_4"
  op: "Maximum"
  input: "training/Adam/clip_by_value_4/Minimum"
  input: "training/Adam/Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_4"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_11/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_11"
  op: "Add"
  input: "training/Adam/Sqrt_4"
  input: "training/Adam/add_11/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_4"
  op: "RealDiv"
  input: "training/Adam/mul_20"
  input: "training/Adam/add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "conv2d_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_13"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_30"
  input: "training/Adam/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_3"
  input: "training/Adam/add_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_3"
  input: "^training/Adam/AssignVariableOp_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_57"
  input: "training/Adam/add_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_32"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_57"
  input: "^training/Adam/AssignVariableOp_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "conv2d_2/bias"
  input: "training/Adam/sub_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_33"
  op: "ReadVariableOp"
  input: "conv2d_2/bias"
  input: "^training/Adam/AssignVariableOp_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_34"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_21/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_21"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_34"
  input: "training/Adam/mul_21/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_35"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_14/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_14"
  op: "Sub"
  input: "training/Adam/sub_14/x"
  input: "training/Adam/ReadVariableOp_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_22"
  op: "Mul"
  input: "training/Adam/sub_14"
  input: "training/Adam/gradients/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_12"
  op: "Add"
  input: "training/Adam/mul_21"
  input: "training/Adam/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_36"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_23/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_23"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_36"
  input: "training/Adam/mul_23/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_37"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_15/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_15"
  op: "Sub"
  input: "training/Adam/sub_15/x"
  input: "training/Adam/ReadVariableOp_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_4"
  op: "Square"
  input: "training/Adam/gradients/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_24"
  op: "Mul"
  input: "training/Adam/sub_15"
  input: "training/Adam/Square_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_13"
  op: "Add"
  input: "training/Adam/mul_23"
  input: "training/Adam/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_25"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_5/Minimum"
  op: "Minimum"
  input: "training/Adam/add_13"
  input: "training/Adam/Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_5"
  op: "Maximum"
  input: "training/Adam/clip_by_value_5/Minimum"
  input: "training/Adam/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_5"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_14/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_14"
  op: "Add"
  input: "training/Adam/Sqrt_5"
  input: "training/Adam/add_14/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_5"
  op: "RealDiv"
  input: "training/Adam/mul_25"
  input: "training/Adam/add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_38"
  op: "ReadVariableOp"
  input: "conv2d_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_16"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_38"
  input: "training/Adam/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_4"
  input: "training/Adam/add_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_39"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_4"
  input: "^training/Adam/AssignVariableOp_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_58"
  input: "training/Adam/add_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_40"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_58"
  input: "^training/Adam/AssignVariableOp_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "conv2d_3/kernel"
  input: "training/Adam/sub_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_41"
  op: "ReadVariableOp"
  input: "conv2d_3/kernel"
  input: "^training/Adam/AssignVariableOp_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_42"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_26/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_26"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_42"
  input: "training/Adam/mul_26/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_43"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_17/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_17"
  op: "Sub"
  input: "training/Adam/sub_17/x"
  input: "training/Adam/ReadVariableOp_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_27"
  op: "Mul"
  input: "training/Adam/sub_17"
  input: "training/Adam/gradients/conv2d_3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_15"
  op: "Add"
  input: "training/Adam/mul_26"
  input: "training/Adam/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_44"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_28/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_28"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_44"
  input: "training/Adam/mul_28/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_45"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_18/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_18"
  op: "Sub"
  input: "training/Adam/sub_18/x"
  input: "training/Adam/ReadVariableOp_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_5"
  op: "Square"
  input: "training/Adam/gradients/conv2d_3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_29"
  op: "Mul"
  input: "training/Adam/sub_18"
  input: "training/Adam/Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_16"
  op: "Add"
  input: "training/Adam/mul_28"
  input: "training/Adam/mul_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_30"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_6/Minimum"
  op: "Minimum"
  input: "training/Adam/add_16"
  input: "training/Adam/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_6"
  op: "Maximum"
  input: "training/Adam/clip_by_value_6/Minimum"
  input: "training/Adam/Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_6"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_17/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_17"
  op: "Add"
  input: "training/Adam/Sqrt_6"
  input: "training/Adam/add_17/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_6"
  op: "RealDiv"
  input: "training/Adam/mul_30"
  input: "training/Adam/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_46"
  op: "ReadVariableOp"
  input: "conv2d_3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_19"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_46"
  input: "training/Adam/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_5"
  input: "training/Adam/add_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_47"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_5"
  input: "^training/Adam/AssignVariableOp_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_59"
  input: "training/Adam/add_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_48"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_59"
  input: "^training/Adam/AssignVariableOp_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "conv2d_3/bias"
  input: "training/Adam/sub_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_49"
  op: "ReadVariableOp"
  input: "conv2d_3/bias"
  input: "^training/Adam/AssignVariableOp_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_50"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_31/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_31"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_50"
  input: "training/Adam/mul_31/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_51"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_20/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_20"
  op: "Sub"
  input: "training/Adam/sub_20/x"
  input: "training/Adam/ReadVariableOp_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_32"
  op: "Mul"
  input: "training/Adam/sub_20"
  input: "training/Adam/gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_18"
  op: "Add"
  input: "training/Adam/mul_31"
  input: "training/Adam/mul_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_52"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_33/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_33"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_52"
  input: "training/Adam/mul_33/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_53"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_21/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_21"
  op: "Sub"
  input: "training/Adam/sub_21/x"
  input: "training/Adam/ReadVariableOp_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_6"
  op: "Square"
  input: "training/Adam/gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_34"
  op: "Mul"
  input: "training/Adam/sub_21"
  input: "training/Adam/Square_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_19"
  op: "Add"
  input: "training/Adam/mul_33"
  input: "training/Adam/mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_35"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_7/Minimum"
  op: "Minimum"
  input: "training/Adam/add_19"
  input: "training/Adam/Const_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_7"
  op: "Maximum"
  input: "training/Adam/clip_by_value_7/Minimum"
  input: "training/Adam/Const_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_7"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_20/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_20"
  op: "Add"
  input: "training/Adam/Sqrt_7"
  input: "training/Adam/add_20/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_7"
  op: "RealDiv"
  input: "training/Adam/mul_35"
  input: "training/Adam/add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_54"
  op: "ReadVariableOp"
  input: "batch_normalization_1/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_22"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_54"
  input: "training/Adam/truediv_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_6"
  input: "training/Adam/add_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_55"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_6"
  input: "^training/Adam/AssignVariableOp_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_60"
  input: "training/Adam/add_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_56"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_60"
  input: "^training/Adam/AssignVariableOp_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "batch_normalization_1/gamma"
  input: "training/Adam/sub_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_57"
  op: "ReadVariableOp"
  input: "batch_normalization_1/gamma"
  input: "^training/Adam/AssignVariableOp_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_58"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_36/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_36"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_58"
  input: "training/Adam/mul_36/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_59"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_23/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_23"
  op: "Sub"
  input: "training/Adam/sub_23/x"
  input: "training/Adam/ReadVariableOp_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_37"
  op: "Mul"
  input: "training/Adam/sub_23"
  input: "training/Adam/gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_21"
  op: "Add"
  input: "training/Adam/mul_36"
  input: "training/Adam/mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_60"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_38/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_38"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_60"
  input: "training/Adam/mul_38/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_61"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_24/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_24"
  op: "Sub"
  input: "training/Adam/sub_24/x"
  input: "training/Adam/ReadVariableOp_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_7"
  op: "Square"
  input: "training/Adam/gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_39"
  op: "Mul"
  input: "training/Adam/sub_24"
  input: "training/Adam/Square_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_22"
  op: "Add"
  input: "training/Adam/mul_38"
  input: "training/Adam/mul_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_40"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_8/Minimum"
  op: "Minimum"
  input: "training/Adam/add_22"
  input: "training/Adam/Const_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_8"
  op: "Maximum"
  input: "training/Adam/clip_by_value_8/Minimum"
  input: "training/Adam/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_8"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_23/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_23"
  op: "Add"
  input: "training/Adam/Sqrt_8"
  input: "training/Adam/add_23/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_8"
  op: "RealDiv"
  input: "training/Adam/mul_40"
  input: "training/Adam/add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_62"
  op: "ReadVariableOp"
  input: "batch_normalization_1/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_25"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_62"
  input: "training/Adam/truediv_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_7"
  input: "training/Adam/add_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_63"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_7"
  input: "^training/Adam/AssignVariableOp_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_61"
  input: "training/Adam/add_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_64"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_61"
  input: "^training/Adam/AssignVariableOp_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "batch_normalization_1/beta"
  input: "training/Adam/sub_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_65"
  op: "ReadVariableOp"
  input: "batch_normalization_1/beta"
  input: "^training/Adam/AssignVariableOp_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_66"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_41/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_41"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_66"
  input: "training/Adam/mul_41/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_67"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_26/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_26"
  op: "Sub"
  input: "training/Adam/sub_26/x"
  input: "training/Adam/ReadVariableOp_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_42"
  op: "Mul"
  input: "training/Adam/sub_26"
  input: "training/Adam/gradients/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_24"
  op: "Add"
  input: "training/Adam/mul_41"
  input: "training/Adam/mul_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_68"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_43/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_43"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_68"
  input: "training/Adam/mul_43/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_69"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_27/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_27"
  op: "Sub"
  input: "training/Adam/sub_27/x"
  input: "training/Adam/ReadVariableOp_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_8"
  op: "Square"
  input: "training/Adam/gradients/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_44"
  op: "Mul"
  input: "training/Adam/sub_27"
  input: "training/Adam/Square_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_25"
  op: "Add"
  input: "training/Adam/mul_43"
  input: "training/Adam/mul_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_45"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_9/Minimum"
  op: "Minimum"
  input: "training/Adam/add_25"
  input: "training/Adam/Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_9"
  op: "Maximum"
  input: "training/Adam/clip_by_value_9/Minimum"
  input: "training/Adam/Const_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_9"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_26/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_26"
  op: "Add"
  input: "training/Adam/Sqrt_9"
  input: "training/Adam/add_26/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_9"
  op: "RealDiv"
  input: "training/Adam/mul_45"
  input: "training/Adam/add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_70"
  op: "ReadVariableOp"
  input: "conv2d_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_28"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_70"
  input: "training/Adam/truediv_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_8"
  input: "training/Adam/add_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_71"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_8"
  input: "^training/Adam/AssignVariableOp_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_62"
  input: "training/Adam/add_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_72"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_62"
  input: "^training/Adam/AssignVariableOp_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "conv2d_4/kernel"
  input: "training/Adam/sub_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_73"
  op: "ReadVariableOp"
  input: "conv2d_4/kernel"
  input: "^training/Adam/AssignVariableOp_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_74"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_46/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_46"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_74"
  input: "training/Adam/mul_46/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_75"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_29/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_29"
  op: "Sub"
  input: "training/Adam/sub_29/x"
  input: "training/Adam/ReadVariableOp_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_47"
  op: "Mul"
  input: "training/Adam/sub_29"
  input: "training/Adam/gradients/conv2d_4/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_27"
  op: "Add"
  input: "training/Adam/mul_46"
  input: "training/Adam/mul_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_76"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_48/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_48"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_76"
  input: "training/Adam/mul_48/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_77"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_30/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_30"
  op: "Sub"
  input: "training/Adam/sub_30/x"
  input: "training/Adam/ReadVariableOp_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_9"
  op: "Square"
  input: "training/Adam/gradients/conv2d_4/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_49"
  op: "Mul"
  input: "training/Adam/sub_30"
  input: "training/Adam/Square_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_28"
  op: "Add"
  input: "training/Adam/mul_48"
  input: "training/Adam/mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_50"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_22"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_10/Minimum"
  op: "Minimum"
  input: "training/Adam/add_28"
  input: "training/Adam/Const_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_10"
  op: "Maximum"
  input: "training/Adam/clip_by_value_10/Minimum"
  input: "training/Adam/Const_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_10"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_29/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_29"
  op: "Add"
  input: "training/Adam/Sqrt_10"
  input: "training/Adam/add_29/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_10"
  op: "RealDiv"
  input: "training/Adam/mul_50"
  input: "training/Adam/add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_78"
  op: "ReadVariableOp"
  input: "conv2d_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_31"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_78"
  input: "training/Adam/truediv_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_9"
  input: "training/Adam/add_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_79"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_9"
  input: "^training/Adam/AssignVariableOp_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_63"
  input: "training/Adam/add_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_80"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_63"
  input: "^training/Adam/AssignVariableOp_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "conv2d_4/bias"
  input: "training/Adam/sub_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_81"
  op: "ReadVariableOp"
  input: "conv2d_4/bias"
  input: "^training/Adam/AssignVariableOp_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_82"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_51/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_51"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_82"
  input: "training/Adam/mul_51/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_83"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_32/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_32"
  op: "Sub"
  input: "training/Adam/sub_32/x"
  input: "training/Adam/ReadVariableOp_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_52"
  op: "Mul"
  input: "training/Adam/sub_32"
  input: "training/Adam/gradients/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_30"
  op: "Add"
  input: "training/Adam/mul_51"
  input: "training/Adam/mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_84"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_53/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_53"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_84"
  input: "training/Adam/mul_53/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_85"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_33/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_33"
  op: "Sub"
  input: "training/Adam/sub_33/x"
  input: "training/Adam/ReadVariableOp_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_10"
  op: "Square"
  input: "training/Adam/gradients/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_54"
  op: "Mul"
  input: "training/Adam/sub_33"
  input: "training/Adam/Square_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_31"
  op: "Add"
  input: "training/Adam/mul_53"
  input: "training/Adam/mul_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_55"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_11/Minimum"
  op: "Minimum"
  input: "training/Adam/add_31"
  input: "training/Adam/Const_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_11"
  op: "Maximum"
  input: "training/Adam/clip_by_value_11/Minimum"
  input: "training/Adam/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_11"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_32/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_32"
  op: "Add"
  input: "training/Adam/Sqrt_11"
  input: "training/Adam/add_32/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_11"
  op: "RealDiv"
  input: "training/Adam/mul_55"
  input: "training/Adam/add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_86"
  op: "ReadVariableOp"
  input: "conv2d_8/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_34"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_86"
  input: "training/Adam/truediv_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_10"
  input: "training/Adam/add_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_87"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_10"
  input: "^training/Adam/AssignVariableOp_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_64"
  input: "training/Adam/add_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_88"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_64"
  input: "^training/Adam/AssignVariableOp_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "conv2d_8/kernel"
  input: "training/Adam/sub_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_89"
  op: "ReadVariableOp"
  input: "conv2d_8/kernel"
  input: "^training/Adam/AssignVariableOp_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_90"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_56/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_56"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_90"
  input: "training/Adam/mul_56/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_91"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_35/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_35"
  op: "Sub"
  input: "training/Adam/sub_35/x"
  input: "training/Adam/ReadVariableOp_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_57"
  op: "Mul"
  input: "training/Adam/sub_35"
  input: "training/Adam/gradients/conv2d_8/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_33"
  op: "Add"
  input: "training/Adam/mul_56"
  input: "training/Adam/mul_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_92"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_58/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_58"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_92"
  input: "training/Adam/mul_58/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_93"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_36/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_36"
  op: "Sub"
  input: "training/Adam/sub_36/x"
  input: "training/Adam/ReadVariableOp_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_11"
  op: "Square"
  input: "training/Adam/gradients/conv2d_8/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_59"
  op: "Mul"
  input: "training/Adam/sub_36"
  input: "training/Adam/Square_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_34"
  op: "Add"
  input: "training/Adam/mul_58"
  input: "training/Adam/mul_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_60"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_12/Minimum"
  op: "Minimum"
  input: "training/Adam/add_34"
  input: "training/Adam/Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_12"
  op: "Maximum"
  input: "training/Adam/clip_by_value_12/Minimum"
  input: "training/Adam/Const_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_12"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_35/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_35"
  op: "Add"
  input: "training/Adam/Sqrt_12"
  input: "training/Adam/add_35/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_12"
  op: "RealDiv"
  input: "training/Adam/mul_60"
  input: "training/Adam/add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_94"
  op: "ReadVariableOp"
  input: "conv2d_8/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_37"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_94"
  input: "training/Adam/truediv_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_11"
  input: "training/Adam/add_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_95"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_11"
  input: "^training/Adam/AssignVariableOp_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_65"
  input: "training/Adam/add_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_96"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_65"
  input: "^training/Adam/AssignVariableOp_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "conv2d_8/bias"
  input: "training/Adam/sub_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_97"
  op: "ReadVariableOp"
  input: "conv2d_8/bias"
  input: "^training/Adam/AssignVariableOp_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_98"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_61/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_61"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_98"
  input: "training/Adam/mul_61/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_99"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_38/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_38"
  op: "Sub"
  input: "training/Adam/sub_38/x"
  input: "training/Adam/ReadVariableOp_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_62"
  op: "Mul"
  input: "training/Adam/sub_38"
  input: "training/Adam/gradients/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_36"
  op: "Add"
  input: "training/Adam/mul_61"
  input: "training/Adam/mul_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_100"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_63/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_63"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_100"
  input: "training/Adam/mul_63/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_101"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_39/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_39"
  op: "Sub"
  input: "training/Adam/sub_39/x"
  input: "training/Adam/ReadVariableOp_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_12"
  op: "Square"
  input: "training/Adam/gradients/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_64"
  op: "Mul"
  input: "training/Adam/sub_39"
  input: "training/Adam/Square_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_37"
  op: "Add"
  input: "training/Adam/mul_63"
  input: "training/Adam/mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_65"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_13/Minimum"
  op: "Minimum"
  input: "training/Adam/add_37"
  input: "training/Adam/Const_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_13"
  op: "Maximum"
  input: "training/Adam/clip_by_value_13/Minimum"
  input: "training/Adam/Const_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_13"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_38/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_38"
  op: "Add"
  input: "training/Adam/Sqrt_13"
  input: "training/Adam/add_38/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_13"
  op: "RealDiv"
  input: "training/Adam/mul_65"
  input: "training/Adam/add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_102"
  op: "ReadVariableOp"
  input: "conv2d_6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_40"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_102"
  input: "training/Adam/truediv_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_12"
  input: "training/Adam/add_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_103"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_12"
  input: "^training/Adam/AssignVariableOp_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_66"
  input: "training/Adam/add_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_104"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_66"
  input: "^training/Adam/AssignVariableOp_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "conv2d_6/kernel"
  input: "training/Adam/sub_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_105"
  op: "ReadVariableOp"
  input: "conv2d_6/kernel"
  input: "^training/Adam/AssignVariableOp_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_106"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_66/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_66"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_106"
  input: "training/Adam/mul_66/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_107"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_41/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_41"
  op: "Sub"
  input: "training/Adam/sub_41/x"
  input: "training/Adam/ReadVariableOp_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_67"
  op: "Mul"
  input: "training/Adam/sub_41"
  input: "training/Adam/gradients/conv2d_6/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_39"
  op: "Add"
  input: "training/Adam/mul_66"
  input: "training/Adam/mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_108"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_68/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_68"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_108"
  input: "training/Adam/mul_68/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_109"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_42/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_42"
  op: "Sub"
  input: "training/Adam/sub_42/x"
  input: "training/Adam/ReadVariableOp_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_13"
  op: "Square"
  input: "training/Adam/gradients/conv2d_6/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_69"
  op: "Mul"
  input: "training/Adam/sub_42"
  input: "training/Adam/Square_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_40"
  op: "Add"
  input: "training/Adam/mul_68"
  input: "training/Adam/mul_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_70"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_14/Minimum"
  op: "Minimum"
  input: "training/Adam/add_40"
  input: "training/Adam/Const_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_14"
  op: "Maximum"
  input: "training/Adam/clip_by_value_14/Minimum"
  input: "training/Adam/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_14"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_41/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_41"
  op: "Add"
  input: "training/Adam/Sqrt_14"
  input: "training/Adam/add_41/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_14"
  op: "RealDiv"
  input: "training/Adam/mul_70"
  input: "training/Adam/add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_110"
  op: "ReadVariableOp"
  input: "conv2d_6/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_43"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_110"
  input: "training/Adam/truediv_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_13"
  input: "training/Adam/add_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_111"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_13"
  input: "^training/Adam/AssignVariableOp_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_67"
  input: "training/Adam/add_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_112"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_67"
  input: "^training/Adam/AssignVariableOp_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "conv2d_6/bias"
  input: "training/Adam/sub_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_113"
  op: "ReadVariableOp"
  input: "conv2d_6/bias"
  input: "^training/Adam/AssignVariableOp_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_114"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_71/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_71"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_114"
  input: "training/Adam/mul_71/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_115"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_44/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_44"
  op: "Sub"
  input: "training/Adam/sub_44/x"
  input: "training/Adam/ReadVariableOp_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_72"
  op: "Mul"
  input: "training/Adam/sub_44"
  input: "training/Adam/gradients/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_42"
  op: "Add"
  input: "training/Adam/mul_71"
  input: "training/Adam/mul_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_116"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_73/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_73"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_116"
  input: "training/Adam/mul_73/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_117"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_45/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_45"
  op: "Sub"
  input: "training/Adam/sub_45/x"
  input: "training/Adam/ReadVariableOp_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_14"
  op: "Square"
  input: "training/Adam/gradients/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_74"
  op: "Mul"
  input: "training/Adam/sub_45"
  input: "training/Adam/Square_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_43"
  op: "Add"
  input: "training/Adam/mul_73"
  input: "training/Adam/mul_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_75"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_15/Minimum"
  op: "Minimum"
  input: "training/Adam/add_43"
  input: "training/Adam/Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_15"
  op: "Maximum"
  input: "training/Adam/clip_by_value_15/Minimum"
  input: "training/Adam/Const_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_15"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_44/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_44"
  op: "Add"
  input: "training/Adam/Sqrt_15"
  input: "training/Adam/add_44/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_15"
  op: "RealDiv"
  input: "training/Adam/mul_75"
  input: "training/Adam/add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_118"
  op: "ReadVariableOp"
  input: "conv2d_9/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_46"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_118"
  input: "training/Adam/truediv_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_14"
  input: "training/Adam/add_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_119"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_14"
  input: "^training/Adam/AssignVariableOp_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_68"
  input: "training/Adam/add_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_120"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_68"
  input: "^training/Adam/AssignVariableOp_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "conv2d_9/kernel"
  input: "training/Adam/sub_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_121"
  op: "ReadVariableOp"
  input: "conv2d_9/kernel"
  input: "^training/Adam/AssignVariableOp_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_122"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_76/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_76"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_122"
  input: "training/Adam/mul_76/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_123"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_47/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_47"
  op: "Sub"
  input: "training/Adam/sub_47/x"
  input: "training/Adam/ReadVariableOp_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_77"
  op: "Mul"
  input: "training/Adam/sub_47"
  input: "training/Adam/gradients/conv2d_9/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_45"
  op: "Add"
  input: "training/Adam/mul_76"
  input: "training/Adam/mul_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_124"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_78/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_78"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_124"
  input: "training/Adam/mul_78/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_125"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_48/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_48"
  op: "Sub"
  input: "training/Adam/sub_48/x"
  input: "training/Adam/ReadVariableOp_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_15"
  op: "Square"
  input: "training/Adam/gradients/conv2d_9/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_79"
  op: "Mul"
  input: "training/Adam/sub_48"
  input: "training/Adam/Square_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_46"
  op: "Add"
  input: "training/Adam/mul_78"
  input: "training/Adam/mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_80"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_34"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_16/Minimum"
  op: "Minimum"
  input: "training/Adam/add_46"
  input: "training/Adam/Const_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_16"
  op: "Maximum"
  input: "training/Adam/clip_by_value_16/Minimum"
  input: "training/Adam/Const_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_16"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_47/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_47"
  op: "Add"
  input: "training/Adam/Sqrt_16"
  input: "training/Adam/add_47/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_16"
  op: "RealDiv"
  input: "training/Adam/mul_80"
  input: "training/Adam/add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_126"
  op: "ReadVariableOp"
  input: "conv2d_9/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_49"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_126"
  input: "training/Adam/truediv_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_15"
  input: "training/Adam/add_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_127"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_15"
  input: "^training/Adam/AssignVariableOp_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_69"
  input: "training/Adam/add_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_128"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_69"
  input: "^training/Adam/AssignVariableOp_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "conv2d_9/bias"
  input: "training/Adam/sub_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_129"
  op: "ReadVariableOp"
  input: "conv2d_9/bias"
  input: "^training/Adam/AssignVariableOp_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_130"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_81/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_81"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_130"
  input: "training/Adam/mul_81/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_131"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_50/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_50"
  op: "Sub"
  input: "training/Adam/sub_50/x"
  input: "training/Adam/ReadVariableOp_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_82"
  op: "Mul"
  input: "training/Adam/sub_50"
  input: "training/Adam/gradients/conv2d_11/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_48"
  op: "Add"
  input: "training/Adam/mul_81"
  input: "training/Adam/mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_132"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_83/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_83"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_132"
  input: "training/Adam/mul_83/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_133"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_51/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_51"
  op: "Sub"
  input: "training/Adam/sub_51/x"
  input: "training/Adam/ReadVariableOp_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_16"
  op: "Square"
  input: "training/Adam/gradients/conv2d_11/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_84"
  op: "Mul"
  input: "training/Adam/sub_51"
  input: "training/Adam/Square_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_49"
  op: "Add"
  input: "training/Adam/mul_83"
  input: "training/Adam/mul_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_85"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_17/Minimum"
  op: "Minimum"
  input: "training/Adam/add_49"
  input: "training/Adam/Const_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_17"
  op: "Maximum"
  input: "training/Adam/clip_by_value_17/Minimum"
  input: "training/Adam/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_17"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_50/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_50"
  op: "Add"
  input: "training/Adam/Sqrt_17"
  input: "training/Adam/add_50/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_17"
  op: "RealDiv"
  input: "training/Adam/mul_85"
  input: "training/Adam/add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_134"
  op: "ReadVariableOp"
  input: "conv2d_11/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_52"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_134"
  input: "training/Adam/truediv_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_16"
  input: "training/Adam/add_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_135"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_16"
  input: "^training/Adam/AssignVariableOp_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_70"
  input: "training/Adam/add_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_136"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_70"
  input: "^training/Adam/AssignVariableOp_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "conv2d_11/kernel"
  input: "training/Adam/sub_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_137"
  op: "ReadVariableOp"
  input: "conv2d_11/kernel"
  input: "^training/Adam/AssignVariableOp_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_138"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_86/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_86"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_138"
  input: "training/Adam/mul_86/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_139"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_53/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_53"
  op: "Sub"
  input: "training/Adam/sub_53/x"
  input: "training/Adam/ReadVariableOp_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_87"
  op: "Mul"
  input: "training/Adam/sub_53"
  input: "training/Adam/gradients/conv2d_11/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_51"
  op: "Add"
  input: "training/Adam/mul_86"
  input: "training/Adam/mul_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_140"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_88/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_88"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_140"
  input: "training/Adam/mul_88/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_141"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_54/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_54"
  op: "Sub"
  input: "training/Adam/sub_54/x"
  input: "training/Adam/ReadVariableOp_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_17"
  op: "Square"
  input: "training/Adam/gradients/conv2d_11/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_89"
  op: "Mul"
  input: "training/Adam/sub_54"
  input: "training/Adam/Square_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_52"
  op: "Add"
  input: "training/Adam/mul_88"
  input: "training/Adam/mul_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_90"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_37"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_18/Minimum"
  op: "Minimum"
  input: "training/Adam/add_52"
  input: "training/Adam/Const_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_18"
  op: "Maximum"
  input: "training/Adam/clip_by_value_18/Minimum"
  input: "training/Adam/Const_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_18"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_53/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_53"
  op: "Add"
  input: "training/Adam/Sqrt_18"
  input: "training/Adam/add_53/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_18"
  op: "RealDiv"
  input: "training/Adam/mul_90"
  input: "training/Adam/add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_142"
  op: "ReadVariableOp"
  input: "conv2d_11/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_55"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_142"
  input: "training/Adam/truediv_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_17"
  input: "training/Adam/add_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_143"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_17"
  input: "^training/Adam/AssignVariableOp_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_71"
  input: "training/Adam/add_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_144"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_71"
  input: "^training/Adam/AssignVariableOp_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "conv2d_11/bias"
  input: "training/Adam/sub_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_145"
  op: "ReadVariableOp"
  input: "conv2d_11/bias"
  input: "^training/Adam/AssignVariableOp_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_146"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_91/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_91"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_146"
  input: "training/Adam/mul_91/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_147"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_56/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_56"
  op: "Sub"
  input: "training/Adam/sub_56/x"
  input: "training/Adam/ReadVariableOp_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_92"
  op: "Mul"
  input: "training/Adam/sub_56"
  input: "training/Adam/gradients/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_54"
  op: "Add"
  input: "training/Adam/mul_91"
  input: "training/Adam/mul_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_148"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_93/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_93"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_148"
  input: "training/Adam/mul_93/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_149"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_57/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_57"
  op: "Sub"
  input: "training/Adam/sub_57/x"
  input: "training/Adam/ReadVariableOp_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_18"
  op: "Square"
  input: "training/Adam/gradients/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_94"
  op: "Mul"
  input: "training/Adam/sub_57"
  input: "training/Adam/Square_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_55"
  op: "Add"
  input: "training/Adam/mul_93"
  input: "training/Adam/mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_95"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_40"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_19/Minimum"
  op: "Minimum"
  input: "training/Adam/add_55"
  input: "training/Adam/Const_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_19"
  op: "Maximum"
  input: "training/Adam/clip_by_value_19/Minimum"
  input: "training/Adam/Const_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_19"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_56/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_56"
  op: "Add"
  input: "training/Adam/Sqrt_19"
  input: "training/Adam/add_56/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_19"
  op: "RealDiv"
  input: "training/Adam/mul_95"
  input: "training/Adam/add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_150"
  op: "ReadVariableOp"
  input: "conv2d_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_58"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_150"
  input: "training/Adam/truediv_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_18"
  input: "training/Adam/add_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_151"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_18"
  input: "^training/Adam/AssignVariableOp_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_72"
  input: "training/Adam/add_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_152"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_72"
  input: "^training/Adam/AssignVariableOp_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "conv2d_5/kernel"
  input: "training/Adam/sub_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_153"
  op: "ReadVariableOp"
  input: "conv2d_5/kernel"
  input: "^training/Adam/AssignVariableOp_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_154"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_96/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_96"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_154"
  input: "training/Adam/mul_96/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_155"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_59/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_59"
  op: "Sub"
  input: "training/Adam/sub_59/x"
  input: "training/Adam/ReadVariableOp_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_97"
  op: "Mul"
  input: "training/Adam/sub_59"
  input: "training/Adam/gradients/conv2d_5/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_57"
  op: "Add"
  input: "training/Adam/mul_96"
  input: "training/Adam/mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_156"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_98/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_98"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_156"
  input: "training/Adam/mul_98/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_157"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_60/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_60"
  op: "Sub"
  input: "training/Adam/sub_60/x"
  input: "training/Adam/ReadVariableOp_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_19"
  op: "Square"
  input: "training/Adam/gradients/conv2d_5/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_99"
  op: "Mul"
  input: "training/Adam/sub_60"
  input: "training/Adam/Square_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_58"
  op: "Add"
  input: "training/Adam/mul_98"
  input: "training/Adam/mul_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_100"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_20/Minimum"
  op: "Minimum"
  input: "training/Adam/add_58"
  input: "training/Adam/Const_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_20"
  op: "Maximum"
  input: "training/Adam/clip_by_value_20/Minimum"
  input: "training/Adam/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_20"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_59/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_59"
  op: "Add"
  input: "training/Adam/Sqrt_20"
  input: "training/Adam/add_59/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_20"
  op: "RealDiv"
  input: "training/Adam/mul_100"
  input: "training/Adam/add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_158"
  op: "ReadVariableOp"
  input: "conv2d_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_61"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_158"
  input: "training/Adam/truediv_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_19"
  input: "training/Adam/add_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_159"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_19"
  input: "^training/Adam/AssignVariableOp_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_73"
  input: "training/Adam/add_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_160"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_73"
  input: "^training/Adam/AssignVariableOp_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "conv2d_5/bias"
  input: "training/Adam/sub_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_161"
  op: "ReadVariableOp"
  input: "conv2d_5/bias"
  input: "^training/Adam/AssignVariableOp_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_162"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_101/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_101"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_162"
  input: "training/Adam/mul_101/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_163"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_62/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_62"
  op: "Sub"
  input: "training/Adam/sub_62/x"
  input: "training/Adam/ReadVariableOp_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_102"
  op: "Mul"
  input: "training/Adam/sub_62"
  input: "training/Adam/gradients/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_60"
  op: "Add"
  input: "training/Adam/mul_101"
  input: "training/Adam/mul_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_164"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_103/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_103"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_164"
  input: "training/Adam/mul_103/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_165"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_63/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_63"
  op: "Sub"
  input: "training/Adam/sub_63/x"
  input: "training/Adam/ReadVariableOp_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_20"
  op: "Square"
  input: "training/Adam/gradients/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_104"
  op: "Mul"
  input: "training/Adam/sub_63"
  input: "training/Adam/Square_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_61"
  op: "Add"
  input: "training/Adam/mul_103"
  input: "training/Adam/mul_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_105"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_43"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_21/Minimum"
  op: "Minimum"
  input: "training/Adam/add_61"
  input: "training/Adam/Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_21"
  op: "Maximum"
  input: "training/Adam/clip_by_value_21/Minimum"
  input: "training/Adam/Const_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_21"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_62/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_62"
  op: "Add"
  input: "training/Adam/Sqrt_21"
  input: "training/Adam/add_62/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_21"
  op: "RealDiv"
  input: "training/Adam/mul_105"
  input: "training/Adam/add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_166"
  op: "ReadVariableOp"
  input: "conv2d_7/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_64"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_166"
  input: "training/Adam/truediv_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_20"
  input: "training/Adam/add_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_167"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_20"
  input: "^training/Adam/AssignVariableOp_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_74"
  input: "training/Adam/add_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_168"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_74"
  input: "^training/Adam/AssignVariableOp_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "conv2d_7/kernel"
  input: "training/Adam/sub_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_169"
  op: "ReadVariableOp"
  input: "conv2d_7/kernel"
  input: "^training/Adam/AssignVariableOp_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_170"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_106/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_106"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_170"
  input: "training/Adam/mul_106/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_171"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_65/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_65"
  op: "Sub"
  input: "training/Adam/sub_65/x"
  input: "training/Adam/ReadVariableOp_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_107"
  op: "Mul"
  input: "training/Adam/sub_65"
  input: "training/Adam/gradients/conv2d_7/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_63"
  op: "Add"
  input: "training/Adam/mul_106"
  input: "training/Adam/mul_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_172"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_108/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_108"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_172"
  input: "training/Adam/mul_108/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_173"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_66/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_66"
  op: "Sub"
  input: "training/Adam/sub_66/x"
  input: "training/Adam/ReadVariableOp_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_21"
  op: "Square"
  input: "training/Adam/gradients/conv2d_7/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_109"
  op: "Mul"
  input: "training/Adam/sub_66"
  input: "training/Adam/Square_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_64"
  op: "Add"
  input: "training/Adam/mul_108"
  input: "training/Adam/mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_110"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_46"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_22/Minimum"
  op: "Minimum"
  input: "training/Adam/add_64"
  input: "training/Adam/Const_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_22"
  op: "Maximum"
  input: "training/Adam/clip_by_value_22/Minimum"
  input: "training/Adam/Const_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_22"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_65/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_65"
  op: "Add"
  input: "training/Adam/Sqrt_22"
  input: "training/Adam/add_65/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_22"
  op: "RealDiv"
  input: "training/Adam/mul_110"
  input: "training/Adam/add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_174"
  op: "ReadVariableOp"
  input: "conv2d_7/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_67"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_174"
  input: "training/Adam/truediv_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_21"
  input: "training/Adam/add_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_175"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_21"
  input: "^training/Adam/AssignVariableOp_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_75"
  input: "training/Adam/add_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_176"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_75"
  input: "^training/Adam/AssignVariableOp_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "conv2d_7/bias"
  input: "training/Adam/sub_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_177"
  op: "ReadVariableOp"
  input: "conv2d_7/bias"
  input: "^training/Adam/AssignVariableOp_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_178"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_111/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_111"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_178"
  input: "training/Adam/mul_111/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_179"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_68/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_68"
  op: "Sub"
  input: "training/Adam/sub_68/x"
  input: "training/Adam/ReadVariableOp_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_112"
  op: "Mul"
  input: "training/Adam/sub_68"
  input: "training/Adam/gradients/conv2d_10/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_66"
  op: "Add"
  input: "training/Adam/mul_111"
  input: "training/Adam/mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_180"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_113/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_113"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_180"
  input: "training/Adam/mul_113/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_181"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_69/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_69"
  op: "Sub"
  input: "training/Adam/sub_69/x"
  input: "training/Adam/ReadVariableOp_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_22"
  op: "Square"
  input: "training/Adam/gradients/conv2d_10/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_114"
  op: "Mul"
  input: "training/Adam/sub_69"
  input: "training/Adam/Square_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_67"
  op: "Add"
  input: "training/Adam/mul_113"
  input: "training/Adam/mul_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_115"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_23/Minimum"
  op: "Minimum"
  input: "training/Adam/add_67"
  input: "training/Adam/Const_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_23"
  op: "Maximum"
  input: "training/Adam/clip_by_value_23/Minimum"
  input: "training/Adam/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_23"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_68/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_68"
  op: "Add"
  input: "training/Adam/Sqrt_23"
  input: "training/Adam/add_68/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_23"
  op: "RealDiv"
  input: "training/Adam/mul_115"
  input: "training/Adam/add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_182"
  op: "ReadVariableOp"
  input: "conv2d_10/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_70"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_182"
  input: "training/Adam/truediv_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_22"
  input: "training/Adam/add_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_183"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_22"
  input: "^training/Adam/AssignVariableOp_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_76"
  input: "training/Adam/add_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_184"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_76"
  input: "^training/Adam/AssignVariableOp_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "conv2d_10/kernel"
  input: "training/Adam/sub_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_185"
  op: "ReadVariableOp"
  input: "conv2d_10/kernel"
  input: "^training/Adam/AssignVariableOp_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_186"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_116/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_116"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_186"
  input: "training/Adam/mul_116/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_187"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_71/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_71"
  op: "Sub"
  input: "training/Adam/sub_71/x"
  input: "training/Adam/ReadVariableOp_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_117"
  op: "Mul"
  input: "training/Adam/sub_71"
  input: "training/Adam/gradients/conv2d_10/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_69"
  op: "Add"
  input: "training/Adam/mul_116"
  input: "training/Adam/mul_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_188"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_118/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_118"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_188"
  input: "training/Adam/mul_118/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_189"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_72/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_72"
  op: "Sub"
  input: "training/Adam/sub_72/x"
  input: "training/Adam/ReadVariableOp_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_23"
  op: "Square"
  input: "training/Adam/gradients/conv2d_10/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_119"
  op: "Mul"
  input: "training/Adam/sub_72"
  input: "training/Adam/Square_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_70"
  op: "Add"
  input: "training/Adam/mul_118"
  input: "training/Adam/mul_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_120"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_49"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_24/Minimum"
  op: "Minimum"
  input: "training/Adam/add_70"
  input: "training/Adam/Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_24"
  op: "Maximum"
  input: "training/Adam/clip_by_value_24/Minimum"
  input: "training/Adam/Const_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_24"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_71/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_71"
  op: "Add"
  input: "training/Adam/Sqrt_24"
  input: "training/Adam/add_71/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_24"
  op: "RealDiv"
  input: "training/Adam/mul_120"
  input: "training/Adam/add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_190"
  op: "ReadVariableOp"
  input: "conv2d_10/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_73"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_190"
  input: "training/Adam/truediv_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_23"
  input: "training/Adam/add_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_191"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_23"
  input: "^training/Adam/AssignVariableOp_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_77"
  input: "training/Adam/add_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_192"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_77"
  input: "^training/Adam/AssignVariableOp_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "conv2d_10/bias"
  input: "training/Adam/sub_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_193"
  op: "ReadVariableOp"
  input: "conv2d_10/bias"
  input: "^training/Adam/AssignVariableOp_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_194"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_121/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_121"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_194"
  input: "training/Adam/mul_121/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_195"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_74/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_74"
  op: "Sub"
  input: "training/Adam/sub_74/x"
  input: "training/Adam/ReadVariableOp_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_122"
  op: "Mul"
  input: "training/Adam/sub_74"
  input: "training/Adam/gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_72"
  op: "Add"
  input: "training/Adam/mul_121"
  input: "training/Adam/mul_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_196"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_123/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_123"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_196"
  input: "training/Adam/mul_123/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_197"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_75/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_75"
  op: "Sub"
  input: "training/Adam/sub_75/x"
  input: "training/Adam/ReadVariableOp_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_24"
  op: "Square"
  input: "training/Adam/gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_124"
  op: "Mul"
  input: "training/Adam/sub_75"
  input: "training/Adam/Square_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_73"
  op: "Add"
  input: "training/Adam/mul_123"
  input: "training/Adam/mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_125"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_52"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_25/Minimum"
  op: "Minimum"
  input: "training/Adam/add_73"
  input: "training/Adam/Const_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_25"
  op: "Maximum"
  input: "training/Adam/clip_by_value_25/Minimum"
  input: "training/Adam/Const_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_25"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_74/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_74"
  op: "Add"
  input: "training/Adam/Sqrt_25"
  input: "training/Adam/add_74/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_25"
  op: "RealDiv"
  input: "training/Adam/mul_125"
  input: "training/Adam/add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_198"
  op: "ReadVariableOp"
  input: "batch_normalization_2/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_76"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_198"
  input: "training/Adam/truediv_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_24"
  input: "training/Adam/add_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_199"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_24"
  input: "^training/Adam/AssignVariableOp_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_78"
  input: "training/Adam/add_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_200"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_78"
  input: "^training/Adam/AssignVariableOp_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "batch_normalization_2/gamma"
  input: "training/Adam/sub_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_201"
  op: "ReadVariableOp"
  input: "batch_normalization_2/gamma"
  input: "^training/Adam/AssignVariableOp_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_202"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_126/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_126"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_202"
  input: "training/Adam/mul_126/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_203"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_77/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_77"
  op: "Sub"
  input: "training/Adam/sub_77/x"
  input: "training/Adam/ReadVariableOp_203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_127"
  op: "Mul"
  input: "training/Adam/sub_77"
  input: "training/Adam/gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_75"
  op: "Add"
  input: "training/Adam/mul_126"
  input: "training/Adam/mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_204"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_128/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_128"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_204"
  input: "training/Adam/mul_128/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_205"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_78/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_78"
  op: "Sub"
  input: "training/Adam/sub_78/x"
  input: "training/Adam/ReadVariableOp_205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_25"
  op: "Square"
  input: "training/Adam/gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_129"
  op: "Mul"
  input: "training/Adam/sub_78"
  input: "training/Adam/Square_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_76"
  op: "Add"
  input: "training/Adam/mul_128"
  input: "training/Adam/mul_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_130"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_26/Minimum"
  op: "Minimum"
  input: "training/Adam/add_76"
  input: "training/Adam/Const_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_26"
  op: "Maximum"
  input: "training/Adam/clip_by_value_26/Minimum"
  input: "training/Adam/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_26"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_77/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_77"
  op: "Add"
  input: "training/Adam/Sqrt_26"
  input: "training/Adam/add_77/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_26"
  op: "RealDiv"
  input: "training/Adam/mul_130"
  input: "training/Adam/add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_206"
  op: "ReadVariableOp"
  input: "batch_normalization_2/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_79"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_206"
  input: "training/Adam/truediv_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_25"
  input: "training/Adam/add_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_207"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_25"
  input: "^training/Adam/AssignVariableOp_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_79"
  input: "training/Adam/add_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_208"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_79"
  input: "^training/Adam/AssignVariableOp_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "batch_normalization_2/beta"
  input: "training/Adam/sub_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_209"
  op: "ReadVariableOp"
  input: "batch_normalization_2/beta"
  input: "^training/Adam/AssignVariableOp_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_210"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_131/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_131"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_210"
  input: "training/Adam/mul_131/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_211"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_80/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_80"
  op: "Sub"
  input: "training/Adam/sub_80/x"
  input: "training/Adam/ReadVariableOp_211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_132"
  op: "Mul"
  input: "training/Adam/sub_80"
  input: "training/Adam/gradients/conv2d_12/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_78"
  op: "Add"
  input: "training/Adam/mul_131"
  input: "training/Adam/mul_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_212"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_133/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_133"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_212"
  input: "training/Adam/mul_133/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_213"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_81/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_81"
  op: "Sub"
  input: "training/Adam/sub_81/x"
  input: "training/Adam/ReadVariableOp_213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_26"
  op: "Square"
  input: "training/Adam/gradients/conv2d_12/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_134"
  op: "Mul"
  input: "training/Adam/sub_81"
  input: "training/Adam/Square_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_79"
  op: "Add"
  input: "training/Adam/mul_133"
  input: "training/Adam/mul_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_135"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_55"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_27/Minimum"
  op: "Minimum"
  input: "training/Adam/add_79"
  input: "training/Adam/Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_27"
  op: "Maximum"
  input: "training/Adam/clip_by_value_27/Minimum"
  input: "training/Adam/Const_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_27"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_80/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_80"
  op: "Add"
  input: "training/Adam/Sqrt_27"
  input: "training/Adam/add_80/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_27"
  op: "RealDiv"
  input: "training/Adam/mul_135"
  input: "training/Adam/add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_214"
  op: "ReadVariableOp"
  input: "conv2d_12/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_82"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_214"
  input: "training/Adam/truediv_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_26"
  input: "training/Adam/add_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_215"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_26"
  input: "^training/Adam/AssignVariableOp_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_80"
  input: "training/Adam/add_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_216"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_80"
  input: "^training/Adam/AssignVariableOp_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "conv2d_12/kernel"
  input: "training/Adam/sub_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_217"
  op: "ReadVariableOp"
  input: "conv2d_12/kernel"
  input: "^training/Adam/AssignVariableOp_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_218"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_136/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_136"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_218"
  input: "training/Adam/mul_136/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_219"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_83/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_83"
  op: "Sub"
  input: "training/Adam/sub_83/x"
  input: "training/Adam/ReadVariableOp_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_137"
  op: "Mul"
  input: "training/Adam/sub_83"
  input: "training/Adam/gradients/conv2d_12/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_81"
  op: "Add"
  input: "training/Adam/mul_136"
  input: "training/Adam/mul_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_220"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_138/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_138"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_220"
  input: "training/Adam/mul_138/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_221"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_84/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_84"
  op: "Sub"
  input: "training/Adam/sub_84/x"
  input: "training/Adam/ReadVariableOp_221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_27"
  op: "Square"
  input: "training/Adam/gradients/conv2d_12/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_139"
  op: "Mul"
  input: "training/Adam/sub_84"
  input: "training/Adam/Square_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_82"
  op: "Add"
  input: "training/Adam/mul_138"
  input: "training/Adam/mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_140"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_58"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_28/Minimum"
  op: "Minimum"
  input: "training/Adam/add_82"
  input: "training/Adam/Const_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_28"
  op: "Maximum"
  input: "training/Adam/clip_by_value_28/Minimum"
  input: "training/Adam/Const_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_28"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_83/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_83"
  op: "Add"
  input: "training/Adam/Sqrt_28"
  input: "training/Adam/add_83/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_28"
  op: "RealDiv"
  input: "training/Adam/mul_140"
  input: "training/Adam/add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_222"
  op: "ReadVariableOp"
  input: "conv2d_12/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_85"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_222"
  input: "training/Adam/truediv_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_27"
  input: "training/Adam/add_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_223"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_27"
  input: "^training/Adam/AssignVariableOp_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_81"
  input: "training/Adam/add_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_224"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_81"
  input: "^training/Adam/AssignVariableOp_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "conv2d_12/bias"
  input: "training/Adam/sub_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_225"
  op: "ReadVariableOp"
  input: "conv2d_12/bias"
  input: "^training/Adam/AssignVariableOp_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_226"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_141/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_141"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_226"
  input: "training/Adam/mul_141/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_227"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_86/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_86"
  op: "Sub"
  input: "training/Adam/sub_86/x"
  input: "training/Adam/ReadVariableOp_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_142"
  op: "Mul"
  input: "training/Adam/sub_86"
  input: "training/Adam/gradients/conv2d_14/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_84"
  op: "Add"
  input: "training/Adam/mul_141"
  input: "training/Adam/mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_228"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_143/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_143"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_228"
  input: "training/Adam/mul_143/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_229"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_87/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_87"
  op: "Sub"
  input: "training/Adam/sub_87/x"
  input: "training/Adam/ReadVariableOp_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_28"
  op: "Square"
  input: "training/Adam/gradients/conv2d_14/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_144"
  op: "Mul"
  input: "training/Adam/sub_87"
  input: "training/Adam/Square_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_85"
  op: "Add"
  input: "training/Adam/mul_143"
  input: "training/Adam/mul_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_145"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_29/Minimum"
  op: "Minimum"
  input: "training/Adam/add_85"
  input: "training/Adam/Const_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_29"
  op: "Maximum"
  input: "training/Adam/clip_by_value_29/Minimum"
  input: "training/Adam/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_29"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_86/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_86"
  op: "Add"
  input: "training/Adam/Sqrt_29"
  input: "training/Adam/add_86/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_29"
  op: "RealDiv"
  input: "training/Adam/mul_145"
  input: "training/Adam/add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_230"
  op: "ReadVariableOp"
  input: "conv2d_14/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_88"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_230"
  input: "training/Adam/truediv_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_28"
  input: "training/Adam/add_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_231"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_28"
  input: "^training/Adam/AssignVariableOp_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_82"
  input: "training/Adam/add_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_232"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_82"
  input: "^training/Adam/AssignVariableOp_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "conv2d_14/kernel"
  input: "training/Adam/sub_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_233"
  op: "ReadVariableOp"
  input: "conv2d_14/kernel"
  input: "^training/Adam/AssignVariableOp_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_234"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_146/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_146"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_234"
  input: "training/Adam/mul_146/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_235"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_89/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_89"
  op: "Sub"
  input: "training/Adam/sub_89/x"
  input: "training/Adam/ReadVariableOp_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_147"
  op: "Mul"
  input: "training/Adam/sub_89"
  input: "training/Adam/gradients/conv2d_14/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_87"
  op: "Add"
  input: "training/Adam/mul_146"
  input: "training/Adam/mul_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_236"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_148/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_148"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_236"
  input: "training/Adam/mul_148/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_237"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_90/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_90"
  op: "Sub"
  input: "training/Adam/sub_90/x"
  input: "training/Adam/ReadVariableOp_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_29"
  op: "Square"
  input: "training/Adam/gradients/conv2d_14/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_149"
  op: "Mul"
  input: "training/Adam/sub_90"
  input: "training/Adam/Square_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_88"
  op: "Add"
  input: "training/Adam/mul_148"
  input: "training/Adam/mul_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_150"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_61"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_30/Minimum"
  op: "Minimum"
  input: "training/Adam/add_88"
  input: "training/Adam/Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_30"
  op: "Maximum"
  input: "training/Adam/clip_by_value_30/Minimum"
  input: "training/Adam/Const_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_30"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_89/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_89"
  op: "Add"
  input: "training/Adam/Sqrt_30"
  input: "training/Adam/add_89/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_30"
  op: "RealDiv"
  input: "training/Adam/mul_150"
  input: "training/Adam/add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_238"
  op: "ReadVariableOp"
  input: "conv2d_14/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_91"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_238"
  input: "training/Adam/truediv_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_29"
  input: "training/Adam/add_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_239"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_29"
  input: "^training/Adam/AssignVariableOp_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_83"
  input: "training/Adam/add_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_240"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_83"
  input: "^training/Adam/AssignVariableOp_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "conv2d_14/bias"
  input: "training/Adam/sub_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_241"
  op: "ReadVariableOp"
  input: "conv2d_14/bias"
  input: "^training/Adam/AssignVariableOp_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_242"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_151/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_151"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_242"
  input: "training/Adam/mul_151/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_243"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_92/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_92"
  op: "Sub"
  input: "training/Adam/sub_92/x"
  input: "training/Adam/ReadVariableOp_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_152"
  op: "Mul"
  input: "training/Adam/sub_92"
  input: "training/Adam/gradients/conv2d_16/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_90"
  op: "Add"
  input: "training/Adam/mul_151"
  input: "training/Adam/mul_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_244"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_153/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_153"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_244"
  input: "training/Adam/mul_153/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_245"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_93/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_93"
  op: "Sub"
  input: "training/Adam/sub_93/x"
  input: "training/Adam/ReadVariableOp_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_30"
  op: "Square"
  input: "training/Adam/gradients/conv2d_16/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_154"
  op: "Mul"
  input: "training/Adam/sub_93"
  input: "training/Adam/Square_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_91"
  op: "Add"
  input: "training/Adam/mul_153"
  input: "training/Adam/mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_155"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_64"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_31/Minimum"
  op: "Minimum"
  input: "training/Adam/add_91"
  input: "training/Adam/Const_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_31"
  op: "Maximum"
  input: "training/Adam/clip_by_value_31/Minimum"
  input: "training/Adam/Const_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_31"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_92/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_92"
  op: "Add"
  input: "training/Adam/Sqrt_31"
  input: "training/Adam/add_92/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_31"
  op: "RealDiv"
  input: "training/Adam/mul_155"
  input: "training/Adam/add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_246"
  op: "ReadVariableOp"
  input: "conv2d_16/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_94"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_246"
  input: "training/Adam/truediv_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_30"
  input: "training/Adam/add_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_247"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_30"
  input: "^training/Adam/AssignVariableOp_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_84"
  input: "training/Adam/add_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_248"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_84"
  input: "^training/Adam/AssignVariableOp_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "conv2d_16/kernel"
  input: "training/Adam/sub_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_249"
  op: "ReadVariableOp"
  input: "conv2d_16/kernel"
  input: "^training/Adam/AssignVariableOp_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_250"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_156/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_156"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_250"
  input: "training/Adam/mul_156/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_251"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_95/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_95"
  op: "Sub"
  input: "training/Adam/sub_95/x"
  input: "training/Adam/ReadVariableOp_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_157"
  op: "Mul"
  input: "training/Adam/sub_95"
  input: "training/Adam/gradients/conv2d_16/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_93"
  op: "Add"
  input: "training/Adam/mul_156"
  input: "training/Adam/mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_252"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_158/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_158"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_252"
  input: "training/Adam/mul_158/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_253"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_96/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_96"
  op: "Sub"
  input: "training/Adam/sub_96/x"
  input: "training/Adam/ReadVariableOp_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_31"
  op: "Square"
  input: "training/Adam/gradients/conv2d_16/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_159"
  op: "Mul"
  input: "training/Adam/sub_96"
  input: "training/Adam/Square_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_94"
  op: "Add"
  input: "training/Adam/mul_158"
  input: "training/Adam/mul_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_160"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_32/Minimum"
  op: "Minimum"
  input: "training/Adam/add_94"
  input: "training/Adam/Const_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_32"
  op: "Maximum"
  input: "training/Adam/clip_by_value_32/Minimum"
  input: "training/Adam/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_32"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_95/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_95"
  op: "Add"
  input: "training/Adam/Sqrt_32"
  input: "training/Adam/add_95/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_32"
  op: "RealDiv"
  input: "training/Adam/mul_160"
  input: "training/Adam/add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_254"
  op: "ReadVariableOp"
  input: "conv2d_16/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_97"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_254"
  input: "training/Adam/truediv_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_31"
  input: "training/Adam/add_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_255"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_31"
  input: "^training/Adam/AssignVariableOp_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_85"
  input: "training/Adam/add_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_256"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_85"
  input: "^training/Adam/AssignVariableOp_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "conv2d_16/bias"
  input: "training/Adam/sub_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_257"
  op: "ReadVariableOp"
  input: "conv2d_16/bias"
  input: "^training/Adam/AssignVariableOp_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_258"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_161/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_161"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_258"
  input: "training/Adam/mul_161/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_259"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_98/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_98"
  op: "Sub"
  input: "training/Adam/sub_98/x"
  input: "training/Adam/ReadVariableOp_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_162"
  op: "Mul"
  input: "training/Adam/sub_98"
  input: "training/Adam/gradients/conv2d_13/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_96"
  op: "Add"
  input: "training/Adam/mul_161"
  input: "training/Adam/mul_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_260"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_163/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_163"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_260"
  input: "training/Adam/mul_163/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_261"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_99/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_99"
  op: "Sub"
  input: "training/Adam/sub_99/x"
  input: "training/Adam/ReadVariableOp_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_32"
  op: "Square"
  input: "training/Adam/gradients/conv2d_13/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_164"
  op: "Mul"
  input: "training/Adam/sub_99"
  input: "training/Adam/Square_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_97"
  op: "Add"
  input: "training/Adam/mul_163"
  input: "training/Adam/mul_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_165"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_67"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_33/Minimum"
  op: "Minimum"
  input: "training/Adam/add_97"
  input: "training/Adam/Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_33"
  op: "Maximum"
  input: "training/Adam/clip_by_value_33/Minimum"
  input: "training/Adam/Const_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_33"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_98/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_98"
  op: "Add"
  input: "training/Adam/Sqrt_33"
  input: "training/Adam/add_98/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_33"
  op: "RealDiv"
  input: "training/Adam/mul_165"
  input: "training/Adam/add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_262"
  op: "ReadVariableOp"
  input: "conv2d_13/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_100"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_262"
  input: "training/Adam/truediv_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_32"
  input: "training/Adam/add_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_263"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_32"
  input: "^training/Adam/AssignVariableOp_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_86"
  input: "training/Adam/add_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_264"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_86"
  input: "^training/Adam/AssignVariableOp_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "conv2d_13/kernel"
  input: "training/Adam/sub_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_265"
  op: "ReadVariableOp"
  input: "conv2d_13/kernel"
  input: "^training/Adam/AssignVariableOp_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_266"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_166/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_166"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_266"
  input: "training/Adam/mul_166/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_267"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_101/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_101"
  op: "Sub"
  input: "training/Adam/sub_101/x"
  input: "training/Adam/ReadVariableOp_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_167"
  op: "Mul"
  input: "training/Adam/sub_101"
  input: "training/Adam/gradients/conv2d_13/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_99"
  op: "Add"
  input: "training/Adam/mul_166"
  input: "training/Adam/mul_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_268"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_168/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_168"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_268"
  input: "training/Adam/mul_168/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_269"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_102/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_102"
  op: "Sub"
  input: "training/Adam/sub_102/x"
  input: "training/Adam/ReadVariableOp_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_33"
  op: "Square"
  input: "training/Adam/gradients/conv2d_13/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_169"
  op: "Mul"
  input: "training/Adam/sub_102"
  input: "training/Adam/Square_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_100"
  op: "Add"
  input: "training/Adam/mul_168"
  input: "training/Adam/mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_170"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_70"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_34/Minimum"
  op: "Minimum"
  input: "training/Adam/add_100"
  input: "training/Adam/Const_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_34"
  op: "Maximum"
  input: "training/Adam/clip_by_value_34/Minimum"
  input: "training/Adam/Const_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_34"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_101/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_101"
  op: "Add"
  input: "training/Adam/Sqrt_34"
  input: "training/Adam/add_101/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_34"
  op: "RealDiv"
  input: "training/Adam/mul_170"
  input: "training/Adam/add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_270"
  op: "ReadVariableOp"
  input: "conv2d_13/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_103"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_270"
  input: "training/Adam/truediv_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_33"
  input: "training/Adam/add_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_271"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_33"
  input: "^training/Adam/AssignVariableOp_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_87"
  input: "training/Adam/add_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_272"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_87"
  input: "^training/Adam/AssignVariableOp_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "conv2d_13/bias"
  input: "training/Adam/sub_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_273"
  op: "ReadVariableOp"
  input: "conv2d_13/bias"
  input: "^training/Adam/AssignVariableOp_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_274"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_171/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_171"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_274"
  input: "training/Adam/mul_171/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_275"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_104/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_104"
  op: "Sub"
  input: "training/Adam/sub_104/x"
  input: "training/Adam/ReadVariableOp_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_172"
  op: "Mul"
  input: "training/Adam/sub_104"
  input: "training/Adam/gradients/conv2d_15/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_102"
  op: "Add"
  input: "training/Adam/mul_171"
  input: "training/Adam/mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_276"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_173/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_173"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_276"
  input: "training/Adam/mul_173/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_277"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_105/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_105"
  op: "Sub"
  input: "training/Adam/sub_105/x"
  input: "training/Adam/ReadVariableOp_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_34"
  op: "Square"
  input: "training/Adam/gradients/conv2d_15/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_174"
  op: "Mul"
  input: "training/Adam/sub_105"
  input: "training/Adam/Square_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_103"
  op: "Add"
  input: "training/Adam/mul_173"
  input: "training/Adam/mul_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_175"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_35/Minimum"
  op: "Minimum"
  input: "training/Adam/add_103"
  input: "training/Adam/Const_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_35"
  op: "Maximum"
  input: "training/Adam/clip_by_value_35/Minimum"
  input: "training/Adam/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_35"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_104/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_104"
  op: "Add"
  input: "training/Adam/Sqrt_35"
  input: "training/Adam/add_104/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_35"
  op: "RealDiv"
  input: "training/Adam/mul_175"
  input: "training/Adam/add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_278"
  op: "ReadVariableOp"
  input: "conv2d_15/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_106"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_278"
  input: "training/Adam/truediv_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_34"
  input: "training/Adam/add_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_279"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_34"
  input: "^training/Adam/AssignVariableOp_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_88"
  input: "training/Adam/add_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_280"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_88"
  input: "^training/Adam/AssignVariableOp_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "conv2d_15/kernel"
  input: "training/Adam/sub_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_281"
  op: "ReadVariableOp"
  input: "conv2d_15/kernel"
  input: "^training/Adam/AssignVariableOp_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_282"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_176/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_176"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_282"
  input: "training/Adam/mul_176/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_283"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_107/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_107"
  op: "Sub"
  input: "training/Adam/sub_107/x"
  input: "training/Adam/ReadVariableOp_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_177"
  op: "Mul"
  input: "training/Adam/sub_107"
  input: "training/Adam/gradients/conv2d_15/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_105"
  op: "Add"
  input: "training/Adam/mul_176"
  input: "training/Adam/mul_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_284"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_178/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_178"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_284"
  input: "training/Adam/mul_178/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_285"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_108/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_108"
  op: "Sub"
  input: "training/Adam/sub_108/x"
  input: "training/Adam/ReadVariableOp_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_35"
  op: "Square"
  input: "training/Adam/gradients/conv2d_15/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_179"
  op: "Mul"
  input: "training/Adam/sub_108"
  input: "training/Adam/Square_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_106"
  op: "Add"
  input: "training/Adam/mul_178"
  input: "training/Adam/mul_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_180"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_73"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_36/Minimum"
  op: "Minimum"
  input: "training/Adam/add_106"
  input: "training/Adam/Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_36"
  op: "Maximum"
  input: "training/Adam/clip_by_value_36/Minimum"
  input: "training/Adam/Const_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_36"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_107/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_107"
  op: "Add"
  input: "training/Adam/Sqrt_36"
  input: "training/Adam/add_107/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_36"
  op: "RealDiv"
  input: "training/Adam/mul_180"
  input: "training/Adam/add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_286"
  op: "ReadVariableOp"
  input: "conv2d_15/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_109"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_286"
  input: "training/Adam/truediv_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_35"
  input: "training/Adam/add_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_287"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_35"
  input: "^training/Adam/AssignVariableOp_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_89"
  input: "training/Adam/add_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_288"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_89"
  input: "^training/Adam/AssignVariableOp_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "conv2d_15/bias"
  input: "training/Adam/sub_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_289"
  op: "ReadVariableOp"
  input: "conv2d_15/bias"
  input: "^training/Adam/AssignVariableOp_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_290"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_181/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_181"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_290"
  input: "training/Adam/mul_181/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_291"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_110/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_110"
  op: "Sub"
  input: "training/Adam/sub_110/x"
  input: "training/Adam/ReadVariableOp_291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_182"
  op: "Mul"
  input: "training/Adam/sub_110"
  input: "training/Adam/gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_108"
  op: "Add"
  input: "training/Adam/mul_181"
  input: "training/Adam/mul_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_292"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_183/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_183"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_292"
  input: "training/Adam/mul_183/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_293"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_111/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_111"
  op: "Sub"
  input: "training/Adam/sub_111/x"
  input: "training/Adam/ReadVariableOp_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_36"
  op: "Square"
  input: "training/Adam/gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_184"
  op: "Mul"
  input: "training/Adam/sub_111"
  input: "training/Adam/Square_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_109"
  op: "Add"
  input: "training/Adam/mul_183"
  input: "training/Adam/mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_185"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_76"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_37/Minimum"
  op: "Minimum"
  input: "training/Adam/add_109"
  input: "training/Adam/Const_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_37"
  op: "Maximum"
  input: "training/Adam/clip_by_value_37/Minimum"
  input: "training/Adam/Const_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_37"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_110/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_110"
  op: "Add"
  input: "training/Adam/Sqrt_37"
  input: "training/Adam/add_110/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_37"
  op: "RealDiv"
  input: "training/Adam/mul_185"
  input: "training/Adam/add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_294"
  op: "ReadVariableOp"
  input: "batch_normalization_3/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_112"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_294"
  input: "training/Adam/truediv_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_36"
  input: "training/Adam/add_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_295"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_36"
  input: "^training/Adam/AssignVariableOp_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_90"
  input: "training/Adam/add_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_296"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_90"
  input: "^training/Adam/AssignVariableOp_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "batch_normalization_3/gamma"
  input: "training/Adam/sub_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_297"
  op: "ReadVariableOp"
  input: "batch_normalization_3/gamma"
  input: "^training/Adam/AssignVariableOp_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_298"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_186/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_186"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_298"
  input: "training/Adam/mul_186/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_299"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_113/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_113"
  op: "Sub"
  input: "training/Adam/sub_113/x"
  input: "training/Adam/ReadVariableOp_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_187"
  op: "Mul"
  input: "training/Adam/sub_113"
  input: "training/Adam/gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_111"
  op: "Add"
  input: "training/Adam/mul_186"
  input: "training/Adam/mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_300"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_188/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_188"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_300"
  input: "training/Adam/mul_188/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_301"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_114/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_114"
  op: "Sub"
  input: "training/Adam/sub_114/x"
  input: "training/Adam/ReadVariableOp_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_37"
  op: "Square"
  input: "training/Adam/gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_189"
  op: "Mul"
  input: "training/Adam/sub_114"
  input: "training/Adam/Square_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_112"
  op: "Add"
  input: "training/Adam/mul_188"
  input: "training/Adam/mul_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_190"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_38/Minimum"
  op: "Minimum"
  input: "training/Adam/add_112"
  input: "training/Adam/Const_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_38"
  op: "Maximum"
  input: "training/Adam/clip_by_value_38/Minimum"
  input: "training/Adam/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_38"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_113/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_113"
  op: "Add"
  input: "training/Adam/Sqrt_38"
  input: "training/Adam/add_113/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_38"
  op: "RealDiv"
  input: "training/Adam/mul_190"
  input: "training/Adam/add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_302"
  op: "ReadVariableOp"
  input: "batch_normalization_3/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_115"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_302"
  input: "training/Adam/truediv_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_37"
  input: "training/Adam/add_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_303"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_37"
  input: "^training/Adam/AssignVariableOp_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_91"
  input: "training/Adam/add_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_304"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_91"
  input: "^training/Adam/AssignVariableOp_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "batch_normalization_3/beta"
  input: "training/Adam/sub_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_305"
  op: "ReadVariableOp"
  input: "batch_normalization_3/beta"
  input: "^training/Adam/AssignVariableOp_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_306"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_191/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_191"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_306"
  input: "training/Adam/mul_191/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_307"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_116/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_116"
  op: "Sub"
  input: "training/Adam/sub_116/x"
  input: "training/Adam/ReadVariableOp_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_192"
  op: "Mul"
  input: "training/Adam/sub_116"
  input: "training/Adam/gradients/conv2d_17/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_114"
  op: "Add"
  input: "training/Adam/mul_191"
  input: "training/Adam/mul_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_308"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_193/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_193"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_308"
  input: "training/Adam/mul_193/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_309"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_117/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_117"
  op: "Sub"
  input: "training/Adam/sub_117/x"
  input: "training/Adam/ReadVariableOp_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_38"
  op: "Square"
  input: "training/Adam/gradients/conv2d_17/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_194"
  op: "Mul"
  input: "training/Adam/sub_117"
  input: "training/Adam/Square_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_115"
  op: "Add"
  input: "training/Adam/mul_193"
  input: "training/Adam/mul_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_195"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_79"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_39/Minimum"
  op: "Minimum"
  input: "training/Adam/add_115"
  input: "training/Adam/Const_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_39"
  op: "Maximum"
  input: "training/Adam/clip_by_value_39/Minimum"
  input: "training/Adam/Const_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_39"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_116/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_116"
  op: "Add"
  input: "training/Adam/Sqrt_39"
  input: "training/Adam/add_116/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_39"
  op: "RealDiv"
  input: "training/Adam/mul_195"
  input: "training/Adam/add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_310"
  op: "ReadVariableOp"
  input: "conv2d_17/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_118"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_310"
  input: "training/Adam/truediv_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_38"
  input: "training/Adam/add_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_311"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_38"
  input: "^training/Adam/AssignVariableOp_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_92"
  input: "training/Adam/add_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_312"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_92"
  input: "^training/Adam/AssignVariableOp_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "conv2d_17/kernel"
  input: "training/Adam/sub_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_313"
  op: "ReadVariableOp"
  input: "conv2d_17/kernel"
  input: "^training/Adam/AssignVariableOp_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_314"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_196/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_196"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_314"
  input: "training/Adam/mul_196/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_315"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_119/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_119"
  op: "Sub"
  input: "training/Adam/sub_119/x"
  input: "training/Adam/ReadVariableOp_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_197"
  op: "Mul"
  input: "training/Adam/sub_119"
  input: "training/Adam/gradients/conv2d_17/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_117"
  op: "Add"
  input: "training/Adam/mul_196"
  input: "training/Adam/mul_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_316"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_198/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_198"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_316"
  input: "training/Adam/mul_198/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_317"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_120/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_120"
  op: "Sub"
  input: "training/Adam/sub_120/x"
  input: "training/Adam/ReadVariableOp_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_39"
  op: "Square"
  input: "training/Adam/gradients/conv2d_17/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_199"
  op: "Mul"
  input: "training/Adam/sub_120"
  input: "training/Adam/Square_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_118"
  op: "Add"
  input: "training/Adam/mul_198"
  input: "training/Adam/mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_200"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_82"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_40/Minimum"
  op: "Minimum"
  input: "training/Adam/add_118"
  input: "training/Adam/Const_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_40"
  op: "Maximum"
  input: "training/Adam/clip_by_value_40/Minimum"
  input: "training/Adam/Const_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_40"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_119/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_119"
  op: "Add"
  input: "training/Adam/Sqrt_40"
  input: "training/Adam/add_119/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_40"
  op: "RealDiv"
  input: "training/Adam/mul_200"
  input: "training/Adam/add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_318"
  op: "ReadVariableOp"
  input: "conv2d_17/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_121"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_318"
  input: "training/Adam/truediv_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_39"
  input: "training/Adam/add_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_319"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_39"
  input: "^training/Adam/AssignVariableOp_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_93"
  input: "training/Adam/add_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_320"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_93"
  input: "^training/Adam/AssignVariableOp_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "conv2d_17/bias"
  input: "training/Adam/sub_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_321"
  op: "ReadVariableOp"
  input: "conv2d_17/bias"
  input: "^training/Adam/AssignVariableOp_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_322"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_201/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_201"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_322"
  input: "training/Adam/mul_201/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_323"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_122/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_122"
  op: "Sub"
  input: "training/Adam/sub_122/x"
  input: "training/Adam/ReadVariableOp_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_202"
  op: "Mul"
  input: "training/Adam/sub_122"
  input: "training/Adam/gradients/conv2d_19/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_120"
  op: "Add"
  input: "training/Adam/mul_201"
  input: "training/Adam/mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_324"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_203/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_203"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_324"
  input: "training/Adam/mul_203/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_325"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_123/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_123"
  op: "Sub"
  input: "training/Adam/sub_123/x"
  input: "training/Adam/ReadVariableOp_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_40"
  op: "Square"
  input: "training/Adam/gradients/conv2d_19/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_204"
  op: "Mul"
  input: "training/Adam/sub_123"
  input: "training/Adam/Square_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_121"
  op: "Add"
  input: "training/Adam/mul_203"
  input: "training/Adam/mul_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_205"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_41/Minimum"
  op: "Minimum"
  input: "training/Adam/add_121"
  input: "training/Adam/Const_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_41"
  op: "Maximum"
  input: "training/Adam/clip_by_value_41/Minimum"
  input: "training/Adam/Const_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_41"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_122/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_122"
  op: "Add"
  input: "training/Adam/Sqrt_41"
  input: "training/Adam/add_122/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_41"
  op: "RealDiv"
  input: "training/Adam/mul_205"
  input: "training/Adam/add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_326"
  op: "ReadVariableOp"
  input: "conv2d_19/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_124"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_326"
  input: "training/Adam/truediv_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_40"
  input: "training/Adam/add_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_327"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_40"
  input: "^training/Adam/AssignVariableOp_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_94"
  input: "training/Adam/add_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_328"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_94"
  input: "^training/Adam/AssignVariableOp_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "conv2d_19/kernel"
  input: "training/Adam/sub_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_329"
  op: "ReadVariableOp"
  input: "conv2d_19/kernel"
  input: "^training/Adam/AssignVariableOp_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_330"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_206/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_206"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_330"
  input: "training/Adam/mul_206/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_331"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_125/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_125"
  op: "Sub"
  input: "training/Adam/sub_125/x"
  input: "training/Adam/ReadVariableOp_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_207"
  op: "Mul"
  input: "training/Adam/sub_125"
  input: "training/Adam/gradients/conv2d_19/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_123"
  op: "Add"
  input: "training/Adam/mul_206"
  input: "training/Adam/mul_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_332"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_208/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_208"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_332"
  input: "training/Adam/mul_208/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_333"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_126/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_126"
  op: "Sub"
  input: "training/Adam/sub_126/x"
  input: "training/Adam/ReadVariableOp_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_41"
  op: "Square"
  input: "training/Adam/gradients/conv2d_19/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_209"
  op: "Mul"
  input: "training/Adam/sub_126"
  input: "training/Adam/Square_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_124"
  op: "Add"
  input: "training/Adam/mul_208"
  input: "training/Adam/mul_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_210"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_85"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_42/Minimum"
  op: "Minimum"
  input: "training/Adam/add_124"
  input: "training/Adam/Const_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_42"
  op: "Maximum"
  input: "training/Adam/clip_by_value_42/Minimum"
  input: "training/Adam/Const_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_42"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_125/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_125"
  op: "Add"
  input: "training/Adam/Sqrt_42"
  input: "training/Adam/add_125/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_42"
  op: "RealDiv"
  input: "training/Adam/mul_210"
  input: "training/Adam/add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_334"
  op: "ReadVariableOp"
  input: "conv2d_19/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_127"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_334"
  input: "training/Adam/truediv_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_41"
  input: "training/Adam/add_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_335"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_41"
  input: "^training/Adam/AssignVariableOp_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_95"
  input: "training/Adam/add_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_336"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_95"
  input: "^training/Adam/AssignVariableOp_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "conv2d_19/bias"
  input: "training/Adam/sub_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_337"
  op: "ReadVariableOp"
  input: "conv2d_19/bias"
  input: "^training/Adam/AssignVariableOp_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_338"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_211/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_211"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_338"
  input: "training/Adam/mul_211/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_339"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_128/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_128"
  op: "Sub"
  input: "training/Adam/sub_128/x"
  input: "training/Adam/ReadVariableOp_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_212"
  op: "Mul"
  input: "training/Adam/sub_128"
  input: "training/Adam/gradients/conv2d_18/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_126"
  op: "Add"
  input: "training/Adam/mul_211"
  input: "training/Adam/mul_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_340"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_213/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_213"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_340"
  input: "training/Adam/mul_213/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_341"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_129/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_129"
  op: "Sub"
  input: "training/Adam/sub_129/x"
  input: "training/Adam/ReadVariableOp_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_42"
  op: "Square"
  input: "training/Adam/gradients/conv2d_18/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_214"
  op: "Mul"
  input: "training/Adam/sub_129"
  input: "training/Adam/Square_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_127"
  op: "Add"
  input: "training/Adam/mul_213"
  input: "training/Adam/mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_215"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_88"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_43/Minimum"
  op: "Minimum"
  input: "training/Adam/add_127"
  input: "training/Adam/Const_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_43"
  op: "Maximum"
  input: "training/Adam/clip_by_value_43/Minimum"
  input: "training/Adam/Const_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_43"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_128/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_128"
  op: "Add"
  input: "training/Adam/Sqrt_43"
  input: "training/Adam/add_128/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_43"
  op: "RealDiv"
  input: "training/Adam/mul_215"
  input: "training/Adam/add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_342"
  op: "ReadVariableOp"
  input: "conv2d_18/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_130"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_342"
  input: "training/Adam/truediv_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_42"
  input: "training/Adam/add_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_343"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_42"
  input: "^training/Adam/AssignVariableOp_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_96"
  input: "training/Adam/add_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_344"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_96"
  input: "^training/Adam/AssignVariableOp_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "conv2d_18/kernel"
  input: "training/Adam/sub_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_345"
  op: "ReadVariableOp"
  input: "conv2d_18/kernel"
  input: "^training/Adam/AssignVariableOp_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_346"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_216/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_216"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_346"
  input: "training/Adam/mul_216/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_347"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_131/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_131"
  op: "Sub"
  input: "training/Adam/sub_131/x"
  input: "training/Adam/ReadVariableOp_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_217"
  op: "Mul"
  input: "training/Adam/sub_131"
  input: "training/Adam/gradients/conv2d_18/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_129"
  op: "Add"
  input: "training/Adam/mul_216"
  input: "training/Adam/mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_348"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_218/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_218"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_348"
  input: "training/Adam/mul_218/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_349"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_132/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_132"
  op: "Sub"
  input: "training/Adam/sub_132/x"
  input: "training/Adam/ReadVariableOp_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_43"
  op: "Square"
  input: "training/Adam/gradients/conv2d_18/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_219"
  op: "Mul"
  input: "training/Adam/sub_132"
  input: "training/Adam/Square_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_130"
  op: "Add"
  input: "training/Adam/mul_218"
  input: "training/Adam/mul_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_220"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_44/Minimum"
  op: "Minimum"
  input: "training/Adam/add_130"
  input: "training/Adam/Const_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_44"
  op: "Maximum"
  input: "training/Adam/clip_by_value_44/Minimum"
  input: "training/Adam/Const_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_44"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_131/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_131"
  op: "Add"
  input: "training/Adam/Sqrt_44"
  input: "training/Adam/add_131/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_44"
  op: "RealDiv"
  input: "training/Adam/mul_220"
  input: "training/Adam/add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_350"
  op: "ReadVariableOp"
  input: "conv2d_18/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_133"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_350"
  input: "training/Adam/truediv_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_43"
  input: "training/Adam/add_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_351"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_43"
  input: "^training/Adam/AssignVariableOp_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_97"
  input: "training/Adam/add_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_352"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_97"
  input: "^training/Adam/AssignVariableOp_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "conv2d_18/bias"
  input: "training/Adam/sub_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_353"
  op: "ReadVariableOp"
  input: "conv2d_18/bias"
  input: "^training/Adam/AssignVariableOp_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_354"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_221/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_221"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_354"
  input: "training/Adam/mul_221/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_355"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_134/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_134"
  op: "Sub"
  input: "training/Adam/sub_134/x"
  input: "training/Adam/ReadVariableOp_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_222"
  op: "Mul"
  input: "training/Adam/sub_134"
  input: "training/Adam/gradients/conv2d_20/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_132"
  op: "Add"
  input: "training/Adam/mul_221"
  input: "training/Adam/mul_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_356"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_223/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_223"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_356"
  input: "training/Adam/mul_223/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_357"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_135/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_135"
  op: "Sub"
  input: "training/Adam/sub_135/x"
  input: "training/Adam/ReadVariableOp_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_44"
  op: "Square"
  input: "training/Adam/gradients/conv2d_20/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_224"
  op: "Mul"
  input: "training/Adam/sub_135"
  input: "training/Adam/Square_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_133"
  op: "Add"
  input: "training/Adam/mul_223"
  input: "training/Adam/mul_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_225"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_91"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_92"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_45/Minimum"
  op: "Minimum"
  input: "training/Adam/add_133"
  input: "training/Adam/Const_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_45"
  op: "Maximum"
  input: "training/Adam/clip_by_value_45/Minimum"
  input: "training/Adam/Const_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_45"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_134/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_134"
  op: "Add"
  input: "training/Adam/Sqrt_45"
  input: "training/Adam/add_134/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_45"
  op: "RealDiv"
  input: "training/Adam/mul_225"
  input: "training/Adam/add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_358"
  op: "ReadVariableOp"
  input: "conv2d_20/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_136"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_358"
  input: "training/Adam/truediv_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_44"
  input: "training/Adam/add_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_359"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_44"
  input: "^training/Adam/AssignVariableOp_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_98"
  input: "training/Adam/add_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_360"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_98"
  input: "^training/Adam/AssignVariableOp_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "conv2d_20/kernel"
  input: "training/Adam/sub_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_361"
  op: "ReadVariableOp"
  input: "conv2d_20/kernel"
  input: "^training/Adam/AssignVariableOp_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_362"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_226/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_226"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_362"
  input: "training/Adam/mul_226/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_363"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_137/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_137"
  op: "Sub"
  input: "training/Adam/sub_137/x"
  input: "training/Adam/ReadVariableOp_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_227"
  op: "Mul"
  input: "training/Adam/sub_137"
  input: "training/Adam/gradients/conv2d_20/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_135"
  op: "Add"
  input: "training/Adam/mul_226"
  input: "training/Adam/mul_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_364"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_228/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_228"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_364"
  input: "training/Adam/mul_228/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_365"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_138/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_138"
  op: "Sub"
  input: "training/Adam/sub_138/x"
  input: "training/Adam/ReadVariableOp_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_45"
  op: "Square"
  input: "training/Adam/gradients/conv2d_20/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_229"
  op: "Mul"
  input: "training/Adam/sub_138"
  input: "training/Adam/Square_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_136"
  op: "Add"
  input: "training/Adam/mul_228"
  input: "training/Adam/mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_230"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_94"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_46/Minimum"
  op: "Minimum"
  input: "training/Adam/add_136"
  input: "training/Adam/Const_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_46"
  op: "Maximum"
  input: "training/Adam/clip_by_value_46/Minimum"
  input: "training/Adam/Const_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_46"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_137/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_137"
  op: "Add"
  input: "training/Adam/Sqrt_46"
  input: "training/Adam/add_137/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_46"
  op: "RealDiv"
  input: "training/Adam/mul_230"
  input: "training/Adam/add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_366"
  op: "ReadVariableOp"
  input: "conv2d_20/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_139"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_366"
  input: "training/Adam/truediv_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_45"
  input: "training/Adam/add_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_367"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_45"
  input: "^training/Adam/AssignVariableOp_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_99"
  input: "training/Adam/add_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_368"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_99"
  input: "^training/Adam/AssignVariableOp_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "conv2d_20/bias"
  input: "training/Adam/sub_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_369"
  op: "ReadVariableOp"
  input: "conv2d_20/bias"
  input: "^training/Adam/AssignVariableOp_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_370"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_231/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_231"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_370"
  input: "training/Adam/mul_231/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_371"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_140/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_140"
  op: "Sub"
  input: "training/Adam/sub_140/x"
  input: "training/Adam/ReadVariableOp_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_232"
  op: "Mul"
  input: "training/Adam/sub_140"
  input: "training/Adam/gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_138"
  op: "Add"
  input: "training/Adam/mul_231"
  input: "training/Adam/mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_372"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_233/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_233"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_372"
  input: "training/Adam/mul_233/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_373"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_141/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_141"
  op: "Sub"
  input: "training/Adam/sub_141/x"
  input: "training/Adam/ReadVariableOp_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_46"
  op: "Square"
  input: "training/Adam/gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_234"
  op: "Mul"
  input: "training/Adam/sub_141"
  input: "training/Adam/Square_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_139"
  op: "Add"
  input: "training/Adam/mul_233"
  input: "training/Adam/mul_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_235"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_47/Minimum"
  op: "Minimum"
  input: "training/Adam/add_139"
  input: "training/Adam/Const_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_47"
  op: "Maximum"
  input: "training/Adam/clip_by_value_47/Minimum"
  input: "training/Adam/Const_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_47"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_140/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_140"
  op: "Add"
  input: "training/Adam/Sqrt_47"
  input: "training/Adam/add_140/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_47"
  op: "RealDiv"
  input: "training/Adam/mul_235"
  input: "training/Adam/add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_374"
  op: "ReadVariableOp"
  input: "batch_normalization_4/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_142"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_374"
  input: "training/Adam/truediv_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_46"
  input: "training/Adam/add_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_375"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_46"
  input: "^training/Adam/AssignVariableOp_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_100"
  input: "training/Adam/add_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_376"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_100"
  input: "^training/Adam/AssignVariableOp_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "batch_normalization_4/gamma"
  input: "training/Adam/sub_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_377"
  op: "ReadVariableOp"
  input: "batch_normalization_4/gamma"
  input: "^training/Adam/AssignVariableOp_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_378"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_236/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_236"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_378"
  input: "training/Adam/mul_236/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_379"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_143/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_143"
  op: "Sub"
  input: "training/Adam/sub_143/x"
  input: "training/Adam/ReadVariableOp_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_237"
  op: "Mul"
  input: "training/Adam/sub_143"
  input: "training/Adam/gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_141"
  op: "Add"
  input: "training/Adam/mul_236"
  input: "training/Adam/mul_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_380"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_238/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_238"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_380"
  input: "training/Adam/mul_238/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_381"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_144/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_144"
  op: "Sub"
  input: "training/Adam/sub_144/x"
  input: "training/Adam/ReadVariableOp_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_47"
  op: "Square"
  input: "training/Adam/gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_239"
  op: "Mul"
  input: "training/Adam/sub_144"
  input: "training/Adam/Square_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_142"
  op: "Add"
  input: "training/Adam/mul_238"
  input: "training/Adam/mul_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_240"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_97"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_98"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_48/Minimum"
  op: "Minimum"
  input: "training/Adam/add_142"
  input: "training/Adam/Const_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_48"
  op: "Maximum"
  input: "training/Adam/clip_by_value_48/Minimum"
  input: "training/Adam/Const_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_48"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_143/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_143"
  op: "Add"
  input: "training/Adam/Sqrt_48"
  input: "training/Adam/add_143/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_48"
  op: "RealDiv"
  input: "training/Adam/mul_240"
  input: "training/Adam/add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_382"
  op: "ReadVariableOp"
  input: "batch_normalization_4/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_145"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_382"
  input: "training/Adam/truediv_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_47"
  input: "training/Adam/add_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_383"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_47"
  input: "^training/Adam/AssignVariableOp_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_101"
  input: "training/Adam/add_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_384"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_101"
  input: "^training/Adam/AssignVariableOp_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "batch_normalization_4/beta"
  input: "training/Adam/sub_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_385"
  op: "ReadVariableOp"
  input: "batch_normalization_4/beta"
  input: "^training/Adam/AssignVariableOp_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_386"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_241/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_241"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_386"
  input: "training/Adam/mul_241/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_387"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_146/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_146"
  op: "Sub"
  input: "training/Adam/sub_146/x"
  input: "training/Adam/ReadVariableOp_387"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_242"
  op: "Mul"
  input: "training/Adam/sub_146"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_144"
  op: "Add"
  input: "training/Adam/mul_241"
  input: "training/Adam/mul_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_388"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_243/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_243"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_388"
  input: "training/Adam/mul_243/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_389"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_147/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_147"
  op: "Sub"
  input: "training/Adam/sub_147/x"
  input: "training/Adam/ReadVariableOp_389"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_48"
  op: "Square"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/mul_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_244"
  op: "Mul"
  input: "training/Adam/sub_147"
  input: "training/Adam/Square_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_145"
  op: "Add"
  input: "training/Adam/mul_243"
  input: "training/Adam/mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_245"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_100"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_49/Minimum"
  op: "Minimum"
  input: "training/Adam/add_145"
  input: "training/Adam/Const_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_49"
  op: "Maximum"
  input: "training/Adam/clip_by_value_49/Minimum"
  input: "training/Adam/Const_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_49"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_146/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_146"
  op: "Add"
  input: "training/Adam/Sqrt_49"
  input: "training/Adam/add_146/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_49"
  op: "RealDiv"
  input: "training/Adam/mul_245"
  input: "training/Adam/add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_390"
  op: "ReadVariableOp"
  input: "batch_normalization_5/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_148"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_390"
  input: "training/Adam/truediv_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_48"
  input: "training/Adam/add_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_391"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_48"
  input: "^training/Adam/AssignVariableOp_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_102"
  input: "training/Adam/add_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_392"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_102"
  input: "^training/Adam/AssignVariableOp_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "batch_normalization_5/gamma"
  input: "training/Adam/sub_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_393"
  op: "ReadVariableOp"
  input: "batch_normalization_5/gamma"
  input: "^training/Adam/AssignVariableOp_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_394"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_246/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_246"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_394"
  input: "training/Adam/mul_246/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_395"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_149/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_149"
  op: "Sub"
  input: "training/Adam/sub_149/x"
  input: "training/Adam/ReadVariableOp_395"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_247"
  op: "Mul"
  input: "training/Adam/sub_149"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_147"
  op: "Add"
  input: "training/Adam/mul_246"
  input: "training/Adam/mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_396"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_248/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_248"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_396"
  input: "training/Adam/mul_248/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_397"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_150/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_150"
  op: "Sub"
  input: "training/Adam/sub_150/x"
  input: "training/Adam/ReadVariableOp_397"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_49"
  op: "Square"
  input: "training/Adam/gradients/batch_normalization_5/batchnorm/add_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_249"
  op: "Mul"
  input: "training/Adam/sub_150"
  input: "training/Adam/Square_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_148"
  op: "Add"
  input: "training/Adam/mul_248"
  input: "training/Adam/mul_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_250"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_50/Minimum"
  op: "Minimum"
  input: "training/Adam/add_148"
  input: "training/Adam/Const_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_50"
  op: "Maximum"
  input: "training/Adam/clip_by_value_50/Minimum"
  input: "training/Adam/Const_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_50"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_149/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_149"
  op: "Add"
  input: "training/Adam/Sqrt_50"
  input: "training/Adam/add_149/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_50"
  op: "RealDiv"
  input: "training/Adam/mul_250"
  input: "training/Adam/add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_398"
  op: "ReadVariableOp"
  input: "batch_normalization_5/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_151"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_398"
  input: "training/Adam/truediv_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_49"
  input: "training/Adam/add_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_399"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_49"
  input: "^training/Adam/AssignVariableOp_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_103"
  input: "training/Adam/add_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_400"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_103"
  input: "^training/Adam/AssignVariableOp_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "batch_normalization_5/beta"
  input: "training/Adam/sub_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_401"
  op: "ReadVariableOp"
  input: "batch_normalization_5/beta"
  input: "^training/Adam/AssignVariableOp_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_402"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_251/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_251"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_402"
  input: "training/Adam/mul_251/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_403"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_152/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_152"
  op: "Sub"
  input: "training/Adam/sub_152/x"
  input: "training/Adam/ReadVariableOp_403"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_252"
  op: "Mul"
  input: "training/Adam/sub_152"
  input: "training/Adam/gradients/dense_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_150"
  op: "Add"
  input: "training/Adam/mul_251"
  input: "training/Adam/mul_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_404"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_253/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_253"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_404"
  input: "training/Adam/mul_253/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_405"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_153/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_153"
  op: "Sub"
  input: "training/Adam/sub_153/x"
  input: "training/Adam/ReadVariableOp_405"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_50"
  op: "Square"
  input: "training/Adam/gradients/dense_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_254"
  op: "Mul"
  input: "training/Adam/sub_153"
  input: "training/Adam/Square_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_151"
  op: "Add"
  input: "training/Adam/mul_253"
  input: "training/Adam/mul_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_255"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_103"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_104"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_51/Minimum"
  op: "Minimum"
  input: "training/Adam/add_151"
  input: "training/Adam/Const_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_51"
  op: "Maximum"
  input: "training/Adam/clip_by_value_51/Minimum"
  input: "training/Adam/Const_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_51"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_152/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_152"
  op: "Add"
  input: "training/Adam/Sqrt_51"
  input: "training/Adam/add_152/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_51"
  op: "RealDiv"
  input: "training/Adam/mul_255"
  input: "training/Adam/add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_406"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_154"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_406"
  input: "training/Adam/truediv_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_50"
  input: "training/Adam/add_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_407"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_50"
  input: "^training/Adam/AssignVariableOp_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_104"
  input: "training/Adam/add_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_408"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_104"
  input: "^training/Adam/AssignVariableOp_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "training/Adam/sub_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_409"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  input: "^training/Adam/AssignVariableOp_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_410"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_256/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_256"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_410"
  input: "training/Adam/mul_256/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_411"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_155/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_155"
  op: "Sub"
  input: "training/Adam/sub_155/x"
  input: "training/Adam/ReadVariableOp_411"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_257"
  op: "Mul"
  input: "training/Adam/sub_155"
  input: "training/Adam/gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_153"
  op: "Add"
  input: "training/Adam/mul_256"
  input: "training/Adam/mul_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_412"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_258/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_258"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_412"
  input: "training/Adam/mul_258/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_413"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_156/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_156"
  op: "Sub"
  input: "training/Adam/sub_156/x"
  input: "training/Adam/ReadVariableOp_413"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_51"
  op: "Square"
  input: "training/Adam/gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_259"
  op: "Mul"
  input: "training/Adam/sub_156"
  input: "training/Adam/Square_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_154"
  op: "Add"
  input: "training/Adam/mul_258"
  input: "training/Adam/mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_260"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_106"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_52/Minimum"
  op: "Minimum"
  input: "training/Adam/add_154"
  input: "training/Adam/Const_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_52"
  op: "Maximum"
  input: "training/Adam/clip_by_value_52/Minimum"
  input: "training/Adam/Const_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_52"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_155/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_155"
  op: "Add"
  input: "training/Adam/Sqrt_52"
  input: "training/Adam/add_155/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_52"
  op: "RealDiv"
  input: "training/Adam/mul_260"
  input: "training/Adam/add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_414"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_157"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_414"
  input: "training/Adam/truediv_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_51"
  input: "training/Adam/add_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_415"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_51"
  input: "^training/Adam/AssignVariableOp_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_105"
  input: "training/Adam/add_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_416"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_105"
  input: "^training/Adam/AssignVariableOp_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "training/Adam/sub_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_417"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  input: "^training/Adam/AssignVariableOp_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_418"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_261/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_261"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_418"
  input: "training/Adam/mul_261/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_419"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_158/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_158"
  op: "Sub"
  input: "training/Adam/sub_158/x"
  input: "training/Adam/ReadVariableOp_419"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_262"
  op: "Mul"
  input: "training/Adam/sub_158"
  input: "training/Adam/gradients/y/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_156"
  op: "Add"
  input: "training/Adam/mul_261"
  input: "training/Adam/mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_420"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_263/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_263"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_420"
  input: "training/Adam/mul_263/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_421"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_159/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_159"
  op: "Sub"
  input: "training/Adam/sub_159/x"
  input: "training/Adam/ReadVariableOp_421"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_52"
  op: "Square"
  input: "training/Adam/gradients/y/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_264"
  op: "Mul"
  input: "training/Adam/sub_159"
  input: "training/Adam/Square_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_157"
  op: "Add"
  input: "training/Adam/mul_263"
  input: "training/Adam/mul_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_265"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_108"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_53/Minimum"
  op: "Minimum"
  input: "training/Adam/add_157"
  input: "training/Adam/Const_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_53"
  op: "Maximum"
  input: "training/Adam/clip_by_value_53/Minimum"
  input: "training/Adam/Const_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_53"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_158/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_158"
  op: "Add"
  input: "training/Adam/Sqrt_53"
  input: "training/Adam/add_158/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_53"
  op: "RealDiv"
  input: "training/Adam/mul_265"
  input: "training/Adam/add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_422"
  op: "ReadVariableOp"
  input: "y/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_160"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_422"
  input: "training/Adam/truediv_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_52"
  input: "training/Adam/add_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_423"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_52"
  input: "^training/Adam/AssignVariableOp_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_106"
  input: "training/Adam/add_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_424"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_106"
  input: "^training/Adam/AssignVariableOp_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "y/kernel"
  input: "training/Adam/sub_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_425"
  op: "ReadVariableOp"
  input: "y/kernel"
  input: "^training/Adam/AssignVariableOp_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_426"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_266/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_266"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_426"
  input: "training/Adam/mul_266/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_427"
  op: "ReadVariableOp"
  input: "Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_161/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_161"
  op: "Sub"
  input: "training/Adam/sub_161/x"
  input: "training/Adam/ReadVariableOp_427"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_267"
  op: "Mul"
  input: "training/Adam/sub_161"
  input: "training/Adam/gradients/y/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_159"
  op: "Add"
  input: "training/Adam/mul_266"
  input: "training/Adam/mul_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_428"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_268/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_268"
  op: "Mul"
  input: "training/Adam/ReadVariableOp_428"
  input: "training/Adam/mul_268/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_429"
  op: "ReadVariableOp"
  input: "Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_162/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_162"
  op: "Sub"
  input: "training/Adam/sub_162/x"
  input: "training/Adam/ReadVariableOp_429"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Square_53"
  op: "Square"
  input: "training/Adam/gradients/y/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_269"
  op: "Mul"
  input: "training/Adam/sub_162"
  input: "training/Adam/Square_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_160"
  op: "Add"
  input: "training/Adam/mul_268"
  input: "training/Adam/mul_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul_270"
  op: "Mul"
  input: "training/Adam/mul"
  input: "training/Adam/add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const_109"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/Const_110"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adam/clip_by_value_54/Minimum"
  op: "Minimum"
  input: "training/Adam/add_160"
  input: "training/Adam/Const_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/clip_by_value_54"
  op: "Maximum"
  input: "training/Adam/clip_by_value_54/Minimum"
  input: "training/Adam/Const_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt_54"
  op: "Sqrt"
  input: "training/Adam/clip_by_value_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/add_161/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/add_161"
  op: "Add"
  input: "training/Adam/Sqrt_54"
  input: "training/Adam/add_161/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv_54"
  op: "RealDiv"
  input: "training/Adam/mul_270"
  input: "training/Adam/add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_430"
  op: "ReadVariableOp"
  input: "y/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_163"
  op: "Sub"
  input: "training/Adam/ReadVariableOp_430"
  input: "training/Adam/truediv_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_53"
  input: "training/Adam/add_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_431"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_53"
  input: "^training/Adam/AssignVariableOp_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_107"
  input: "training/Adam/add_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_432"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_107"
  input: "^training/Adam/AssignVariableOp_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "y/bias"
  input: "training/Adam/sub_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp_433"
  op: "ReadVariableOp"
  input: "y/bias"
  input: "^training/Adam/AssignVariableOp_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_1/group_deps"
  op: "NoOp"
  input: "^loss/mul"
  input: "^metrics/acc/Mean"
  input: "^metrics/get_f1/Mean"
  input: "^training/Adam/ReadVariableOp_103"
  input: "^training/Adam/ReadVariableOp_104"
  input: "^training/Adam/ReadVariableOp_105"
  input: "^training/Adam/ReadVariableOp_111"
  input: "^training/Adam/ReadVariableOp_112"
  input: "^training/Adam/ReadVariableOp_113"
  input: "^training/Adam/ReadVariableOp_119"
  input: "^training/Adam/ReadVariableOp_120"
  input: "^training/Adam/ReadVariableOp_121"
  input: "^training/Adam/ReadVariableOp_127"
  input: "^training/Adam/ReadVariableOp_128"
  input: "^training/Adam/ReadVariableOp_129"
  input: "^training/Adam/ReadVariableOp_135"
  input: "^training/Adam/ReadVariableOp_136"
  input: "^training/Adam/ReadVariableOp_137"
  input: "^training/Adam/ReadVariableOp_143"
  input: "^training/Adam/ReadVariableOp_144"
  input: "^training/Adam/ReadVariableOp_145"
  input: "^training/Adam/ReadVariableOp_15"
  input: "^training/Adam/ReadVariableOp_151"
  input: "^training/Adam/ReadVariableOp_152"
  input: "^training/Adam/ReadVariableOp_153"
  input: "^training/Adam/ReadVariableOp_159"
  input: "^training/Adam/ReadVariableOp_16"
  input: "^training/Adam/ReadVariableOp_160"
  input: "^training/Adam/ReadVariableOp_161"
  input: "^training/Adam/ReadVariableOp_167"
  input: "^training/Adam/ReadVariableOp_168"
  input: "^training/Adam/ReadVariableOp_169"
  input: "^training/Adam/ReadVariableOp_17"
  input: "^training/Adam/ReadVariableOp_175"
  input: "^training/Adam/ReadVariableOp_176"
  input: "^training/Adam/ReadVariableOp_177"
  input: "^training/Adam/ReadVariableOp_183"
  input: "^training/Adam/ReadVariableOp_184"
  input: "^training/Adam/ReadVariableOp_185"
  input: "^training/Adam/ReadVariableOp_191"
  input: "^training/Adam/ReadVariableOp_192"
  input: "^training/Adam/ReadVariableOp_193"
  input: "^training/Adam/ReadVariableOp_199"
  input: "^training/Adam/ReadVariableOp_200"
  input: "^training/Adam/ReadVariableOp_201"
  input: "^training/Adam/ReadVariableOp_207"
  input: "^training/Adam/ReadVariableOp_208"
  input: "^training/Adam/ReadVariableOp_209"
  input: "^training/Adam/ReadVariableOp_215"
  input: "^training/Adam/ReadVariableOp_216"
  input: "^training/Adam/ReadVariableOp_217"
  input: "^training/Adam/ReadVariableOp_223"
  input: "^training/Adam/ReadVariableOp_224"
  input: "^training/Adam/ReadVariableOp_225"
  input: "^training/Adam/ReadVariableOp_23"
  input: "^training/Adam/ReadVariableOp_231"
  input: "^training/Adam/ReadVariableOp_232"
  input: "^training/Adam/ReadVariableOp_233"
  input: "^training/Adam/ReadVariableOp_239"
  input: "^training/Adam/ReadVariableOp_24"
  input: "^training/Adam/ReadVariableOp_240"
  input: "^training/Adam/ReadVariableOp_241"
  input: "^training/Adam/ReadVariableOp_247"
  input: "^training/Adam/ReadVariableOp_248"
  input: "^training/Adam/ReadVariableOp_249"
  input: "^training/Adam/ReadVariableOp_25"
  input: "^training/Adam/ReadVariableOp_255"
  input: "^training/Adam/ReadVariableOp_256"
  input: "^training/Adam/ReadVariableOp_257"
  input: "^training/Adam/ReadVariableOp_263"
  input: "^training/Adam/ReadVariableOp_264"
  input: "^training/Adam/ReadVariableOp_265"
  input: "^training/Adam/ReadVariableOp_271"
  input: "^training/Adam/ReadVariableOp_272"
  input: "^training/Adam/ReadVariableOp_273"
  input: "^training/Adam/ReadVariableOp_279"
  input: "^training/Adam/ReadVariableOp_280"
  input: "^training/Adam/ReadVariableOp_281"
  input: "^training/Adam/ReadVariableOp_287"
  input: "^training/Adam/ReadVariableOp_288"
  input: "^training/Adam/ReadVariableOp_289"
  input: "^training/Adam/ReadVariableOp_295"
  input: "^training/Adam/ReadVariableOp_296"
  input: "^training/Adam/ReadVariableOp_297"
  input: "^training/Adam/ReadVariableOp_303"
  input: "^training/Adam/ReadVariableOp_304"
  input: "^training/Adam/ReadVariableOp_305"
  input: "^training/Adam/ReadVariableOp_31"
  input: "^training/Adam/ReadVariableOp_311"
  input: "^training/Adam/ReadVariableOp_312"
  input: "^training/Adam/ReadVariableOp_313"
  input: "^training/Adam/ReadVariableOp_319"
  input: "^training/Adam/ReadVariableOp_32"
  input: "^training/Adam/ReadVariableOp_320"
  input: "^training/Adam/ReadVariableOp_321"
  input: "^training/Adam/ReadVariableOp_327"
  input: "^training/Adam/ReadVariableOp_328"
  input: "^training/Adam/ReadVariableOp_329"
  input: "^training/Adam/ReadVariableOp_33"
  input: "^training/Adam/ReadVariableOp_335"
  input: "^training/Adam/ReadVariableOp_336"
  input: "^training/Adam/ReadVariableOp_337"
  input: "^training/Adam/ReadVariableOp_343"
  input: "^training/Adam/ReadVariableOp_344"
  input: "^training/Adam/ReadVariableOp_345"
  input: "^training/Adam/ReadVariableOp_351"
  input: "^training/Adam/ReadVariableOp_352"
  input: "^training/Adam/ReadVariableOp_353"
  input: "^training/Adam/ReadVariableOp_359"
  input: "^training/Adam/ReadVariableOp_360"
  input: "^training/Adam/ReadVariableOp_361"
  input: "^training/Adam/ReadVariableOp_367"
  input: "^training/Adam/ReadVariableOp_368"
  input: "^training/Adam/ReadVariableOp_369"
  input: "^training/Adam/ReadVariableOp_375"
  input: "^training/Adam/ReadVariableOp_376"
  input: "^training/Adam/ReadVariableOp_377"
  input: "^training/Adam/ReadVariableOp_383"
  input: "^training/Adam/ReadVariableOp_384"
  input: "^training/Adam/ReadVariableOp_385"
  input: "^training/Adam/ReadVariableOp_39"
  input: "^training/Adam/ReadVariableOp_391"
  input: "^training/Adam/ReadVariableOp_392"
  input: "^training/Adam/ReadVariableOp_393"
  input: "^training/Adam/ReadVariableOp_399"
  input: "^training/Adam/ReadVariableOp_40"
  input: "^training/Adam/ReadVariableOp_400"
  input: "^training/Adam/ReadVariableOp_401"
  input: "^training/Adam/ReadVariableOp_407"
  input: "^training/Adam/ReadVariableOp_408"
  input: "^training/Adam/ReadVariableOp_409"
  input: "^training/Adam/ReadVariableOp_41"
  input: "^training/Adam/ReadVariableOp_415"
  input: "^training/Adam/ReadVariableOp_416"
  input: "^training/Adam/ReadVariableOp_417"
  input: "^training/Adam/ReadVariableOp_423"
  input: "^training/Adam/ReadVariableOp_424"
  input: "^training/Adam/ReadVariableOp_425"
  input: "^training/Adam/ReadVariableOp_431"
  input: "^training/Adam/ReadVariableOp_432"
  input: "^training/Adam/ReadVariableOp_433"
  input: "^training/Adam/ReadVariableOp_47"
  input: "^training/Adam/ReadVariableOp_48"
  input: "^training/Adam/ReadVariableOp_49"
  input: "^training/Adam/ReadVariableOp_55"
  input: "^training/Adam/ReadVariableOp_56"
  input: "^training/Adam/ReadVariableOp_57"
  input: "^training/Adam/ReadVariableOp_63"
  input: "^training/Adam/ReadVariableOp_64"
  input: "^training/Adam/ReadVariableOp_65"
  input: "^training/Adam/ReadVariableOp_7"
  input: "^training/Adam/ReadVariableOp_71"
  input: "^training/Adam/ReadVariableOp_72"
  input: "^training/Adam/ReadVariableOp_73"
  input: "^training/Adam/ReadVariableOp_79"
  input: "^training/Adam/ReadVariableOp_8"
  input: "^training/Adam/ReadVariableOp_80"
  input: "^training/Adam/ReadVariableOp_81"
  input: "^training/Adam/ReadVariableOp_87"
  input: "^training/Adam/ReadVariableOp_88"
  input: "^training/Adam/ReadVariableOp_89"
  input: "^training/Adam/ReadVariableOp_9"
  input: "^training/Adam/ReadVariableOp_95"
  input: "^training/Adam/ReadVariableOp_96"
  input: "^training/Adam/ReadVariableOp_97"
}
node {
  name: "VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_91"
}
node {
  name: "VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_37"
}
node {
  name: "VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_29"
}
node {
  name: "VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_97"
}
node {
  name: "VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_7"
}
node {
  name: "VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_151"
}
node {
  name: "VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_54"
}
node {
  name: "VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_129"
}
node {
  name: "VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_145"
}
node {
  name: "VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_46"
}
node {
  name: "VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_93"
}
node {
  name: "VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_111"
}
node {
  name: "VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_71"
}
node {
  name: "VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_86"
}
node {
  name: "VarIsInitializedOp_78"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_143"
}
node {
  name: "VarIsInitializedOp_79"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_28"
}
node {
  name: "VarIsInitializedOp_80"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_84"
}
node {
  name: "VarIsInitializedOp_81"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_140"
}
node {
  name: "VarIsInitializedOp_82"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_44"
}
node {
  name: "VarIsInitializedOp_83"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_96"
}
node {
  name: "VarIsInitializedOp_84"
  op: "VarIsInitializedOp"
  input: "Adam/beta_2"
}
node {
  name: "VarIsInitializedOp_85"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_3"
}
node {
  name: "VarIsInitializedOp_86"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_50"
}
node {
  name: "VarIsInitializedOp_87"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_85"
}
node {
  name: "VarIsInitializedOp_88"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_73"
}
node {
  name: "VarIsInitializedOp_89"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_154"
}
node {
  name: "VarIsInitializedOp_90"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_8"
}
node {
  name: "VarIsInitializedOp_91"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_69"
}
node {
  name: "VarIsInitializedOp_92"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_88"
}
node {
  name: "VarIsInitializedOp_93"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_87"
}
node {
  name: "VarIsInitializedOp_94"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_157"
}
node {
  name: "VarIsInitializedOp_95"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_36"
}
node {
  name: "VarIsInitializedOp_96"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_95"
}
node {
  name: "VarIsInitializedOp_97"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_141"
}
node {
  name: "VarIsInitializedOp_98"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_138"
}
node {
  name: "VarIsInitializedOp_99"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_9"
}
node {
  name: "VarIsInitializedOp_100"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_26"
}
node {
  name: "VarIsInitializedOp_101"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_156"
}
node {
  name: "VarIsInitializedOp_102"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_48"
}
node {
  name: "VarIsInitializedOp_103"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_33"
}
node {
  name: "VarIsInitializedOp_104"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_31"
}
node {
  name: "VarIsInitializedOp_105"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_39"
}
node {
  name: "VarIsInitializedOp_106"
  op: "VarIsInitializedOp"
  input: "Adam/decay"
}
node {
  name: "VarIsInitializedOp_107"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_27"
}
node {
  name: "VarIsInitializedOp_108"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_6"
}
node {
  name: "VarIsInitializedOp_109"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_22"
}
node {
  name: "VarIsInitializedOp_110"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_90"
}
node {
  name: "VarIsInitializedOp_111"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_30"
}
node {
  name: "VarIsInitializedOp_112"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_94"
}
node {
  name: "VarIsInitializedOp_113"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_16"
}
node {
  name: "VarIsInitializedOp_114"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_56"
}
node {
  name: "VarIsInitializedOp_115"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_20"
}
node {
  name: "VarIsInitializedOp_116"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_66"
}
node {
  name: "VarIsInitializedOp_117"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_92"
}
node {
  name: "VarIsInitializedOp_118"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_159"
}
node {
  name: "VarIsInitializedOp_119"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_18"
}
node {
  name: "VarIsInitializedOp_120"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_89"
}
node {
  name: "VarIsInitializedOp_121"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_108"
}
node {
  name: "VarIsInitializedOp_122"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_116"
}
node {
  name: "VarIsInitializedOp_123"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_74"
}
node {
  name: "VarIsInitializedOp_124"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_144"
}
node {
  name: "VarIsInitializedOp_125"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_155"
}
node {
  name: "VarIsInitializedOp_126"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_12"
}
node {
  name: "VarIsInitializedOp_127"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_72"
}
node {
  name: "VarIsInitializedOp_128"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_130"
}
node {
  name: "VarIsInitializedOp_129"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_70"
}
node {
  name: "VarIsInitializedOp_130"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_160"
}
node {
  name: "VarIsInitializedOp_131"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_142"
}
node {
  name: "VarIsInitializedOp_132"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_21"
}
node {
  name: "VarIsInitializedOp_133"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_150"
}
node {
  name: "VarIsInitializedOp_134"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_49"
}
node {
  name: "VarIsInitializedOp_135"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_107"
}
node {
  name: "VarIsInitializedOp_136"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_83"
}
node {
  name: "VarIsInitializedOp_137"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_45"
}
node {
  name: "VarIsInitializedOp_138"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_13"
}
node {
  name: "VarIsInitializedOp_139"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_51"
}
node {
  name: "VarIsInitializedOp_140"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_82"
}
node {
  name: "VarIsInitializedOp_141"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_103"
}
node {
  name: "VarIsInitializedOp_142"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_55"
}
node {
  name: "VarIsInitializedOp_143"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_120"
}
node {
  name: "VarIsInitializedOp_144"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_38"
}
node {
  name: "VarIsInitializedOp_145"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_102"
}
node {
  name: "VarIsInitializedOp_146"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_139"
}
node {
  name: "VarIsInitializedOp_147"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_126"
}
node {
  name: "VarIsInitializedOp_148"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_121"
}
node {
  name: "VarIsInitializedOp_149"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_57"
}
node {
  name: "VarIsInitializedOp_150"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_19"
}
node {
  name: "VarIsInitializedOp_151"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_65"
}
node {
  name: "VarIsInitializedOp_152"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_117"
}
node {
  name: "VarIsInitializedOp_153"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_47"
}
node {
  name: "VarIsInitializedOp_154"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_158"
}
node {
  name: "VarIsInitializedOp_155"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_17"
}
node {
  name: "VarIsInitializedOp_156"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_4"
}
node {
  name: "VarIsInitializedOp_157"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_132"
}
node {
  name: "VarIsInitializedOp_158"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_64"
}
node {
  name: "VarIsInitializedOp_159"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_124"
}
node {
  name: "VarIsInitializedOp_160"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_32"
}
node {
  name: "VarIsInitializedOp_161"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_25"
}
node {
  name: "VarIsInitializedOp_162"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_35"
}
node {
  name: "VarIsInitializedOp_163"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_109"
}
node {
  name: "VarIsInitializedOp_164"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_149"
}
node {
  name: "VarIsInitializedOp_165"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_100"
}
node {
  name: "VarIsInitializedOp_166"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_75"
}
node {
  name: "VarIsInitializedOp_167"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_10"
}
node {
  name: "VarIsInitializedOp_168"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_148"
}
node {
  name: "VarIsInitializedOp_169"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_15"
}
node {
  name: "VarIsInitializedOp_170"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_104"
}
node {
  name: "VarIsInitializedOp_171"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_114"
}
node {
  name: "VarIsInitializedOp_172"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_118"
}
node {
  name: "VarIsInitializedOp_173"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_5"
}
node {
  name: "VarIsInitializedOp_174"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_23"
}
node {
  name: "VarIsInitializedOp_175"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_52"
}
node {
  name: "VarIsInitializedOp_176"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_127"
}
node {
  name: "VarIsInitializedOp_177"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_101"
}
node {
  name: "VarIsInitializedOp_178"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_122"
}
node {
  name: "VarIsInitializedOp_179"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_34"
}
node {
  name: "VarIsInitializedOp_180"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_78"
}
node {
  name: "VarIsInitializedOp_181"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_42"
}
node {
  name: "VarIsInitializedOp_182"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_77"
}
node {
  name: "VarIsInitializedOp_183"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_146"
}
node {
  name: "VarIsInitializedOp_184"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_63"
}
node {
  name: "VarIsInitializedOp_185"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_53"
}
node {
  name: "VarIsInitializedOp_186"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_60"
}
node {
  name: "VarIsInitializedOp_187"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_14"
}
node {
  name: "VarIsInitializedOp_188"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_125"
}
node {
  name: "VarIsInitializedOp_189"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_68"
}
node {
  name: "VarIsInitializedOp_190"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_161"
}
node {
  name: "VarIsInitializedOp_191"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_58"
}
node {
  name: "VarIsInitializedOp_192"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_24"
}
node {
  name: "VarIsInitializedOp_193"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_41"
}
node {
  name: "VarIsInitializedOp_194"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_79"
}
node {
  name: "VarIsInitializedOp_195"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_128"
}
node {
  name: "VarIsInitializedOp_196"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_110"
}
node {
  name: "VarIsInitializedOp_197"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_81"
}
node {
  name: "VarIsInitializedOp_198"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_76"
}
node {
  name: "VarIsInitializedOp_199"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_105"
}
node {
  name: "VarIsInitializedOp_200"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_98"
}
node {
  name: "VarIsInitializedOp_201"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_112"
}
node {
  name: "VarIsInitializedOp_202"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_119"
}
node {
  name: "VarIsInitializedOp_203"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_1"
}
node {
  name: "VarIsInitializedOp_204"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_40"
}
node {
  name: "VarIsInitializedOp_205"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_106"
}
node {
  name: "VarIsInitializedOp_206"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_115"
}
node {
  name: "VarIsInitializedOp_207"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_131"
}
node {
  name: "VarIsInitializedOp_208"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_147"
}
node {
  name: "VarIsInitializedOp_209"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_11"
}
node {
  name: "VarIsInitializedOp_210"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_61"
}
node {
  name: "VarIsInitializedOp_211"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_134"
}
node {
  name: "VarIsInitializedOp_212"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_67"
}
node {
  name: "VarIsInitializedOp_213"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_123"
}
node {
  name: "VarIsInitializedOp_214"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_99"
}
node {
  name: "VarIsInitializedOp_215"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_135"
}
node {
  name: "VarIsInitializedOp_216"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_137"
}
node {
  name: "VarIsInitializedOp_217"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "VarIsInitializedOp_218"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable"
}
node {
  name: "VarIsInitializedOp_219"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_113"
}
node {
  name: "VarIsInitializedOp_220"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_152"
}
node {
  name: "VarIsInitializedOp_221"
  op: "VarIsInitializedOp"
  input: "count_1"
}
node {
  name: "VarIsInitializedOp_222"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_43"
}
node {
  name: "VarIsInitializedOp_223"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_80"
}
node {
  name: "VarIsInitializedOp_224"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_133"
}
node {
  name: "VarIsInitializedOp_225"
  op: "VarIsInitializedOp"
  input: "Adam/iterations"
}
node {
  name: "VarIsInitializedOp_226"
  op: "VarIsInitializedOp"
  input: "Adam/lr"
}
node {
  name: "VarIsInitializedOp_227"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_2"
}
node {
  name: "VarIsInitializedOp_228"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_59"
}
node {
  name: "VarIsInitializedOp_229"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_153"
}
node {
  name: "VarIsInitializedOp_230"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_62"
}
node {
  name: "VarIsInitializedOp_231"
  op: "VarIsInitializedOp"
  input: "training/Adam/Variable_136"
}
node {
  name: "VarIsInitializedOp_232"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "VarIsInitializedOp_233"
  op: "VarIsInitializedOp"
  input: "Adam/beta_1"
}
node {
  name: "VarIsInitializedOp_234"
  op: "VarIsInitializedOp"
  input: "total_1"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^Adam/beta_1/Assign"
  input: "^Adam/beta_2/Assign"
  input: "^Adam/decay/Assign"
  input: "^Adam/iterations/Assign"
  input: "^Adam/lr/Assign"
  input: "^count/Assign"
  input: "^count_1/Assign"
  input: "^total/Assign"
  input: "^total_1/Assign"
  input: "^training/Adam/Variable/Assign"
  input: "^training/Adam/Variable_1/Assign"
  input: "^training/Adam/Variable_10/Assign"
  input: "^training/Adam/Variable_100/Assign"
  input: "^training/Adam/Variable_101/Assign"
  input: "^training/Adam/Variable_102/Assign"
  input: "^training/Adam/Variable_103/Assign"
  input: "^training/Adam/Variable_104/Assign"
  input: "^training/Adam/Variable_105/Assign"
  input: "^training/Adam/Variable_106/Assign"
  input: "^training/Adam/Variable_107/Assign"
  input: "^training/Adam/Variable_108/Assign"
  input: "^training/Adam/Variable_109/Assign"
  input: "^training/Adam/Variable_11/Assign"
  input: "^training/Adam/Variable_110/Assign"
  input: "^training/Adam/Variable_111/Assign"
  input: "^training/Adam/Variable_112/Assign"
  input: "^training/Adam/Variable_113/Assign"
  input: "^training/Adam/Variable_114/Assign"
  input: "^training/Adam/Variable_115/Assign"
  input: "^training/Adam/Variable_116/Assign"
  input: "^training/Adam/Variable_117/Assign"
  input: "^training/Adam/Variable_118/Assign"
  input: "^training/Adam/Variable_119/Assign"
  input: "^training/Adam/Variable_12/Assign"
  input: "^training/Adam/Variable_120/Assign"
  input: "^training/Adam/Variable_121/Assign"
  input: "^training/Adam/Variable_122/Assign"
  input: "^training/Adam/Variable_123/Assign"
  input: "^training/Adam/Variable_124/Assign"
  input: "^training/Adam/Variable_125/Assign"
  input: "^training/Adam/Variable_126/Assign"
  input: "^training/Adam/Variable_127/Assign"
  input: "^training/Adam/Variable_128/Assign"
  input: "^training/Adam/Variable_129/Assign"
  input: "^training/Adam/Variable_13/Assign"
  input: "^training/Adam/Variable_130/Assign"
  input: "^training/Adam/Variable_131/Assign"
  input: "^training/Adam/Variable_132/Assign"
  input: "^training/Adam/Variable_133/Assign"
  input: "^training/Adam/Variable_134/Assign"
  input: "^training/Adam/Variable_135/Assign"
  input: "^training/Adam/Variable_136/Assign"
  input: "^training/Adam/Variable_137/Assign"
  input: "^training/Adam/Variable_138/Assign"
  input: "^training/Adam/Variable_139/Assign"
  input: "^training/Adam/Variable_14/Assign"
  input: "^training/Adam/Variable_140/Assign"
  input: "^training/Adam/Variable_141/Assign"
  input: "^training/Adam/Variable_142/Assign"
  input: "^training/Adam/Variable_143/Assign"
  input: "^training/Adam/Variable_144/Assign"
  input: "^training/Adam/Variable_145/Assign"
  input: "^training/Adam/Variable_146/Assign"
  input: "^training/Adam/Variable_147/Assign"
  input: "^training/Adam/Variable_148/Assign"
  input: "^training/Adam/Variable_149/Assign"
  input: "^training/Adam/Variable_15/Assign"
  input: "^training/Adam/Variable_150/Assign"
  input: "^training/Adam/Variable_151/Assign"
  input: "^training/Adam/Variable_152/Assign"
  input: "^training/Adam/Variable_153/Assign"
  input: "^training/Adam/Variable_154/Assign"
  input: "^training/Adam/Variable_155/Assign"
  input: "^training/Adam/Variable_156/Assign"
  input: "^training/Adam/Variable_157/Assign"
  input: "^training/Adam/Variable_158/Assign"
  input: "^training/Adam/Variable_159/Assign"
  input: "^training/Adam/Variable_16/Assign"
  input: "^training/Adam/Variable_160/Assign"
  input: "^training/Adam/Variable_161/Assign"
  input: "^training/Adam/Variable_17/Assign"
  input: "^training/Adam/Variable_18/Assign"
  input: "^training/Adam/Variable_19/Assign"
  input: "^training/Adam/Variable_2/Assign"
  input: "^training/Adam/Variable_20/Assign"
  input: "^training/Adam/Variable_21/Assign"
  input: "^training/Adam/Variable_22/Assign"
  input: "^training/Adam/Variable_23/Assign"
  input: "^training/Adam/Variable_24/Assign"
  input: "^training/Adam/Variable_25/Assign"
  input: "^training/Adam/Variable_26/Assign"
  input: "^training/Adam/Variable_27/Assign"
  input: "^training/Adam/Variable_28/Assign"
  input: "^training/Adam/Variable_29/Assign"
  input: "^training/Adam/Variable_3/Assign"
  input: "^training/Adam/Variable_30/Assign"
  input: "^training/Adam/Variable_31/Assign"
  input: "^training/Adam/Variable_32/Assign"
  input: "^training/Adam/Variable_33/Assign"
  input: "^training/Adam/Variable_34/Assign"
  input: "^training/Adam/Variable_35/Assign"
  input: "^training/Adam/Variable_36/Assign"
  input: "^training/Adam/Variable_37/Assign"
  input: "^training/Adam/Variable_38/Assign"
  input: "^training/Adam/Variable_39/Assign"
  input: "^training/Adam/Variable_4/Assign"
  input: "^training/Adam/Variable_40/Assign"
  input: "^training/Adam/Variable_41/Assign"
  input: "^training/Adam/Variable_42/Assign"
  input: "^training/Adam/Variable_43/Assign"
  input: "^training/Adam/Variable_44/Assign"
  input: "^training/Adam/Variable_45/Assign"
  input: "^training/Adam/Variable_46/Assign"
  input: "^training/Adam/Variable_47/Assign"
  input: "^training/Adam/Variable_48/Assign"
  input: "^training/Adam/Variable_49/Assign"
  input: "^training/Adam/Variable_5/Assign"
  input: "^training/Adam/Variable_50/Assign"
  input: "^training/Adam/Variable_51/Assign"
  input: "^training/Adam/Variable_52/Assign"
  input: "^training/Adam/Variable_53/Assign"
  input: "^training/Adam/Variable_54/Assign"
  input: "^training/Adam/Variable_55/Assign"
  input: "^training/Adam/Variable_56/Assign"
  input: "^training/Adam/Variable_57/Assign"
  input: "^training/Adam/Variable_58/Assign"
  input: "^training/Adam/Variable_59/Assign"
  input: "^training/Adam/Variable_6/Assign"
  input: "^training/Adam/Variable_60/Assign"
  input: "^training/Adam/Variable_61/Assign"
  input: "^training/Adam/Variable_62/Assign"
  input: "^training/Adam/Variable_63/Assign"
  input: "^training/Adam/Variable_64/Assign"
  input: "^training/Adam/Variable_65/Assign"
  input: "^training/Adam/Variable_66/Assign"
  input: "^training/Adam/Variable_67/Assign"
  input: "^training/Adam/Variable_68/Assign"
  input: "^training/Adam/Variable_69/Assign"
  input: "^training/Adam/Variable_7/Assign"
  input: "^training/Adam/Variable_70/Assign"
  input: "^training/Adam/Variable_71/Assign"
  input: "^training/Adam/Variable_72/Assign"
  input: "^training/Adam/Variable_73/Assign"
  input: "^training/Adam/Variable_74/Assign"
  input: "^training/Adam/Variable_75/Assign"
  input: "^training/Adam/Variable_76/Assign"
  input: "^training/Adam/Variable_77/Assign"
  input: "^training/Adam/Variable_78/Assign"
  input: "^training/Adam/Variable_79/Assign"
  input: "^training/Adam/Variable_8/Assign"
  input: "^training/Adam/Variable_80/Assign"
  input: "^training/Adam/Variable_81/Assign"
  input: "^training/Adam/Variable_82/Assign"
  input: "^training/Adam/Variable_83/Assign"
  input: "^training/Adam/Variable_84/Assign"
  input: "^training/Adam/Variable_85/Assign"
  input: "^training/Adam/Variable_86/Assign"
  input: "^training/Adam/Variable_87/Assign"
  input: "^training/Adam/Variable_88/Assign"
  input: "^training/Adam/Variable_89/Assign"
  input: "^training/Adam/Variable_9/Assign"
  input: "^training/Adam/Variable_90/Assign"
  input: "^training/Adam/Variable_91/Assign"
  input: "^training/Adam/Variable_92/Assign"
  input: "^training/Adam/Variable_93/Assign"
  input: "^training/Adam/Variable_94/Assign"
  input: "^training/Adam/Variable_95/Assign"
  input: "^training/Adam/Variable_96/Assign"
  input: "^training/Adam/Variable_97/Assign"
  input: "^training/Adam/Variable_98/Assign"
  input: "^training/Adam/Variable_99/Assign"
}
node {
  name: "Placeholder_64"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "Adam/iterations"
  input: "Placeholder_64"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_64"
  op: "ReadVariableOp"
  input: "Adam/iterations"
  input: "^AssignVariableOp_64"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Placeholder_65"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "training/Adam/Variable"
  input: "Placeholder_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_65"
  op: "ReadVariableOp"
  input: "training/Adam/Variable"
  input: "^AssignVariableOp_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_66"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_1"
  input: "Placeholder_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_66"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_1"
  input: "^AssignVariableOp_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_67"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_2"
  input: "Placeholder_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_67"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_2"
  input: "^AssignVariableOp_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_68"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_3"
  input: "Placeholder_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_68"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_3"
  input: "^AssignVariableOp_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_69"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_4"
  input: "Placeholder_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_69"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_4"
  input: "^AssignVariableOp_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_70"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_5"
  input: "Placeholder_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_70"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_5"
  input: "^AssignVariableOp_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_71"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_6"
  input: "Placeholder_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_71"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_6"
  input: "^AssignVariableOp_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_72"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_7"
  input: "Placeholder_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_72"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_7"
  input: "^AssignVariableOp_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_73"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_8"
  input: "Placeholder_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_73"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_8"
  input: "^AssignVariableOp_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_74"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_9"
  input: "Placeholder_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_74"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_9"
  input: "^AssignVariableOp_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_75"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_10"
  input: "Placeholder_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_75"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_10"
  input: "^AssignVariableOp_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_76"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_11"
  input: "Placeholder_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_76"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_11"
  input: "^AssignVariableOp_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_77"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_12"
  input: "Placeholder_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_77"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_12"
  input: "^AssignVariableOp_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_78"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_13"
  input: "Placeholder_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_78"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_13"
  input: "^AssignVariableOp_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_79"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_14"
  input: "Placeholder_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_79"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_14"
  input: "^AssignVariableOp_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_80"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_15"
  input: "Placeholder_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_80"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_15"
  input: "^AssignVariableOp_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_81"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_16"
  input: "Placeholder_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_81"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_16"
  input: "^AssignVariableOp_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_82"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_17"
  input: "Placeholder_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_82"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_17"
  input: "^AssignVariableOp_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_83"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_18"
  input: "Placeholder_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_83"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_18"
  input: "^AssignVariableOp_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_84"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_19"
  input: "Placeholder_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_84"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_19"
  input: "^AssignVariableOp_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_85"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_20"
  input: "Placeholder_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_85"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_20"
  input: "^AssignVariableOp_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_86"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_21"
  input: "Placeholder_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_86"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_21"
  input: "^AssignVariableOp_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_87"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_22"
  input: "Placeholder_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_87"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_22"
  input: "^AssignVariableOp_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_88"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_23"
  input: "Placeholder_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_88"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_23"
  input: "^AssignVariableOp_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_89"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_24"
  input: "Placeholder_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_89"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_24"
  input: "^AssignVariableOp_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_90"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_25"
  input: "Placeholder_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_90"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_25"
  input: "^AssignVariableOp_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_91"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 288
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_26"
  input: "Placeholder_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_91"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_26"
  input: "^AssignVariableOp_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_92"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_27"
  input: "Placeholder_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_92"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_27"
  input: "^AssignVariableOp_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_93"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_28"
  input: "Placeholder_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_93"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_28"
  input: "^AssignVariableOp_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_94"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_29"
  input: "Placeholder_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_94"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_29"
  input: "^AssignVariableOp_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_95"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_30"
  input: "Placeholder_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_95"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_30"
  input: "^AssignVariableOp_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_96"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_31"
  input: "Placeholder_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_96"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_31"
  input: "^AssignVariableOp_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_97"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_32"
  input: "Placeholder_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_97"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_32"
  input: "^AssignVariableOp_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_98"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_33"
  input: "Placeholder_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_98"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_33"
  input: "^AssignVariableOp_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_99"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_34"
  input: "Placeholder_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_99"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_34"
  input: "^AssignVariableOp_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_100"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_35"
  input: "Placeholder_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_100"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_35"
  input: "^AssignVariableOp_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_101"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_36"
  input: "Placeholder_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_101"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_36"
  input: "^AssignVariableOp_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_102"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_37"
  input: "Placeholder_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_102"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_37"
  input: "^AssignVariableOp_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_103"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_38"
  input: "Placeholder_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_103"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_38"
  input: "^AssignVariableOp_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_104"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_39"
  input: "Placeholder_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_104"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_39"
  input: "^AssignVariableOp_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_105"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_40"
  input: "Placeholder_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_105"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_40"
  input: "^AssignVariableOp_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_106"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_41"
  input: "Placeholder_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_106"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_41"
  input: "^AssignVariableOp_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_107"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_42"
  input: "Placeholder_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_107"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_42"
  input: "^AssignVariableOp_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_108"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_43"
  input: "Placeholder_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_108"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_43"
  input: "^AssignVariableOp_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_109"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_44"
  input: "Placeholder_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_109"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_44"
  input: "^AssignVariableOp_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_110"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_45"
  input: "Placeholder_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_110"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_45"
  input: "^AssignVariableOp_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_111"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_46"
  input: "Placeholder_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_111"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_46"
  input: "^AssignVariableOp_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_112"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_47"
  input: "Placeholder_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_112"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_47"
  input: "^AssignVariableOp_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_113"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_48"
  input: "Placeholder_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_113"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_48"
  input: "^AssignVariableOp_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_114"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_49"
  input: "Placeholder_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_114"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_49"
  input: "^AssignVariableOp_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_115"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_50"
  input: "Placeholder_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_115"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_50"
  input: "^AssignVariableOp_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_116"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_51"
  input: "Placeholder_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_116"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_51"
  input: "^AssignVariableOp_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_117"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_52"
  input: "Placeholder_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_117"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_52"
  input: "^AssignVariableOp_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_118"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_53"
  input: "Placeholder_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_118"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_53"
  input: "^AssignVariableOp_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_119"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_54"
  input: "Placeholder_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_119"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_54"
  input: "^AssignVariableOp_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_120"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_55"
  input: "Placeholder_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_120"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_55"
  input: "^AssignVariableOp_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_121"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_56"
  input: "Placeholder_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_121"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_56"
  input: "^AssignVariableOp_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_122"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_57"
  input: "Placeholder_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_122"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_57"
  input: "^AssignVariableOp_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_123"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_58"
  input: "Placeholder_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_123"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_58"
  input: "^AssignVariableOp_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_124"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_59"
  input: "Placeholder_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_124"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_59"
  input: "^AssignVariableOp_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_125"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_60"
  input: "Placeholder_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_125"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_60"
  input: "^AssignVariableOp_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_126"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_61"
  input: "Placeholder_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_126"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_61"
  input: "^AssignVariableOp_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_127"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_62"
  input: "Placeholder_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_127"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_62"
  input: "^AssignVariableOp_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_128"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_63"
  input: "Placeholder_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_128"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_63"
  input: "^AssignVariableOp_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_129"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_64"
  input: "Placeholder_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_129"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_64"
  input: "^AssignVariableOp_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_130"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_65"
  input: "Placeholder_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_130"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_65"
  input: "^AssignVariableOp_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_131"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_66"
  input: "Placeholder_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_131"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_66"
  input: "^AssignVariableOp_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_132"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_67"
  input: "Placeholder_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_132"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_67"
  input: "^AssignVariableOp_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_133"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_68"
  input: "Placeholder_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_133"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_68"
  input: "^AssignVariableOp_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_134"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_69"
  input: "Placeholder_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_134"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_69"
  input: "^AssignVariableOp_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_135"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_70"
  input: "Placeholder_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_135"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_70"
  input: "^AssignVariableOp_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_136"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_71"
  input: "Placeholder_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_136"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_71"
  input: "^AssignVariableOp_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_137"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_72"
  input: "Placeholder_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_137"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_72"
  input: "^AssignVariableOp_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_138"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_73"
  input: "Placeholder_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_138"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_73"
  input: "^AssignVariableOp_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_139"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_74"
  input: "Placeholder_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_139"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_74"
  input: "^AssignVariableOp_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_140"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_75"
  input: "Placeholder_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_140"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_75"
  input: "^AssignVariableOp_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_141"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_76"
  input: "Placeholder_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_141"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_76"
  input: "^AssignVariableOp_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_142"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_77"
  input: "Placeholder_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_142"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_77"
  input: "^AssignVariableOp_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_143"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_78"
  input: "Placeholder_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_143"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_78"
  input: "^AssignVariableOp_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_144"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_79"
  input: "Placeholder_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_144"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_79"
  input: "^AssignVariableOp_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_145"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 288
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_80"
  input: "Placeholder_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_145"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_80"
  input: "^AssignVariableOp_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_146"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_81"
  input: "Placeholder_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_146"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_81"
  input: "^AssignVariableOp_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_147"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_82"
  input: "Placeholder_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_147"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_82"
  input: "^AssignVariableOp_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_148"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_83"
  input: "Placeholder_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_148"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_83"
  input: "^AssignVariableOp_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_149"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_84"
  input: "Placeholder_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_149"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_84"
  input: "^AssignVariableOp_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_150"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_85"
  input: "Placeholder_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_150"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_85"
  input: "^AssignVariableOp_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_151"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_86"
  input: "Placeholder_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_151"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_86"
  input: "^AssignVariableOp_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_152"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_87"
  input: "Placeholder_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_152"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_87"
  input: "^AssignVariableOp_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_153"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_88"
  input: "Placeholder_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_153"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_88"
  input: "^AssignVariableOp_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_154"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_89"
  input: "Placeholder_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_154"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_89"
  input: "^AssignVariableOp_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_155"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_90"
  input: "Placeholder_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_155"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_90"
  input: "^AssignVariableOp_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_156"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 288
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_91"
  input: "Placeholder_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_156"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_91"
  input: "^AssignVariableOp_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_157"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 288
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_92"
  input: "Placeholder_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_157"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_92"
  input: "^AssignVariableOp_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_158"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_93"
  input: "Placeholder_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_158"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_93"
  input: "^AssignVariableOp_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_159"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_94"
  input: "Placeholder_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_159"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_94"
  input: "^AssignVariableOp_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_160"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_95"
  input: "Placeholder_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_160"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_95"
  input: "^AssignVariableOp_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_161"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_96"
  input: "Placeholder_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_161"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_96"
  input: "^AssignVariableOp_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_162"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_97"
  input: "Placeholder_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_162"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_97"
  input: "^AssignVariableOp_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_163"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_98"
  input: "Placeholder_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_163"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_98"
  input: "^AssignVariableOp_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_164"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_99"
  input: "Placeholder_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_164"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_99"
  input: "^AssignVariableOp_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_165"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_100"
  input: "Placeholder_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_165"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_100"
  input: "^AssignVariableOp_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_166"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_101"
  input: "Placeholder_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_166"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_101"
  input: "^AssignVariableOp_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_167"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_102"
  input: "Placeholder_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_167"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_102"
  input: "^AssignVariableOp_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_168"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_103"
  input: "Placeholder_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_168"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_103"
  input: "^AssignVariableOp_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_169"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_104"
  input: "Placeholder_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_169"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_104"
  input: "^AssignVariableOp_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_170"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_105"
  input: "Placeholder_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_170"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_105"
  input: "^AssignVariableOp_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_171"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_106"
  input: "Placeholder_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_171"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_106"
  input: "^AssignVariableOp_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_172"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_107"
  input: "Placeholder_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_172"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_107"
  input: "^AssignVariableOp_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_173"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_108"
  input: "Placeholder_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_173"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_108"
  input: "^AssignVariableOp_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_174"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_109"
  input: "Placeholder_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_174"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_109"
  input: "^AssignVariableOp_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_175"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_110"
  input: "Placeholder_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_175"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_110"
  input: "^AssignVariableOp_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_176"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_111"
  input: "Placeholder_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_176"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_111"
  input: "^AssignVariableOp_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_177"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_112"
  input: "Placeholder_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_177"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_112"
  input: "^AssignVariableOp_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_178"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_113"
  input: "Placeholder_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_178"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_113"
  input: "^AssignVariableOp_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_179"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_114"
  input: "Placeholder_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_179"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_114"
  input: "^AssignVariableOp_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_180"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_115"
  input: "Placeholder_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_180"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_115"
  input: "^AssignVariableOp_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_181"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_116"
  input: "Placeholder_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_181"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_116"
  input: "^AssignVariableOp_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_182"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_117"
  input: "Placeholder_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_182"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_117"
  input: "^AssignVariableOp_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_183"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_118"
  input: "Placeholder_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_183"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_118"
  input: "^AssignVariableOp_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_184"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_184"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_119"
  input: "Placeholder_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_184"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_119"
  input: "^AssignVariableOp_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_185"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_185"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_120"
  input: "Placeholder_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_185"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_120"
  input: "^AssignVariableOp_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_186"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_186"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_121"
  input: "Placeholder_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_186"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_121"
  input: "^AssignVariableOp_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_187"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_187"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_122"
  input: "Placeholder_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_187"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_122"
  input: "^AssignVariableOp_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_188"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_188"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_123"
  input: "Placeholder_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_188"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_123"
  input: "^AssignVariableOp_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_189"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_189"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_124"
  input: "Placeholder_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_189"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_124"
  input: "^AssignVariableOp_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_190"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_190"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_125"
  input: "Placeholder_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_190"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_125"
  input: "^AssignVariableOp_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_191"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_191"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_126"
  input: "Placeholder_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_191"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_126"
  input: "^AssignVariableOp_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_192"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_192"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_127"
  input: "Placeholder_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_192"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_127"
  input: "^AssignVariableOp_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_193"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_193"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_128"
  input: "Placeholder_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_193"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_128"
  input: "^AssignVariableOp_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_194"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_194"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_129"
  input: "Placeholder_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_194"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_129"
  input: "^AssignVariableOp_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_195"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_195"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_130"
  input: "Placeholder_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_195"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_130"
  input: "^AssignVariableOp_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_196"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_196"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_131"
  input: "Placeholder_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_196"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_131"
  input: "^AssignVariableOp_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_197"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_197"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_132"
  input: "Placeholder_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_197"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_132"
  input: "^AssignVariableOp_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_198"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_198"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_133"
  input: "Placeholder_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_198"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_133"
  input: "^AssignVariableOp_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_199"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_199"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_134"
  input: "Placeholder_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_199"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_134"
  input: "^AssignVariableOp_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_200"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_200"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_135"
  input: "Placeholder_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_200"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_135"
  input: "^AssignVariableOp_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_201"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_201"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_136"
  input: "Placeholder_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_201"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_136"
  input: "^AssignVariableOp_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_202"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_202"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_137"
  input: "Placeholder_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_202"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_137"
  input: "^AssignVariableOp_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_203"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_203"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_138"
  input: "Placeholder_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_203"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_138"
  input: "^AssignVariableOp_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_204"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_204"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_139"
  input: "Placeholder_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_204"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_139"
  input: "^AssignVariableOp_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_205"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_205"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_140"
  input: "Placeholder_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_205"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_140"
  input: "^AssignVariableOp_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_206"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_206"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_141"
  input: "Placeholder_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_206"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_141"
  input: "^AssignVariableOp_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_207"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_207"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_142"
  input: "Placeholder_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_207"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_142"
  input: "^AssignVariableOp_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_208"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_208"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_143"
  input: "Placeholder_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_208"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_143"
  input: "^AssignVariableOp_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_209"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_209"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_144"
  input: "Placeholder_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_209"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_144"
  input: "^AssignVariableOp_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_210"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_210"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_145"
  input: "Placeholder_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_210"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_145"
  input: "^AssignVariableOp_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_211"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_211"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_146"
  input: "Placeholder_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_211"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_146"
  input: "^AssignVariableOp_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_212"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_212"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_147"
  input: "Placeholder_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_212"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_147"
  input: "^AssignVariableOp_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_213"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_213"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_148"
  input: "Placeholder_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_213"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_148"
  input: "^AssignVariableOp_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_214"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_214"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_149"
  input: "Placeholder_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_214"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_149"
  input: "^AssignVariableOp_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_215"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_215"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_150"
  input: "Placeholder_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_215"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_150"
  input: "^AssignVariableOp_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_216"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_216"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_151"
  input: "Placeholder_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_216"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_151"
  input: "^AssignVariableOp_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_217"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_217"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_152"
  input: "Placeholder_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_217"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_152"
  input: "^AssignVariableOp_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_218"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_218"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_153"
  input: "Placeholder_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_218"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_153"
  input: "^AssignVariableOp_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_219"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_219"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_154"
  input: "Placeholder_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_219"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_154"
  input: "^AssignVariableOp_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_220"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_220"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_155"
  input: "Placeholder_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_220"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_155"
  input: "^AssignVariableOp_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_221"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_221"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_156"
  input: "Placeholder_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_221"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_156"
  input: "^AssignVariableOp_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_222"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_222"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_157"
  input: "Placeholder_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_222"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_157"
  input: "^AssignVariableOp_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_223"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_223"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_158"
  input: "Placeholder_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_223"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_158"
  input: "^AssignVariableOp_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_224"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_224"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_159"
  input: "Placeholder_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_224"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_159"
  input: "^AssignVariableOp_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_225"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_225"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_160"
  input: "Placeholder_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_225"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_160"
  input: "^AssignVariableOp_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_226"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_226"
  op: "AssignVariableOp"
  input: "training/Adam/Variable_161"
  input: "Placeholder_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_226"
  op: "ReadVariableOp"
  input: "training/Adam/Variable_161"
  input: "^AssignVariableOp_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_1_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "conv2d_1_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_1_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09975093603134155
      }
    }
  }
}
node {
  name: "conv2d_1_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09975093603134155
      }
    }
  }
}
node {
  name: "conv2d_1_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_1_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5313788
    }
  }
}
node {
  name: "conv2d_1_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_1_1/random_uniform/max"
  input: "conv2d_1_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_1_1/random_uniform/RandomUniform"
  input: "conv2d_1_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1_1/random_uniform"
  op: "Add"
  input: "conv2d_1_1/random_uniform/mul"
  input: "conv2d_1_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_1_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_1_1/kernel"
  input: "conv2d_1_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_1_1/kernel/read"
  op: "Identity"
  input: "conv2d_1_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_1_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_1_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_1_1/bias/Assign"
  op: "Assign"
  input: "conv2d_1_1/bias"
  input: "conv2d_1_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_1_1/bias/read"
  op: "Identity"
  input: "conv2d_1_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_1_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_1_1/convolution"
  op: "Conv2D"
  input: "input_1_1"
  input: "conv2d_1_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_1_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_1_1/convolution"
  input: "conv2d_1_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_1_1/Relu"
  op: "Relu"
  input: "conv2d_1_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_2_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_2_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_2_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_2_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5566474
    }
  }
}
node {
  name: "conv2d_2_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_2_1/random_uniform/max"
  input: "conv2d_2_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_2_1/random_uniform/RandomUniform"
  input: "conv2d_2_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2_1/random_uniform"
  op: "Add"
  input: "conv2d_2_1/random_uniform/mul"
  input: "conv2d_2_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_2_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_2_1/kernel"
  input: "conv2d_2_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_2_1/kernel/read"
  op: "Identity"
  input: "conv2d_2_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_2_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_2_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_2_1/bias/Assign"
  op: "Assign"
  input: "conv2d_2_1/bias"
  input: "conv2d_2_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_2_1/bias/read"
  op: "Identity"
  input: "conv2d_2_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_2_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_2_1/convolution"
  op: "Conv2D"
  input: "conv2d_1_1/Relu"
  input: "conv2d_2_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_2_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_2_1/convolution"
  input: "conv2d_2_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_2_1/Relu"
  op: "Relu"
  input: "conv2d_2_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_3_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "conv2d_3_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "conv2d_3_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_3_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1387339
    }
  }
}
node {
  name: "conv2d_3_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_3_1/random_uniform/max"
  input: "conv2d_3_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_3_1/random_uniform/RandomUniform"
  input: "conv2d_3_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3_1/random_uniform"
  op: "Add"
  input: "conv2d_3_1/random_uniform/mul"
  input: "conv2d_3_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_3_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_3_1/kernel"
  input: "conv2d_3_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_3_1/kernel/read"
  op: "Identity"
  input: "conv2d_3_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_3_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_3_1/bias/Assign"
  op: "Assign"
  input: "conv2d_3_1/bias"
  input: "conv2d_3_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_3_1/bias/read"
  op: "Identity"
  input: "conv2d_3_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_3_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_3_1/convolution"
  op: "Conv2D"
  input: "conv2d_2_1/Relu"
  input: "conv2d_3_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_3_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_3_1/convolution"
  input: "conv2d_3_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_3_1/Relu"
  op: "Relu"
  input: "conv2d_3_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1_1/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_1_1/gamma"
  input: "batch_normalization_1_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1_1/gamma/read"
  op: "Identity"
  input: "batch_normalization_1_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1_1/beta/Assign"
  op: "Assign"
  input: "batch_normalization_1_1/beta"
  input: "batch_normalization_1_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1_1/beta/read"
  op: "Identity"
  input: "batch_normalization_1_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_1_1/moving_mean"
  input: "batch_normalization_1_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_1_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_1_1/moving_variance"
  input: "batch_normalization_1_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_1_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_3_1/Relu"
  input: "batch_normalization_1_1/gamma/read"
  input: "batch_normalization_1_1/beta/read"
  input: "batch_normalization_1_1/Const_4"
  input: "batch_normalization_1_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1_1/Shape"
  op: "Shape"
  input: "conv2d_3_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_1_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/strided_slice"
  op: "StridedSlice"
  input: "batch_normalization_1_1/Shape"
  input: "batch_normalization_1_1/strided_slice/stack"
  input: "batch_normalization_1_1/strided_slice/stack_1"
  input: "batch_normalization_1_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_normalization_1_1/Shape_1"
  op: "Shape"
  input: "conv2d_3_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_1_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/strided_slice_1"
  op: "StridedSlice"
  input: "batch_normalization_1_1/Shape_1"
  input: "batch_normalization_1_1/strided_slice_1/stack"
  input: "batch_normalization_1_1/strided_slice_1/stack_1"
  input: "batch_normalization_1_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_normalization_1_1/Shape_2"
  op: "Shape"
  input: "conv2d_3_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_1_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/strided_slice_2"
  op: "StridedSlice"
  input: "batch_normalization_1_1/Shape_2"
  input: "batch_normalization_1_1/strided_slice_2/stack"
  input: "batch_normalization_1_1/strided_slice_2/stack_1"
  input: "batch_normalization_1_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_normalization_1_1/Rank/packed"
  op: "Pack"
  input: "batch_normalization_1_1/strided_slice"
  input: "batch_normalization_1_1/strided_slice_1"
  input: "batch_normalization_1_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_normalization_1_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/range"
  op: "Range"
  input: "batch_normalization_1_1/range/start"
  input: "batch_normalization_1_1/Rank"
  input: "batch_normalization_1_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_1_1/Prod/input"
  op: "Pack"
  input: "batch_normalization_1_1/strided_slice"
  input: "batch_normalization_1_1/strided_slice_1"
  input: "batch_normalization_1_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_normalization_1_1/Prod"
  op: "Prod"
  input: "batch_normalization_1_1/Prod/input"
  input: "batch_normalization_1_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_1_1/Cast"
  op: "Cast"
  input: "batch_normalization_1_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_1_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/sub"
  op: "Sub"
  input: "batch_normalization_1_1/Cast"
  input: "batch_normalization_1_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1_1/truediv"
  op: "RealDiv"
  input: "batch_normalization_1_1/Cast"
  input: "batch_normalization_1_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1_1/mul"
  op: "Mul"
  input: "batch_normalization_1_1/FusedBatchNorm:2"
  input: "batch_normalization_1_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "batch_normalization_1_1/moving_mean/biased"
  input: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_mean/biased/read"
  op: "Identity"
  input: "batch_normalization_1_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "batch_normalization_1_1/moving_mean/local_step"
  input: "batch_normalization_1_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_mean/local_step/read"
  op: "Identity"
  input: "batch_normalization_1_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/sub"
  op: "Sub"
  input: "batch_normalization_1_1/moving_mean/biased/read"
  input: "batch_normalization_1_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/mul"
  op: "Mul"
  input: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/sub"
  input: "batch_normalization_1_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/batch_normalization_1_1/moving_mean"
  op: "AssignSub"
  input: "batch_normalization_1_1/moving_mean/biased"
  input: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "batch_normalization_1_1/moving_mean/local_step"
  input: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_1_1/moving_mean/biased"
  input: "^batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/AssignAdd"
  input: "^batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/batch_normalization_1_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/AssignAdd"
  input: "^batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/batch_normalization_1_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/sub_1"
  op: "Sub"
  input: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/sub_1/x"
  input: "batch_normalization_1_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/read_1"
  op: "Identity"
  input: "batch_normalization_1_1/moving_mean/local_step"
  input: "^batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/AssignAdd"
  input: "^batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/batch_normalization_1_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/Pow"
  op: "Pow"
  input: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/sub_1"
  input: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/AssignAdd"
  input: "^batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/batch_normalization_1_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/sub_2"
  op: "Sub"
  input: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/sub_2/x"
  input: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/truediv"
  op: "RealDiv"
  input: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/read"
  input: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/sub_3"
  op: "Sub"
  input: "batch_normalization_1_1/moving_mean/read"
  input: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_1_1/moving_mean"
  input: "batch_normalization_1_1/AssignMovingAvg/batch_normalization_1_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "batch_normalization_1_1/moving_variance/biased"
  input: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_variance/biased/read"
  op: "Identity"
  input: "batch_normalization_1_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "batch_normalization_1_1/moving_variance/local_step"
  input: "batch_normalization_1_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1_1/moving_variance/local_step/read"
  op: "Identity"
  input: "batch_normalization_1_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/sub"
  op: "Sub"
  input: "batch_normalization_1_1/moving_variance/biased/read"
  input: "batch_normalization_1_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/mul"
  op: "Mul"
  input: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/sub"
  input: "batch_normalization_1_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/batch_normalization_1_1/moving_variance"
  op: "AssignSub"
  input: "batch_normalization_1_1/moving_variance/biased"
  input: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "batch_normalization_1_1/moving_variance/local_step"
  input: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_1_1/moving_variance/biased"
  input: "^batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/AssignAdd"
  input: "^batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/batch_normalization_1_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/AssignAdd"
  input: "^batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/batch_normalization_1_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/sub_1"
  op: "Sub"
  input: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/sub_1/x"
  input: "batch_normalization_1_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/read_1"
  op: "Identity"
  input: "batch_normalization_1_1/moving_variance/local_step"
  input: "^batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/AssignAdd"
  input: "^batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/batch_normalization_1_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/Pow"
  op: "Pow"
  input: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/sub_1"
  input: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/AssignAdd"
  input: "^batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/batch_normalization_1_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/sub_2"
  op: "Sub"
  input: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/sub_2/x"
  input: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/truediv"
  op: "RealDiv"
  input: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/read"
  input: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/sub_3"
  op: "Sub"
  input: "batch_normalization_1_1/moving_variance/read"
  input: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_1_1/moving_variance"
  input: "batch_normalization_1_1/AssignMovingAvg_1/batch_normalization_1_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_1_1/keras_learning_phase/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "batch_normalization_1_1/keras_learning_phase/input"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1_1/keras_learning_phase"
  input: "batch_normalization_1_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1_1/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_1_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1_1/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_1_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1_1/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_1_1/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_1_1/FusedBatchNorm"
  input: "batch_normalization_1_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_1_1/cond/FusedBatchNorm/Switch"
  input: "batch_normalization_1_1/cond/FusedBatchNorm/Switch_1"
  input: "batch_normalization_1_1/cond/FusedBatchNorm/Switch_2"
  input: "batch_normalization_1_1/cond/FusedBatchNorm/Switch_3"
  input: "batch_normalization_1_1/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_1_1/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "conv2d_3_1/Relu"
  input: "batch_normalization_1_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/Relu"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "batch_normalization_1_1/gamma/read"
  input: "batch_normalization_1_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "batch_normalization_1_1/beta/read"
  input: "batch_normalization_1_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "batch_normalization_1_1/moving_mean/read"
  input: "batch_normalization_1_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "batch_normalization_1_1/moving_variance/read"
  input: "batch_normalization_1_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_1_1/cond/Merge"
  op: "Merge"
  input: "batch_normalization_1_1/cond/FusedBatchNorm"
  input: "batch_normalization_1_1/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_1_1/Relu"
  op: "Relu"
  input: "batch_normalization_1_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_4_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "conv2d_4_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "conv2d_4_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_4_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5185667
    }
  }
}
node {
  name: "conv2d_4_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_4_1/random_uniform/max"
  input: "conv2d_4_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_4_1/random_uniform/RandomUniform"
  input: "conv2d_4_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4_1/random_uniform"
  op: "Add"
  input: "conv2d_4_1/random_uniform/mul"
  input: "conv2d_4_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_4_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_4_1/kernel"
  input: "conv2d_4_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_4_1/kernel/read"
  op: "Identity"
  input: "conv2d_4_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_4_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_4_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_4_1/bias/Assign"
  op: "Assign"
  input: "conv2d_4_1/bias"
  input: "conv2d_4_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_4_1/bias/read"
  op: "Identity"
  input: "conv2d_4_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_4_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_4_1/convolution"
  op: "Conv2D"
  input: "activation_1_1/Relu"
  input: "conv2d_4_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_4_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_4_1/convolution"
  input: "conv2d_4_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_4_1/Relu"
  op: "Relu"
  input: "conv2d_4_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_1_1/MaxPool"
  op: "MaxPool"
  input: "conv2d_4_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
}
node {
  name: "conv2d_8_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_8_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.273861289024353
      }
    }
  }
}
node {
  name: "conv2d_8_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.273861289024353
      }
    }
  }
}
node {
  name: "conv2d_8_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_8_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9557566
    }
  }
}
node {
  name: "conv2d_8_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_8_1/random_uniform/max"
  input: "conv2d_8_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_8_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_8_1/random_uniform/RandomUniform"
  input: "conv2d_8_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_8_1/random_uniform"
  op: "Add"
  input: "conv2d_8_1/random_uniform/mul"
  input: "conv2d_8_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_8_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_8_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_8_1/kernel"
  input: "conv2d_8_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_8_1/kernel/read"
  op: "Identity"
  input: "conv2d_8_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_8_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_8_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_8_1/bias/Assign"
  op: "Assign"
  input: "conv2d_8_1/bias"
  input: "conv2d_8_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_8_1/bias/read"
  op: "Identity"
  input: "conv2d_8_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_8_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_8_1/convolution"
  op: "Conv2D"
  input: "max_pooling2d_1_1/MaxPool"
  input: "conv2d_8_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_8_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_8_1/convolution"
  input: "conv2d_8_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_8_1/Relu"
  op: "Relu"
  input: "conv2d_8_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_6_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.273861289024353
      }
    }
  }
}
node {
  name: "conv2d_6_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.273861289024353
      }
    }
  }
}
node {
  name: "conv2d_6_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_6_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7106105
    }
  }
}
node {
  name: "conv2d_6_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_6_1/random_uniform/max"
  input: "conv2d_6_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_6_1/random_uniform/RandomUniform"
  input: "conv2d_6_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6_1/random_uniform"
  op: "Add"
  input: "conv2d_6_1/random_uniform/mul"
  input: "conv2d_6_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_6_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_6_1/kernel"
  input: "conv2d_6_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_6_1/kernel/read"
  op: "Identity"
  input: "conv2d_6_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_6_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_6_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_6_1/bias/Assign"
  op: "Assign"
  input: "conv2d_6_1/bias"
  input: "conv2d_6_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_6_1/bias/read"
  op: "Identity"
  input: "conv2d_6_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_6_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_6_1/convolution"
  op: "Conv2D"
  input: "max_pooling2d_1_1/MaxPool"
  input: "conv2d_6_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_6_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_6_1/convolution"
  input: "conv2d_6_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_6_1/Relu"
  op: "Relu"
  input: "conv2d_6_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_9_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14433756470680237
      }
    }
  }
}
node {
  name: "conv2d_9_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "conv2d_9_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_9_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6753380
    }
  }
}
node {
  name: "conv2d_9_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_9_1/random_uniform/max"
  input: "conv2d_9_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_9_1/random_uniform/RandomUniform"
  input: "conv2d_9_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9_1/random_uniform"
  op: "Add"
  input: "conv2d_9_1/random_uniform/mul"
  input: "conv2d_9_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_9_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_9_1/kernel"
  input: "conv2d_9_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_9_1/kernel/read"
  op: "Identity"
  input: "conv2d_9_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_9_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_9_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_9_1/bias/Assign"
  op: "Assign"
  input: "conv2d_9_1/bias"
  input: "conv2d_9_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_9_1/bias/read"
  op: "Identity"
  input: "conv2d_9_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_9_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_9_1/convolution"
  op: "Conv2D"
  input: "conv2d_8_1/Relu"
  input: "conv2d_9_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_9_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_9_1/convolution"
  input: "conv2d_9_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_9_1/Relu"
  op: "Relu"
  input: "conv2d_9_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_11_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.273861289024353
      }
    }
  }
}
node {
  name: "conv2d_11_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.273861289024353
      }
    }
  }
}
node {
  name: "conv2d_11_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_11_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2651050
    }
  }
}
node {
  name: "conv2d_11_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_11_1/random_uniform/max"
  input: "conv2d_11_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_11_1/random_uniform/RandomUniform"
  input: "conv2d_11_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11_1/random_uniform"
  op: "Add"
  input: "conv2d_11_1/random_uniform/mul"
  input: "conv2d_11_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_11_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_11_1/kernel"
  input: "conv2d_11_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_11_1/kernel/read"
  op: "Identity"
  input: "conv2d_11_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_11_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_11_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_11_1/bias/Assign"
  op: "Assign"
  input: "conv2d_11_1/bias"
  input: "conv2d_11_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_11_1/bias/read"
  op: "Identity"
  input: "conv2d_11_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_11_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_11_1/convolution"
  op: "Conv2D"
  input: "max_pooling2d_1_1/MaxPool"
  input: "conv2d_11_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_11_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_11_1/convolution"
  input: "conv2d_11_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_11_1/Relu"
  op: "Relu"
  input: "conv2d_11_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_5_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.273861289024353
      }
    }
  }
}
node {
  name: "conv2d_5_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.273861289024353
      }
    }
  }
}
node {
  name: "conv2d_5_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_5_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6235599
    }
  }
}
node {
  name: "conv2d_5_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_5_1/random_uniform/max"
  input: "conv2d_5_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_5_1/random_uniform/RandomUniform"
  input: "conv2d_5_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5_1/random_uniform"
  op: "Add"
  input: "conv2d_5_1/random_uniform/mul"
  input: "conv2d_5_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_5_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_5_1/kernel"
  input: "conv2d_5_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_5_1/kernel/read"
  op: "Identity"
  input: "conv2d_5_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_5_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_5_1/bias/Assign"
  op: "Assign"
  input: "conv2d_5_1/bias"
  input: "conv2d_5_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_5_1/bias/read"
  op: "Identity"
  input: "conv2d_5_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_5_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_5_1/convolution"
  op: "Conv2D"
  input: "max_pooling2d_1_1/MaxPool"
  input: "conv2d_5_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_5_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_5_1/convolution"
  input: "conv2d_5_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_5_1/Relu"
  op: "Relu"
  input: "conv2d_5_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_7_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14433756470680237
      }
    }
  }
}
node {
  name: "conv2d_7_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "conv2d_7_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_7_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8486891
    }
  }
}
node {
  name: "conv2d_7_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_7_1/random_uniform/max"
  input: "conv2d_7_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_7_1/random_uniform/RandomUniform"
  input: "conv2d_7_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7_1/random_uniform"
  op: "Add"
  input: "conv2d_7_1/random_uniform/mul"
  input: "conv2d_7_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_7_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_7_1/kernel"
  input: "conv2d_7_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_7_1/kernel/read"
  op: "Identity"
  input: "conv2d_7_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_7_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_7_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_7_1/bias/Assign"
  op: "Assign"
  input: "conv2d_7_1/bias"
  input: "conv2d_7_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_7_1/bias/read"
  op: "Identity"
  input: "conv2d_7_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_7_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_7_1/convolution"
  op: "Conv2D"
  input: "conv2d_6_1/Relu"
  input: "conv2d_7_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_7_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_7_1/convolution"
  input: "conv2d_7_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_7_1/Relu"
  op: "Relu"
  input: "conv2d_7_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_10_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14433756470680237
      }
    }
  }
}
node {
  name: "conv2d_10_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "conv2d_10_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_10_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 719297
    }
  }
}
node {
  name: "conv2d_10_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_10_1/random_uniform/max"
  input: "conv2d_10_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_10_1/random_uniform/RandomUniform"
  input: "conv2d_10_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10_1/random_uniform"
  op: "Add"
  input: "conv2d_10_1/random_uniform/mul"
  input: "conv2d_10_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_10_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_10_1/kernel"
  input: "conv2d_10_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_10_1/kernel/read"
  op: "Identity"
  input: "conv2d_10_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_10_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_10_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_10_1/bias/Assign"
  op: "Assign"
  input: "conv2d_10_1/bias"
  input: "conv2d_10_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_10_1/bias/read"
  op: "Identity"
  input: "conv2d_10_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_10_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_10_1/convolution"
  op: "Conv2D"
  input: "conv2d_9_1/Relu"
  input: "conv2d_10_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_10_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_10_1/convolution"
  input: "conv2d_10_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_10_1/Relu"
  op: "Relu"
  input: "conv2d_10_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_2_1/MaxPool"
  op: "MaxPool"
  input: "conv2d_11_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "concatenate_1_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "concatenate_1_1/concat"
  op: "ConcatV2"
  input: "conv2d_5_1/Relu"
  input: "conv2d_7_1/Relu"
  input: "conv2d_10_1/Relu"
  input: "max_pooling2d_2_1/MaxPool"
  input: "concatenate_1_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_2_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2_1/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_2_1/gamma"
  input: "batch_normalization_2_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2_1/gamma/read"
  op: "Identity"
  input: "batch_normalization_2_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2_1/beta/Assign"
  op: "Assign"
  input: "batch_normalization_2_1/beta"
  input: "batch_normalization_2_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2_1/beta/read"
  op: "Identity"
  input: "batch_normalization_2_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_2_1/moving_mean"
  input: "batch_normalization_2_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_2_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_2_1/moving_variance"
  input: "batch_normalization_2_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_2_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "concatenate_1_1/concat"
  input: "batch_normalization_2_1/gamma/read"
  input: "batch_normalization_2_1/beta/read"
  input: "batch_normalization_2_1/Const_4"
  input: "batch_normalization_2_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2_1/Shape"
  op: "Shape"
  input: "concatenate_1_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_2_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/strided_slice"
  op: "StridedSlice"
  input: "batch_normalization_2_1/Shape"
  input: "batch_normalization_2_1/strided_slice/stack"
  input: "batch_normalization_2_1/strided_slice/stack_1"
  input: "batch_normalization_2_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_normalization_2_1/Shape_1"
  op: "Shape"
  input: "concatenate_1_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_2_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/strided_slice_1"
  op: "StridedSlice"
  input: "batch_normalization_2_1/Shape_1"
  input: "batch_normalization_2_1/strided_slice_1/stack"
  input: "batch_normalization_2_1/strided_slice_1/stack_1"
  input: "batch_normalization_2_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_normalization_2_1/Shape_2"
  op: "Shape"
  input: "concatenate_1_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_2_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/strided_slice_2"
  op: "StridedSlice"
  input: "batch_normalization_2_1/Shape_2"
  input: "batch_normalization_2_1/strided_slice_2/stack"
  input: "batch_normalization_2_1/strided_slice_2/stack_1"
  input: "batch_normalization_2_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_normalization_2_1/Rank/packed"
  op: "Pack"
  input: "batch_normalization_2_1/strided_slice"
  input: "batch_normalization_2_1/strided_slice_1"
  input: "batch_normalization_2_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_normalization_2_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/range"
  op: "Range"
  input: "batch_normalization_2_1/range/start"
  input: "batch_normalization_2_1/Rank"
  input: "batch_normalization_2_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_2_1/Prod/input"
  op: "Pack"
  input: "batch_normalization_2_1/strided_slice"
  input: "batch_normalization_2_1/strided_slice_1"
  input: "batch_normalization_2_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_normalization_2_1/Prod"
  op: "Prod"
  input: "batch_normalization_2_1/Prod/input"
  input: "batch_normalization_2_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_2_1/Cast"
  op: "Cast"
  input: "batch_normalization_2_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_2_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/sub"
  op: "Sub"
  input: "batch_normalization_2_1/Cast"
  input: "batch_normalization_2_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2_1/truediv"
  op: "RealDiv"
  input: "batch_normalization_2_1/Cast"
  input: "batch_normalization_2_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2_1/mul"
  op: "Mul"
  input: "batch_normalization_2_1/FusedBatchNorm:2"
  input: "batch_normalization_2_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "batch_normalization_2_1/moving_mean/biased"
  input: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_mean/biased/read"
  op: "Identity"
  input: "batch_normalization_2_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "batch_normalization_2_1/moving_mean/local_step"
  input: "batch_normalization_2_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_mean/local_step/read"
  op: "Identity"
  input: "batch_normalization_2_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/sub"
  op: "Sub"
  input: "batch_normalization_2_1/moving_mean/biased/read"
  input: "batch_normalization_2_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/mul"
  op: "Mul"
  input: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/sub"
  input: "batch_normalization_2_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/batch_normalization_2_1/moving_mean"
  op: "AssignSub"
  input: "batch_normalization_2_1/moving_mean/biased"
  input: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "batch_normalization_2_1/moving_mean/local_step"
  input: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_2_1/moving_mean/biased"
  input: "^batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/AssignAdd"
  input: "^batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/batch_normalization_2_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/AssignAdd"
  input: "^batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/batch_normalization_2_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/sub_1"
  op: "Sub"
  input: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/sub_1/x"
  input: "batch_normalization_2_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/read_1"
  op: "Identity"
  input: "batch_normalization_2_1/moving_mean/local_step"
  input: "^batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/AssignAdd"
  input: "^batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/batch_normalization_2_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/Pow"
  op: "Pow"
  input: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/sub_1"
  input: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/AssignAdd"
  input: "^batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/batch_normalization_2_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/sub_2"
  op: "Sub"
  input: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/sub_2/x"
  input: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/truediv"
  op: "RealDiv"
  input: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/read"
  input: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/sub_3"
  op: "Sub"
  input: "batch_normalization_2_1/moving_mean/read"
  input: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_2_1/moving_mean"
  input: "batch_normalization_2_1/AssignMovingAvg/batch_normalization_2_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "batch_normalization_2_1/moving_variance/biased"
  input: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_variance/biased/read"
  op: "Identity"
  input: "batch_normalization_2_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "batch_normalization_2_1/moving_variance/local_step"
  input: "batch_normalization_2_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2_1/moving_variance/local_step/read"
  op: "Identity"
  input: "batch_normalization_2_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/sub"
  op: "Sub"
  input: "batch_normalization_2_1/moving_variance/biased/read"
  input: "batch_normalization_2_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/mul"
  op: "Mul"
  input: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/sub"
  input: "batch_normalization_2_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/batch_normalization_2_1/moving_variance"
  op: "AssignSub"
  input: "batch_normalization_2_1/moving_variance/biased"
  input: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "batch_normalization_2_1/moving_variance/local_step"
  input: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_2_1/moving_variance/biased"
  input: "^batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/AssignAdd"
  input: "^batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/batch_normalization_2_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/AssignAdd"
  input: "^batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/batch_normalization_2_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/sub_1"
  op: "Sub"
  input: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/sub_1/x"
  input: "batch_normalization_2_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/read_1"
  op: "Identity"
  input: "batch_normalization_2_1/moving_variance/local_step"
  input: "^batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/AssignAdd"
  input: "^batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/batch_normalization_2_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/Pow"
  op: "Pow"
  input: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/sub_1"
  input: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/AssignAdd"
  input: "^batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/batch_normalization_2_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/sub_2"
  op: "Sub"
  input: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/sub_2/x"
  input: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/truediv"
  op: "RealDiv"
  input: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/read"
  input: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/sub_3"
  op: "Sub"
  input: "batch_normalization_2_1/moving_variance/read"
  input: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_2_1/moving_variance"
  input: "batch_normalization_2_1/AssignMovingAvg_1/batch_normalization_2_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_2_1/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1_1/keras_learning_phase"
  input: "batch_normalization_1_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2_1/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_2_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2_1/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_2_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2_1/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_2_1/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_2_1/FusedBatchNorm"
  input: "batch_normalization_2_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_2_1/cond/FusedBatchNorm/Switch"
  input: "batch_normalization_2_1/cond/FusedBatchNorm/Switch_1"
  input: "batch_normalization_2_1/cond/FusedBatchNorm/Switch_2"
  input: "batch_normalization_2_1/cond/FusedBatchNorm/Switch_3"
  input: "batch_normalization_2_1/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_2_1/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "concatenate_1_1/concat"
  input: "batch_normalization_2_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "batch_normalization_2_1/gamma/read"
  input: "batch_normalization_2_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "batch_normalization_2_1/beta/read"
  input: "batch_normalization_2_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "batch_normalization_2_1/moving_mean/read"
  input: "batch_normalization_2_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "batch_normalization_2_1/moving_variance/read"
  input: "batch_normalization_2_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_2_1/cond/Merge"
  op: "Merge"
  input: "batch_normalization_2_1/cond/FusedBatchNorm"
  input: "batch_normalization_2_1/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_2_1/Relu"
  op: "Relu"
  input: "batch_normalization_2_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_12_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2314550280570984
      }
    }
  }
}
node {
  name: "conv2d_12_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2314550280570984
      }
    }
  }
}
node {
  name: "conv2d_12_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_12_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6665072
    }
  }
}
node {
  name: "conv2d_12_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_12_1/random_uniform/max"
  input: "conv2d_12_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_12_1/random_uniform/RandomUniform"
  input: "conv2d_12_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12_1/random_uniform"
  op: "Add"
  input: "conv2d_12_1/random_uniform/mul"
  input: "conv2d_12_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_12_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_12_1/kernel"
  input: "conv2d_12_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_12_1/kernel/read"
  op: "Identity"
  input: "conv2d_12_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_12_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_12_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_12_1/bias/Assign"
  op: "Assign"
  input: "conv2d_12_1/bias"
  input: "conv2d_12_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_12_1/bias/read"
  op: "Identity"
  input: "conv2d_12_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_12_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_12_1/convolution"
  op: "Conv2D"
  input: "activation_2_1/Relu"
  input: "conv2d_12_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_12_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_12_1/convolution"
  input: "conv2d_12_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_12_1/Relu"
  op: "Relu"
  input: "conv2d_12_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_3_1/MaxPool"
  op: "MaxPool"
  input: "conv2d_12_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv2d_14_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0000\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_14_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3061862289905548
      }
    }
  }
}
node {
  name: "conv2d_14_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3061862289905548
      }
    }
  }
}
node {
  name: "conv2d_14_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_14_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2356322
    }
  }
}
node {
  name: "conv2d_14_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_14_1/random_uniform/max"
  input: "conv2d_14_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_14_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_14_1/random_uniform/RandomUniform"
  input: "conv2d_14_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_14_1/random_uniform"
  op: "Add"
  input: "conv2d_14_1/random_uniform/mul"
  input: "conv2d_14_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_14_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_14_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_14_1/kernel"
  input: "conv2d_14_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_14_1/kernel/read"
  op: "Identity"
  input: "conv2d_14_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_14_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_14_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_14_1/bias/Assign"
  op: "Assign"
  input: "conv2d_14_1/bias"
  input: "conv2d_14_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_14_1/bias/read"
  op: "Identity"
  input: "conv2d_14_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_14_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_14_1/convolution"
  op: "Conv2D"
  input: "max_pooling2d_3_1/MaxPool"
  input: "conv2d_14_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_14_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_14_1/convolution"
  input: "conv2d_14_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_14_1/Relu"
  op: "Relu"
  input: "conv2d_14_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0000\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_16_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3061862289905548
      }
    }
  }
}
node {
  name: "conv2d_16_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3061862289905548
      }
    }
  }
}
node {
  name: "conv2d_16_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_16_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1329699
    }
  }
}
node {
  name: "conv2d_16_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_16_1/random_uniform/max"
  input: "conv2d_16_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_16_1/random_uniform/RandomUniform"
  input: "conv2d_16_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16_1/random_uniform"
  op: "Add"
  input: "conv2d_16_1/random_uniform/mul"
  input: "conv2d_16_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_16_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_16_1/kernel"
  input: "conv2d_16_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_16_1/kernel/read"
  op: "Identity"
  input: "conv2d_16_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_16_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_16_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_16_1/bias/Assign"
  op: "Assign"
  input: "conv2d_16_1/bias"
  input: "conv2d_16_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_16_1/bias/read"
  op: "Identity"
  input: "conv2d_16_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_16_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_16_1/convolution"
  op: "Conv2D"
  input: "max_pooling2d_3_1/MaxPool"
  input: "conv2d_16_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_16_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_16_1/convolution"
  input: "conv2d_16_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_16_1/Relu"
  op: "Relu"
  input: "conv2d_16_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0000\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_13_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3061862289905548
      }
    }
  }
}
node {
  name: "conv2d_13_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3061862289905548
      }
    }
  }
}
node {
  name: "conv2d_13_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_13_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9251985
    }
  }
}
node {
  name: "conv2d_13_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_13_1/random_uniform/max"
  input: "conv2d_13_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_13_1/random_uniform/RandomUniform"
  input: "conv2d_13_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13_1/random_uniform"
  op: "Add"
  input: "conv2d_13_1/random_uniform/mul"
  input: "conv2d_13_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_13_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_13_1/kernel"
  input: "conv2d_13_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_13_1/kernel/read"
  op: "Identity"
  input: "conv2d_13_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_13_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_13_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_13_1/bias/Assign"
  op: "Assign"
  input: "conv2d_13_1/bias"
  input: "conv2d_13_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_13_1/bias/read"
  op: "Identity"
  input: "conv2d_13_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_13_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_13_1/convolution"
  op: "Conv2D"
  input: "max_pooling2d_3_1/MaxPool"
  input: "conv2d_13_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_13_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_13_1/convolution"
  input: "conv2d_13_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_13_1/Relu"
  op: "Relu"
  input: "conv2d_13_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_15_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14433756470680237
      }
    }
  }
}
node {
  name: "conv2d_15_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "conv2d_15_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_15_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3365894
    }
  }
}
node {
  name: "conv2d_15_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_15_1/random_uniform/max"
  input: "conv2d_15_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_15_1/random_uniform/RandomUniform"
  input: "conv2d_15_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15_1/random_uniform"
  op: "Add"
  input: "conv2d_15_1/random_uniform/mul"
  input: "conv2d_15_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_15_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_15_1/kernel"
  input: "conv2d_15_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_15_1/kernel/read"
  op: "Identity"
  input: "conv2d_15_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_15_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_15_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_15_1/bias/Assign"
  op: "Assign"
  input: "conv2d_15_1/bias"
  input: "conv2d_15_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_15_1/bias/read"
  op: "Identity"
  input: "conv2d_15_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_15_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_15_1/convolution"
  op: "Conv2D"
  input: "conv2d_14_1/Relu"
  input: "conv2d_15_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_15_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_15_1/convolution"
  input: "conv2d_15_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_15_1/Relu"
  op: "Relu"
  input: "conv2d_15_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_4_1/MaxPool"
  op: "MaxPool"
  input: "conv2d_16_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "concatenate_2_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "concatenate_2_1/concat"
  op: "ConcatV2"
  input: "conv2d_13_1/Relu"
  input: "conv2d_15_1/Relu"
  input: "max_pooling2d_4_1/MaxPool"
  input: "concatenate_2_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_3_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3_1/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_3_1/gamma"
  input: "batch_normalization_3_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3_1/gamma/read"
  op: "Identity"
  input: "batch_normalization_3_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3_1/beta/Assign"
  op: "Assign"
  input: "batch_normalization_3_1/beta"
  input: "batch_normalization_3_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3_1/beta/read"
  op: "Identity"
  input: "batch_normalization_3_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_3_1/moving_mean"
  input: "batch_normalization_3_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_3_1/moving_variance"
  input: "batch_normalization_3_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "concatenate_2_1/concat"
  input: "batch_normalization_3_1/gamma/read"
  input: "batch_normalization_3_1/beta/read"
  input: "batch_normalization_3_1/Const_4"
  input: "batch_normalization_3_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3_1/Shape"
  op: "Shape"
  input: "concatenate_2_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_3_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/strided_slice"
  op: "StridedSlice"
  input: "batch_normalization_3_1/Shape"
  input: "batch_normalization_3_1/strided_slice/stack"
  input: "batch_normalization_3_1/strided_slice/stack_1"
  input: "batch_normalization_3_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_normalization_3_1/Shape_1"
  op: "Shape"
  input: "concatenate_2_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_3_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/strided_slice_1"
  op: "StridedSlice"
  input: "batch_normalization_3_1/Shape_1"
  input: "batch_normalization_3_1/strided_slice_1/stack"
  input: "batch_normalization_3_1/strided_slice_1/stack_1"
  input: "batch_normalization_3_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_normalization_3_1/Shape_2"
  op: "Shape"
  input: "concatenate_2_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_3_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/strided_slice_2"
  op: "StridedSlice"
  input: "batch_normalization_3_1/Shape_2"
  input: "batch_normalization_3_1/strided_slice_2/stack"
  input: "batch_normalization_3_1/strided_slice_2/stack_1"
  input: "batch_normalization_3_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_normalization_3_1/Rank/packed"
  op: "Pack"
  input: "batch_normalization_3_1/strided_slice"
  input: "batch_normalization_3_1/strided_slice_1"
  input: "batch_normalization_3_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_normalization_3_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/range"
  op: "Range"
  input: "batch_normalization_3_1/range/start"
  input: "batch_normalization_3_1/Rank"
  input: "batch_normalization_3_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_3_1/Prod/input"
  op: "Pack"
  input: "batch_normalization_3_1/strided_slice"
  input: "batch_normalization_3_1/strided_slice_1"
  input: "batch_normalization_3_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_normalization_3_1/Prod"
  op: "Prod"
  input: "batch_normalization_3_1/Prod/input"
  input: "batch_normalization_3_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_3_1/Cast"
  op: "Cast"
  input: "batch_normalization_3_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_3_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/sub"
  op: "Sub"
  input: "batch_normalization_3_1/Cast"
  input: "batch_normalization_3_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3_1/truediv"
  op: "RealDiv"
  input: "batch_normalization_3_1/Cast"
  input: "batch_normalization_3_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3_1/mul"
  op: "Mul"
  input: "batch_normalization_3_1/FusedBatchNorm:2"
  input: "batch_normalization_3_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "batch_normalization_3_1/moving_mean/biased"
  input: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_mean/biased/read"
  op: "Identity"
  input: "batch_normalization_3_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "batch_normalization_3_1/moving_mean/local_step"
  input: "batch_normalization_3_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_mean/local_step/read"
  op: "Identity"
  input: "batch_normalization_3_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/sub"
  op: "Sub"
  input: "batch_normalization_3_1/moving_mean/biased/read"
  input: "batch_normalization_3_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/mul"
  op: "Mul"
  input: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/sub"
  input: "batch_normalization_3_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/batch_normalization_3_1/moving_mean"
  op: "AssignSub"
  input: "batch_normalization_3_1/moving_mean/biased"
  input: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "batch_normalization_3_1/moving_mean/local_step"
  input: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_3_1/moving_mean/biased"
  input: "^batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/AssignAdd"
  input: "^batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/batch_normalization_3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/AssignAdd"
  input: "^batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/batch_normalization_3_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/sub_1"
  op: "Sub"
  input: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/sub_1/x"
  input: "batch_normalization_3_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/read_1"
  op: "Identity"
  input: "batch_normalization_3_1/moving_mean/local_step"
  input: "^batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/AssignAdd"
  input: "^batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/batch_normalization_3_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/Pow"
  op: "Pow"
  input: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/sub_1"
  input: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/AssignAdd"
  input: "^batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/batch_normalization_3_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/sub_2"
  op: "Sub"
  input: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/sub_2/x"
  input: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/truediv"
  op: "RealDiv"
  input: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/read"
  input: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/sub_3"
  op: "Sub"
  input: "batch_normalization_3_1/moving_mean/read"
  input: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_3_1/moving_mean"
  input: "batch_normalization_3_1/AssignMovingAvg/batch_normalization_3_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "batch_normalization_3_1/moving_variance/biased"
  input: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_variance/biased/read"
  op: "Identity"
  input: "batch_normalization_3_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "batch_normalization_3_1/moving_variance/local_step"
  input: "batch_normalization_3_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3_1/moving_variance/local_step/read"
  op: "Identity"
  input: "batch_normalization_3_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/sub"
  op: "Sub"
  input: "batch_normalization_3_1/moving_variance/biased/read"
  input: "batch_normalization_3_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/mul"
  op: "Mul"
  input: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/sub"
  input: "batch_normalization_3_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/batch_normalization_3_1/moving_variance"
  op: "AssignSub"
  input: "batch_normalization_3_1/moving_variance/biased"
  input: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "batch_normalization_3_1/moving_variance/local_step"
  input: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_3_1/moving_variance/biased"
  input: "^batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/AssignAdd"
  input: "^batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/batch_normalization_3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/AssignAdd"
  input: "^batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/batch_normalization_3_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/sub_1"
  op: "Sub"
  input: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/sub_1/x"
  input: "batch_normalization_3_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/read_1"
  op: "Identity"
  input: "batch_normalization_3_1/moving_variance/local_step"
  input: "^batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/AssignAdd"
  input: "^batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/batch_normalization_3_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/Pow"
  op: "Pow"
  input: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/sub_1"
  input: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/AssignAdd"
  input: "^batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/batch_normalization_3_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/sub_2"
  op: "Sub"
  input: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/sub_2/x"
  input: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/truediv"
  op: "RealDiv"
  input: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/read"
  input: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/sub_3"
  op: "Sub"
  input: "batch_normalization_3_1/moving_variance/read"
  input: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_3_1/moving_variance"
  input: "batch_normalization_3_1/AssignMovingAvg_1/batch_normalization_3_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_3_1/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1_1/keras_learning_phase"
  input: "batch_normalization_1_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3_1/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_3_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3_1/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_3_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3_1/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_3_1/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_3_1/FusedBatchNorm"
  input: "batch_normalization_3_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_3_1/cond/FusedBatchNorm/Switch"
  input: "batch_normalization_3_1/cond/FusedBatchNorm/Switch_1"
  input: "batch_normalization_3_1/cond/FusedBatchNorm/Switch_2"
  input: "batch_normalization_3_1/cond/FusedBatchNorm/Switch_3"
  input: "batch_normalization_3_1/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_3_1/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "concatenate_2_1/concat"
  input: "batch_normalization_3_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2_1/concat"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "batch_normalization_3_1/gamma/read"
  input: "batch_normalization_3_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "batch_normalization_3_1/beta/read"
  input: "batch_normalization_3_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "batch_normalization_3_1/moving_mean/read"
  input: "batch_normalization_3_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "batch_normalization_3_1/moving_variance/read"
  input: "batch_normalization_3_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_3_1/cond/Merge"
  op: "Merge"
  input: "batch_normalization_3_1/cond/FusedBatchNorm"
  input: "batch_normalization_3_1/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_3_1/Relu"
  op: "Relu"
  input: "batch_normalization_3_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0000\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_17_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.273861289024353
      }
    }
  }
}
node {
  name: "conv2d_17_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.273861289024353
      }
    }
  }
}
node {
  name: "conv2d_17_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_17_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2218860
    }
  }
}
node {
  name: "conv2d_17_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_17_1/random_uniform/max"
  input: "conv2d_17_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_17_1/random_uniform/RandomUniform"
  input: "conv2d_17_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17_1/random_uniform"
  op: "Add"
  input: "conv2d_17_1/random_uniform/mul"
  input: "conv2d_17_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_17_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_17_1/kernel"
  input: "conv2d_17_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_17_1/kernel/read"
  op: "Identity"
  input: "conv2d_17_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_17_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_17_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_17_1/bias/Assign"
  op: "Assign"
  input: "conv2d_17_1/bias"
  input: "conv2d_17_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_17_1/bias/read"
  op: "Identity"
  input: "conv2d_17_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_17_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_17_1/convolution"
  op: "Conv2D"
  input: "activation_3_1/Relu"
  input: "conv2d_17_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_17_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_17_1/convolution"
  input: "conv2d_17_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_17_1/Relu"
  op: "Relu"
  input: "conv2d_17_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_5_1/MaxPool"
  op: "MaxPool"
  input: "conv2d_17_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv2d_19_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_19_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3535533845424652
      }
    }
  }
}
node {
  name: "conv2d_19_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3535533845424652
      }
    }
  }
}
node {
  name: "conv2d_19_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_19_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 24076
    }
  }
}
node {
  name: "conv2d_19_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_19_1/random_uniform/max"
  input: "conv2d_19_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_19_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_19_1/random_uniform/RandomUniform"
  input: "conv2d_19_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_19_1/random_uniform"
  op: "Add"
  input: "conv2d_19_1/random_uniform/mul"
  input: "conv2d_19_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_19_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_19_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_19_1/kernel"
  input: "conv2d_19_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_19_1/kernel/read"
  op: "Identity"
  input: "conv2d_19_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_19_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_19_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_19_1/bias/Assign"
  op: "Assign"
  input: "conv2d_19_1/bias"
  input: "conv2d_19_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_19_1/bias/read"
  op: "Identity"
  input: "conv2d_19_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_19_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_19_1/convolution"
  op: "Conv2D"
  input: "max_pooling2d_5_1/MaxPool"
  input: "conv2d_19_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_19_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_19_1/convolution"
  input: "conv2d_19_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_19_1/Relu"
  op: "Relu"
  input: "conv2d_19_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_18_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3535533845424652
      }
    }
  }
}
node {
  name: "conv2d_18_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3535533845424652
      }
    }
  }
}
node {
  name: "conv2d_18_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_18_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6235498
    }
  }
}
node {
  name: "conv2d_18_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_18_1/random_uniform/max"
  input: "conv2d_18_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_18_1/random_uniform/RandomUniform"
  input: "conv2d_18_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18_1/random_uniform"
  op: "Add"
  input: "conv2d_18_1/random_uniform/mul"
  input: "conv2d_18_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_18_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_18_1/kernel"
  input: "conv2d_18_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_18_1/kernel/read"
  op: "Identity"
  input: "conv2d_18_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_18_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_18_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_18_1/bias/Assign"
  op: "Assign"
  input: "conv2d_18_1/bias"
  input: "conv2d_18_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_18_1/bias/read"
  op: "Identity"
  input: "conv2d_18_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_18_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_18_1/convolution"
  op: "Conv2D"
  input: "max_pooling2d_5_1/MaxPool"
  input: "conv2d_18_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_18_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_18_1/convolution"
  input: "conv2d_18_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_18_1/Relu"
  op: "Relu"
  input: "conv2d_18_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_20_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14433756470680237
      }
    }
  }
}
node {
  name: "conv2d_20_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "conv2d_20_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_20_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 675296
    }
  }
}
node {
  name: "conv2d_20_1/random_uniform/sub"
  op: "Sub"
  input: "conv2d_20_1/random_uniform/max"
  input: "conv2d_20_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20_1/random_uniform/mul"
  op: "Mul"
  input: "conv2d_20_1/random_uniform/RandomUniform"
  input: "conv2d_20_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20_1/random_uniform"
  op: "Add"
  input: "conv2d_20_1/random_uniform/mul"
  input: "conv2d_20_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_20_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_20_1/kernel"
  input: "conv2d_20_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_20_1/kernel/read"
  op: "Identity"
  input: "conv2d_20_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_20_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_20_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_20_1/bias/Assign"
  op: "Assign"
  input: "conv2d_20_1/bias"
  input: "conv2d_20_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_20_1/bias/read"
  op: "Identity"
  input: "conv2d_20_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_20_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_20_1/convolution"
  op: "Conv2D"
  input: "conv2d_19_1/Relu"
  input: "conv2d_20_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_20_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_20_1/convolution"
  input: "conv2d_20_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_20_1/Relu"
  op: "Relu"
  input: "conv2d_20_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concatenate_3_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "concatenate_3_1/concat"
  op: "ConcatV2"
  input: "conv2d_18_1/Relu"
  input: "conv2d_20_1/Relu"
  input: "concatenate_3_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_4_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4_1/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_4_1/gamma"
  input: "batch_normalization_4_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4_1/gamma/read"
  op: "Identity"
  input: "batch_normalization_4_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4_1/beta/Assign"
  op: "Assign"
  input: "batch_normalization_4_1/beta"
  input: "batch_normalization_4_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4_1/beta/read"
  op: "Identity"
  input: "batch_normalization_4_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_4_1/moving_mean"
  input: "batch_normalization_4_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_4_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_4_1/moving_variance"
  input: "batch_normalization_4_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_4_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "concatenate_3_1/concat"
  input: "batch_normalization_4_1/gamma/read"
  input: "batch_normalization_4_1/beta/read"
  input: "batch_normalization_4_1/Const_4"
  input: "batch_normalization_4_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4_1/Shape"
  op: "Shape"
  input: "concatenate_3_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_4_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/strided_slice"
  op: "StridedSlice"
  input: "batch_normalization_4_1/Shape"
  input: "batch_normalization_4_1/strided_slice/stack"
  input: "batch_normalization_4_1/strided_slice/stack_1"
  input: "batch_normalization_4_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_normalization_4_1/Shape_1"
  op: "Shape"
  input: "concatenate_3_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_4_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/strided_slice_1"
  op: "StridedSlice"
  input: "batch_normalization_4_1/Shape_1"
  input: "batch_normalization_4_1/strided_slice_1/stack"
  input: "batch_normalization_4_1/strided_slice_1/stack_1"
  input: "batch_normalization_4_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_normalization_4_1/Shape_2"
  op: "Shape"
  input: "concatenate_3_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_4_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/strided_slice_2"
  op: "StridedSlice"
  input: "batch_normalization_4_1/Shape_2"
  input: "batch_normalization_4_1/strided_slice_2/stack"
  input: "batch_normalization_4_1/strided_slice_2/stack_1"
  input: "batch_normalization_4_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_normalization_4_1/Rank/packed"
  op: "Pack"
  input: "batch_normalization_4_1/strided_slice"
  input: "batch_normalization_4_1/strided_slice_1"
  input: "batch_normalization_4_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_normalization_4_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/range"
  op: "Range"
  input: "batch_normalization_4_1/range/start"
  input: "batch_normalization_4_1/Rank"
  input: "batch_normalization_4_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_4_1/Prod/input"
  op: "Pack"
  input: "batch_normalization_4_1/strided_slice"
  input: "batch_normalization_4_1/strided_slice_1"
  input: "batch_normalization_4_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_normalization_4_1/Prod"
  op: "Prod"
  input: "batch_normalization_4_1/Prod/input"
  input: "batch_normalization_4_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_4_1/Cast"
  op: "Cast"
  input: "batch_normalization_4_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_4_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/sub"
  op: "Sub"
  input: "batch_normalization_4_1/Cast"
  input: "batch_normalization_4_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4_1/truediv"
  op: "RealDiv"
  input: "batch_normalization_4_1/Cast"
  input: "batch_normalization_4_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4_1/mul"
  op: "Mul"
  input: "batch_normalization_4_1/FusedBatchNorm:2"
  input: "batch_normalization_4_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "batch_normalization_4_1/moving_mean/biased"
  input: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_mean/biased/read"
  op: "Identity"
  input: "batch_normalization_4_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "batch_normalization_4_1/moving_mean/local_step"
  input: "batch_normalization_4_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_mean/local_step/read"
  op: "Identity"
  input: "batch_normalization_4_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/sub"
  op: "Sub"
  input: "batch_normalization_4_1/moving_mean/biased/read"
  input: "batch_normalization_4_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/mul"
  op: "Mul"
  input: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/sub"
  input: "batch_normalization_4_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/batch_normalization_4_1/moving_mean"
  op: "AssignSub"
  input: "batch_normalization_4_1/moving_mean/biased"
  input: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "batch_normalization_4_1/moving_mean/local_step"
  input: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_4_1/moving_mean/biased"
  input: "^batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/AssignAdd"
  input: "^batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/batch_normalization_4_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/AssignAdd"
  input: "^batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/batch_normalization_4_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/sub_1"
  op: "Sub"
  input: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/sub_1/x"
  input: "batch_normalization_4_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/read_1"
  op: "Identity"
  input: "batch_normalization_4_1/moving_mean/local_step"
  input: "^batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/AssignAdd"
  input: "^batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/batch_normalization_4_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/Pow"
  op: "Pow"
  input: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/sub_1"
  input: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/AssignAdd"
  input: "^batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/batch_normalization_4_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/sub_2"
  op: "Sub"
  input: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/sub_2/x"
  input: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/truediv"
  op: "RealDiv"
  input: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/read"
  input: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/sub_3"
  op: "Sub"
  input: "batch_normalization_4_1/moving_mean/read"
  input: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_4_1/moving_mean"
  input: "batch_normalization_4_1/AssignMovingAvg/batch_normalization_4_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "batch_normalization_4_1/moving_variance/biased"
  input: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_variance/biased/read"
  op: "Identity"
  input: "batch_normalization_4_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "batch_normalization_4_1/moving_variance/local_step"
  input: "batch_normalization_4_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4_1/moving_variance/local_step/read"
  op: "Identity"
  input: "batch_normalization_4_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/sub"
  op: "Sub"
  input: "batch_normalization_4_1/moving_variance/biased/read"
  input: "batch_normalization_4_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/mul"
  op: "Mul"
  input: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/sub"
  input: "batch_normalization_4_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/batch_normalization_4_1/moving_variance"
  op: "AssignSub"
  input: "batch_normalization_4_1/moving_variance/biased"
  input: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "batch_normalization_4_1/moving_variance/local_step"
  input: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_4_1/moving_variance/biased"
  input: "^batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/AssignAdd"
  input: "^batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/batch_normalization_4_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/AssignAdd"
  input: "^batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/batch_normalization_4_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/sub_1"
  op: "Sub"
  input: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/sub_1/x"
  input: "batch_normalization_4_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/read_1"
  op: "Identity"
  input: "batch_normalization_4_1/moving_variance/local_step"
  input: "^batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/AssignAdd"
  input: "^batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/batch_normalization_4_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/Pow"
  op: "Pow"
  input: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/sub_1"
  input: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/AssignAdd"
  input: "^batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/batch_normalization_4_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/sub_2"
  op: "Sub"
  input: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/sub_2/x"
  input: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/truediv"
  op: "RealDiv"
  input: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/read"
  input: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/sub_3"
  op: "Sub"
  input: "batch_normalization_4_1/moving_variance/read"
  input: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_4_1/moving_variance"
  input: "batch_normalization_4_1/AssignMovingAvg_1/batch_normalization_4_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_4_1/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1_1/keras_learning_phase"
  input: "batch_normalization_1_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4_1/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_4_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4_1/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_4_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4_1/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_4_1/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_4_1/FusedBatchNorm"
  input: "batch_normalization_4_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "batch_normalization_4_1/cond/FusedBatchNorm/Switch"
  input: "batch_normalization_4_1/cond/FusedBatchNorm/Switch_1"
  input: "batch_normalization_4_1/cond/FusedBatchNorm/Switch_2"
  input: "batch_normalization_4_1/cond/FusedBatchNorm/Switch_3"
  input: "batch_normalization_4_1/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_4_1/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "concatenate_3_1/concat"
  input: "batch_normalization_4_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3_1/concat"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "batch_normalization_4_1/gamma/read"
  input: "batch_normalization_4_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "batch_normalization_4_1/beta/read"
  input: "batch_normalization_4_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "batch_normalization_4_1/moving_mean/read"
  input: "batch_normalization_4_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "batch_normalization_4_1/moving_variance/read"
  input: "batch_normalization_4_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_4_1/cond/Merge"
  op: "Merge"
  input: "batch_normalization_4_1/cond/FusedBatchNorm"
  input: "batch_normalization_4_1/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_4_1/Relu"
  op: "Relu"
  input: "batch_normalization_4_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_6_1/MaxPool"
  op: "MaxPool"
  input: "activation_4_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "dropout_1_1/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1_1/keras_learning_phase"
  input: "batch_normalization_1_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_1_1/cond/switch_t"
  op: "Identity"
  input: "dropout_1_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_1_1/cond/switch_f"
  op: "Identity"
  input: "dropout_1_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_1_1/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_1_1/cond/mul/y"
  op: "Const"
  input: "^dropout_1_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1_1/cond/mul"
  op: "Mul"
  input: "dropout_1_1/cond/mul/Switch:1"
  input: "dropout_1_1/cond/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1_1/cond/mul/Switch"
  op: "Switch"
  input: "max_pooling2d_6_1/MaxPool"
  input: "dropout_1_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6_1/MaxPool"
      }
    }
  }
}
node {
  name: "dropout_1_1/cond/dropout/rate"
  op: "Const"
  input: "^dropout_1_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_1_1/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_1_1/cond/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_1_1/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_1_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1_1/cond/dropout/sub"
  op: "Sub"
  input: "dropout_1_1/cond/dropout/sub/x"
  input: "dropout_1_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1_1/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_1_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_1_1/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_1_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1_1/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_1_1/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8027787
    }
  }
}
node {
  name: "dropout_1_1/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_1_1/cond/dropout/random_uniform/max"
  input: "dropout_1_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1_1/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_1_1/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_1_1/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1_1/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_1_1/cond/dropout/random_uniform/mul"
  input: "dropout_1_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1_1/cond/dropout/add"
  op: "Add"
  input: "dropout_1_1/cond/dropout/sub"
  input: "dropout_1_1/cond/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1_1/cond/dropout/Floor"
  op: "Floor"
  input: "dropout_1_1/cond/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1_1/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_1_1/cond/mul"
  input: "dropout_1_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1_1/cond/dropout/mul"
  op: "Mul"
  input: "dropout_1_1/cond/dropout/truediv"
  input: "dropout_1_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1_1/cond/Switch_1"
  op: "Switch"
  input: "max_pooling2d_6_1/MaxPool"
  input: "dropout_1_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6_1/MaxPool"
      }
    }
  }
}
node {
  name: "dropout_1_1/cond/Merge"
  op: "Merge"
  input: "dropout_1_1/cond/Switch_1"
  input: "dropout_1_1/cond/dropout/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_average_pooling2d_1_1/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global_average_pooling2d_1_1/Mean"
  op: "Mean"
  input: "dropout_1_1/cond/Merge"
  input: "global_average_pooling2d_1_1/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_5_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5_1/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_5_1/gamma"
  input: "batch_normalization_5_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5_1/gamma/read"
  op: "Identity"
  input: "batch_normalization_5_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5_1/beta/Assign"
  op: "Assign"
  input: "batch_normalization_5_1/beta"
  input: "batch_normalization_5_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5_1/beta/read"
  op: "Identity"
  input: "batch_normalization_5_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_5_1/moving_mean"
  input: "batch_normalization_5_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_5_1/moving_variance"
  input: "batch_normalization_5_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/moments/mean"
  op: "Mean"
  input: "global_average_pooling2d_1_1/Mean"
  input: "batch_normalization_5_1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5_1/moments/StopGradient"
  op: "StopGradient"
  input: "batch_normalization_5_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "global_average_pooling2d_1_1/Mean"
  input: "batch_normalization_5_1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/moments/variance"
  op: "Mean"
  input: "batch_normalization_5_1/moments/SquaredDifference"
  input: "batch_normalization_5_1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5_1/moments/Squeeze"
  op: "Squeeze"
  input: "batch_normalization_5_1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/moments/Squeeze_1"
  op: "Squeeze"
  input: "batch_normalization_5_1/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/batchnorm/add"
  op: "Add"
  input: "batch_normalization_5_1/moments/Squeeze_1"
  input: "batch_normalization_5_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_5_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_5_1/batchnorm/Rsqrt"
  input: "batch_normalization_5_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/batchnorm/mul_1"
  op: "Mul"
  input: "global_average_pooling2d_1_1/Mean"
  input: "batch_normalization_5_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_5_1/moments/Squeeze"
  input: "batch_normalization_5_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_5_1/beta/read"
  input: "batch_normalization_5_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_5_1/batchnorm/mul_1"
  input: "batch_normalization_5_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/Shape"
  op: "Shape"
  input: "global_average_pooling2d_1_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_5_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/strided_slice"
  op: "StridedSlice"
  input: "batch_normalization_5_1/Shape"
  input: "batch_normalization_5_1/strided_slice/stack"
  input: "batch_normalization_5_1/strided_slice/stack_1"
  input: "batch_normalization_5_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "batch_normalization_5_1/Rank/packed"
  op: "Pack"
  input: "batch_normalization_5_1/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_normalization_5_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/range"
  op: "Range"
  input: "batch_normalization_5_1/range/start"
  input: "batch_normalization_5_1/Rank"
  input: "batch_normalization_5_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch_normalization_5_1/Prod/input"
  op: "Pack"
  input: "batch_normalization_5_1/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "batch_normalization_5_1/Prod"
  op: "Prod"
  input: "batch_normalization_5_1/Prod/input"
  input: "batch_normalization_5_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_5_1/Cast"
  op: "Cast"
  input: "batch_normalization_5_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_5_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0010000467300415
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/sub"
  op: "Sub"
  input: "batch_normalization_5_1/Cast"
  input: "batch_normalization_5_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/truediv"
  op: "RealDiv"
  input: "batch_normalization_5_1/Cast"
  input: "batch_normalization_5_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/mul"
  op: "Mul"
  input: "batch_normalization_5_1/moments/Squeeze_1"
  input: "batch_normalization_5_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "batch_normalization_5_1/moving_mean/biased"
  input: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_mean/biased/read"
  op: "Identity"
  input: "batch_normalization_5_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "batch_normalization_5_1/moving_mean/local_step"
  input: "batch_normalization_5_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_mean/local_step/read"
  op: "Identity"
  input: "batch_normalization_5_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/sub"
  op: "Sub"
  input: "batch_normalization_5_1/moving_mean/biased/read"
  input: "batch_normalization_5_1/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/mul"
  op: "Mul"
  input: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/sub"
  input: "batch_normalization_5_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/batch_normalization_5_1/moving_mean"
  op: "AssignSub"
  input: "batch_normalization_5_1/moving_mean/biased"
  input: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "batch_normalization_5_1/moving_mean/local_step"
  input: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_5_1/moving_mean/biased"
  input: "^batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/AssignAdd"
  input: "^batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/batch_normalization_5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/AssignAdd"
  input: "^batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/batch_normalization_5_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/sub_1"
  op: "Sub"
  input: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/sub_1/x"
  input: "batch_normalization_5_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/read_1"
  op: "Identity"
  input: "batch_normalization_5_1/moving_mean/local_step"
  input: "^batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/AssignAdd"
  input: "^batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/batch_normalization_5_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/Pow"
  op: "Pow"
  input: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/sub_1"
  input: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/AssignAdd"
  input: "^batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/batch_normalization_5_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/sub_2"
  op: "Sub"
  input: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/sub_2/x"
  input: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/truediv"
  op: "RealDiv"
  input: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/read"
  input: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/sub_3"
  op: "Sub"
  input: "batch_normalization_5_1/moving_mean/read"
  input: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_5_1/moving_mean"
  input: "batch_normalization_5_1/AssignMovingAvg/batch_normalization_5_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "batch_normalization_5_1/moving_variance/biased"
  input: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_variance/biased/read"
  op: "Identity"
  input: "batch_normalization_5_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "batch_normalization_5_1/moving_variance/local_step"
  input: "batch_normalization_5_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5_1/moving_variance/local_step/read"
  op: "Identity"
  input: "batch_normalization_5_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/sub"
  op: "Sub"
  input: "batch_normalization_5_1/moving_variance/biased/read"
  input: "batch_normalization_5_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/mul"
  op: "Mul"
  input: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/sub"
  input: "batch_normalization_5_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/batch_normalization_5_1/moving_variance"
  op: "AssignSub"
  input: "batch_normalization_5_1/moving_variance/biased"
  input: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "batch_normalization_5_1/moving_variance/local_step"
  input: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_5_1/moving_variance/biased"
  input: "^batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/AssignAdd"
  input: "^batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/batch_normalization_5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/AssignAdd"
  input: "^batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/batch_normalization_5_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/sub_1"
  op: "Sub"
  input: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/sub_1/x"
  input: "batch_normalization_5_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/read_1"
  op: "Identity"
  input: "batch_normalization_5_1/moving_variance/local_step"
  input: "^batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/AssignAdd"
  input: "^batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/batch_normalization_5_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/Pow"
  op: "Pow"
  input: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/sub_1"
  input: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/AssignAdd"
  input: "^batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/batch_normalization_5_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/sub_2"
  op: "Sub"
  input: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/sub_2/x"
  input: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/truediv"
  op: "RealDiv"
  input: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/read"
  input: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/sub_3"
  op: "Sub"
  input: "batch_normalization_5_1/moving_variance/read"
  input: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_5_1/moving_variance"
  input: "batch_normalization_5_1/AssignMovingAvg_1/batch_normalization_5_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1_1/keras_learning_phase"
  input: "batch_normalization_1_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/switch_t"
  op: "Identity"
  input: "batch_normalization_5_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/switch_f"
  op: "Identity"
  input: "batch_normalization_5_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/Switch_1"
  op: "Switch"
  input: "batch_normalization_5_1/batchnorm/add_1"
  input: "batch_normalization_5_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/batchnorm/add/y"
  op: "Const"
  input: "^batch_normalization_5_1/cond/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/batchnorm/add"
  op: "Add"
  input: "batch_normalization_5_1/cond/batchnorm/add/Switch"
  input: "batch_normalization_5_1/cond/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/batchnorm/add/Switch"
  op: "Switch"
  input: "batch_normalization_5_1/moving_variance/read"
  input: "batch_normalization_5_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "batch_normalization_5_1/cond/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/batchnorm/mul"
  op: "Mul"
  input: "batch_normalization_5_1/cond/batchnorm/Rsqrt"
  input: "batch_normalization_5_1/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/batchnorm/mul/Switch"
  op: "Switch"
  input: "batch_normalization_5_1/gamma/read"
  input: "batch_normalization_5_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/gamma"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/batchnorm/mul_1"
  op: "Mul"
  input: "batch_normalization_5_1/cond/batchnorm/mul_1/Switch"
  input: "batch_normalization_5_1/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/batchnorm/mul_1/Switch"
  op: "Switch"
  input: "global_average_pooling2d_1_1/Mean"
  input: "batch_normalization_5_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/batchnorm/mul_2"
  op: "Mul"
  input: "batch_normalization_5_1/cond/batchnorm/mul_2/Switch"
  input: "batch_normalization_5_1/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/batchnorm/mul_2/Switch"
  op: "Switch"
  input: "batch_normalization_5_1/moving_mean/read"
  input: "batch_normalization_5_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/batchnorm/sub"
  op: "Sub"
  input: "batch_normalization_5_1/cond/batchnorm/sub/Switch"
  input: "batch_normalization_5_1/cond/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/batchnorm/sub/Switch"
  op: "Switch"
  input: "batch_normalization_5_1/beta/read"
  input: "batch_normalization_5_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/beta"
      }
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/batchnorm/add_1"
  op: "Add"
  input: "batch_normalization_5_1/cond/batchnorm/mul_1"
  input: "batch_normalization_5_1/cond/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "batch_normalization_5_1/cond/Merge"
  op: "Merge"
  input: "batch_normalization_5_1/cond/batchnorm/add_1"
  input: "batch_normalization_5_1/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "dense_1_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "dense_1_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "dense_1_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_1_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1104985
    }
  }
}
node {
  name: "dense_1_1/random_uniform/sub"
  op: "Sub"
  input: "dense_1_1/random_uniform/max"
  input: "dense_1_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1_1/random_uniform/mul"
  op: "Mul"
  input: "dense_1_1/random_uniform/RandomUniform"
  input: "dense_1_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1_1/random_uniform"
  op: "Add"
  input: "dense_1_1/random_uniform/mul"
  input: "dense_1_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_1_1/kernel/Assign"
  op: "Assign"
  input: "dense_1_1/kernel"
  input: "dense_1_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_1_1/kernel/read"
  op: "Identity"
  input: "dense_1_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_1_1/bias/Assign"
  op: "Assign"
  input: "dense_1_1/bias"
  input: "dense_1_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_1_1/bias/read"
  op: "Identity"
  input: "dense_1_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/bias"
      }
    }
  }
}
node {
  name: "dense_1_1/MatMul"
  op: "MatMul"
  input: "batch_normalization_5_1/cond/Merge"
  input: "dense_1_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_1_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_1_1/MatMul"
  input: "dense_1_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_1_1/Relu"
  op: "Relu"
  input: "dense_1_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2_1/cond/Switch"
  op: "Switch"
  input: "batch_normalization_1_1/keras_learning_phase"
  input: "batch_normalization_1_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_2_1/cond/switch_t"
  op: "Identity"
  input: "dropout_2_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_2_1/cond/switch_f"
  op: "Identity"
  input: "dropout_2_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_2_1/cond/pred_id"
  op: "Identity"
  input: "batch_normalization_1_1/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_2_1/cond/mul/y"
  op: "Const"
  input: "^dropout_2_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2_1/cond/mul"
  op: "Mul"
  input: "dropout_2_1/cond/mul/Switch:1"
  input: "dropout_2_1/cond/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2_1/cond/mul/Switch"
  op: "Switch"
  input: "dense_1_1/Relu"
  input: "dropout_2_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/Relu"
      }
    }
  }
}
node {
  name: "dropout_2_1/cond/dropout/rate"
  op: "Const"
  input: "^dropout_2_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_2_1/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_2_1/cond/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_2_1/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_2_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2_1/cond/dropout/sub"
  op: "Sub"
  input: "dropout_2_1/cond/dropout/sub/x"
  input: "dropout_2_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2_1/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_2_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_2_1/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_2_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2_1/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_2_1/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 284635
    }
  }
}
node {
  name: "dropout_2_1/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_2_1/cond/dropout/random_uniform/max"
  input: "dropout_2_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2_1/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_2_1/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_2_1/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2_1/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_2_1/cond/dropout/random_uniform/mul"
  input: "dropout_2_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2_1/cond/dropout/add"
  op: "Add"
  input: "dropout_2_1/cond/dropout/sub"
  input: "dropout_2_1/cond/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2_1/cond/dropout/Floor"
  op: "Floor"
  input: "dropout_2_1/cond/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2_1/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_2_1/cond/mul"
  input: "dropout_2_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2_1/cond/dropout/mul"
  op: "Mul"
  input: "dropout_2_1/cond/dropout/truediv"
  input: "dropout_2_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2_1/cond/Switch_1"
  op: "Switch"
  input: "dense_1_1/Relu"
  input: "dropout_2_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/Relu"
      }
    }
  }
}
node {
  name: "dropout_2_1/cond/Merge"
  op: "Merge"
  input: "dropout_2_1/cond/Switch_1"
  input: "dropout_2_1/cond/dropout/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "y_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.30151134729385376
      }
    }
  }
}
node {
  name: "y_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.30151134729385376
      }
    }
  }
}
node {
  name: "y_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "y_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2296193
    }
  }
}
node {
  name: "y_1/random_uniform/sub"
  op: "Sub"
  input: "y_1/random_uniform/max"
  input: "y_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y_1/random_uniform/mul"
  op: "Mul"
  input: "y_1/random_uniform/RandomUniform"
  input: "y_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y_1/random_uniform"
  op: "Add"
  input: "y_1/random_uniform/mul"
  input: "y_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "y_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "y_1/kernel/Assign"
  op: "Assign"
  input: "y_1/kernel"
  input: "y_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "y_1/kernel/read"
  op: "Identity"
  input: "y_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/kernel"
      }
    }
  }
}
node {
  name: "y_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "y_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "y_1/bias/Assign"
  op: "Assign"
  input: "y_1/bias"
  input: "y_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "y_1/bias/read"
  op: "Identity"
  input: "y_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/bias"
      }
    }
  }
}
node {
  name: "y_1/MatMul"
  op: "MatMul"
  input: "dropout_2_1/cond/Merge"
  input: "y_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "y_1/BiasAdd"
  op: "BiasAdd"
  input: "y_1/MatMul"
  input: "y_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "y_1/Softmax"
  op: "Softmax"
  input: "y_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_227"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "conv2d_1_1/kernel"
  input: "Placeholder_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_228"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_1"
  op: "Assign"
  input: "conv2d_1_1/bias"
  input: "Placeholder_228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_229"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_2"
  op: "Assign"
  input: "conv2d_2_1/kernel"
  input: "Placeholder_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_230"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_3"
  op: "Assign"
  input: "conv2d_2_1/bias"
  input: "Placeholder_230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_231"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_4"
  op: "Assign"
  input: "conv2d_3_1/kernel"
  input: "Placeholder_231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_232"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_5"
  op: "Assign"
  input: "conv2d_3_1/bias"
  input: "Placeholder_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_233"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_6"
  op: "Assign"
  input: "batch_normalization_1_1/gamma"
  input: "Placeholder_233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_234"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_7"
  op: "Assign"
  input: "batch_normalization_1_1/beta"
  input: "Placeholder_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_235"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_8"
  op: "Assign"
  input: "batch_normalization_1_1/moving_mean"
  input: "Placeholder_235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_236"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_9"
  op: "Assign"
  input: "batch_normalization_1_1/moving_variance"
  input: "Placeholder_236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_237"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_10"
  op: "Assign"
  input: "conv2d_4_1/kernel"
  input: "Placeholder_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_238"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_11"
  op: "Assign"
  input: "conv2d_4_1/bias"
  input: "Placeholder_238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_239"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_12"
  op: "Assign"
  input: "conv2d_8_1/kernel"
  input: "Placeholder_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_240"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_13"
  op: "Assign"
  input: "conv2d_8_1/bias"
  input: "Placeholder_240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_241"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_14"
  op: "Assign"
  input: "conv2d_6_1/kernel"
  input: "Placeholder_241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_242"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_15"
  op: "Assign"
  input: "conv2d_6_1/bias"
  input: "Placeholder_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_243"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_16"
  op: "Assign"
  input: "conv2d_9_1/kernel"
  input: "Placeholder_243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_244"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_17"
  op: "Assign"
  input: "conv2d_9_1/bias"
  input: "Placeholder_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_245"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_18"
  op: "Assign"
  input: "conv2d_11_1/kernel"
  input: "Placeholder_245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_246"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_19"
  op: "Assign"
  input: "conv2d_11_1/bias"
  input: "Placeholder_246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_247"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_20"
  op: "Assign"
  input: "conv2d_5_1/kernel"
  input: "Placeholder_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_248"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_21"
  op: "Assign"
  input: "conv2d_5_1/bias"
  input: "Placeholder_248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_249"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_22"
  op: "Assign"
  input: "conv2d_7_1/kernel"
  input: "Placeholder_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_250"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_23"
  op: "Assign"
  input: "conv2d_7_1/bias"
  input: "Placeholder_250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_251"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_24"
  op: "Assign"
  input: "conv2d_10_1/kernel"
  input: "Placeholder_251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_252"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_25"
  op: "Assign"
  input: "conv2d_10_1/bias"
  input: "Placeholder_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_253"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_26"
  op: "Assign"
  input: "batch_normalization_2_1/gamma"
  input: "Placeholder_253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_254"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_27"
  op: "Assign"
  input: "batch_normalization_2_1/beta"
  input: "Placeholder_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_255"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_28"
  op: "Assign"
  input: "batch_normalization_2_1/moving_mean"
  input: "Placeholder_255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_256"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_29"
  op: "Assign"
  input: "batch_normalization_2_1/moving_variance"
  input: "Placeholder_256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_257"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "Assign_30"
  op: "Assign"
  input: "conv2d_12_1/kernel"
  input: "Placeholder_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_258"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "Assign_31"
  op: "Assign"
  input: "conv2d_12_1/bias"
  input: "Placeholder_258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_259"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_32"
  op: "Assign"
  input: "conv2d_14_1/kernel"
  input: "Placeholder_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_260"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_33"
  op: "Assign"
  input: "conv2d_14_1/bias"
  input: "Placeholder_260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_261"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_34"
  op: "Assign"
  input: "conv2d_16_1/kernel"
  input: "Placeholder_261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_262"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_35"
  op: "Assign"
  input: "conv2d_16_1/bias"
  input: "Placeholder_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_263"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_36"
  op: "Assign"
  input: "conv2d_13_1/kernel"
  input: "Placeholder_263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_264"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_37"
  op: "Assign"
  input: "conv2d_13_1/bias"
  input: "Placeholder_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_265"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_38"
  op: "Assign"
  input: "conv2d_15_1/kernel"
  input: "Placeholder_265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_266"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_39"
  op: "Assign"
  input: "conv2d_15_1/bias"
  input: "Placeholder_266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_267"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "Assign_40"
  op: "Assign"
  input: "batch_normalization_3_1/gamma"
  input: "Placeholder_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_268"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "Assign_41"
  op: "Assign"
  input: "batch_normalization_3_1/beta"
  input: "Placeholder_268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_269"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "Assign_42"
  op: "Assign"
  input: "batch_normalization_3_1/moving_mean"
  input: "Placeholder_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_270"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "Assign_43"
  op: "Assign"
  input: "batch_normalization_3_1/moving_variance"
  input: "Placeholder_270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_271"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_44"
  op: "Assign"
  input: "conv2d_17_1/kernel"
  input: "Placeholder_271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_272"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_45"
  op: "Assign"
  input: "conv2d_17_1/bias"
  input: "Placeholder_272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_273"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_46"
  op: "Assign"
  input: "conv2d_19_1/kernel"
  input: "Placeholder_273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_274"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_47"
  op: "Assign"
  input: "conv2d_19_1/bias"
  input: "Placeholder_274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_275"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_48"
  op: "Assign"
  input: "conv2d_18_1/kernel"
  input: "Placeholder_275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_276"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_49"
  op: "Assign"
  input: "conv2d_18_1/bias"
  input: "Placeholder_276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_277"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_50"
  op: "Assign"
  input: "conv2d_20_1/kernel"
  input: "Placeholder_277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_278"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_51"
  op: "Assign"
  input: "conv2d_20_1/bias"
  input: "Placeholder_278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_279"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_52"
  op: "Assign"
  input: "batch_normalization_4_1/gamma"
  input: "Placeholder_279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_280"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_53"
  op: "Assign"
  input: "batch_normalization_4_1/beta"
  input: "Placeholder_280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_281"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_54"
  op: "Assign"
  input: "batch_normalization_4_1/moving_mean"
  input: "Placeholder_281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_282"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_55"
  op: "Assign"
  input: "batch_normalization_4_1/moving_variance"
  input: "Placeholder_282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_283"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_56"
  op: "Assign"
  input: "batch_normalization_5_1/gamma"
  input: "Placeholder_283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_284"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_57"
  op: "Assign"
  input: "batch_normalization_5_1/beta"
  input: "Placeholder_284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_285"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_58"
  op: "Assign"
  input: "batch_normalization_5_1/moving_mean"
  input: "Placeholder_285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_286"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_59"
  op: "Assign"
  input: "batch_normalization_5_1/moving_variance"
  input: "Placeholder_286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_287"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_60"
  op: "Assign"
  input: "dense_1_1/kernel"
  input: "Placeholder_287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_288"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_61"
  op: "Assign"
  input: "dense_1_1/bias"
  input: "Placeholder_288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_289"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Assign_62"
  op: "Assign"
  input: "y_1/kernel"
  input: "Placeholder_289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_290"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Assign_63"
  op: "Assign"
  input: "y_1/bias"
  input: "Placeholder_290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv2d_1_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv2d_1_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "conv2d_2_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "conv2d_2_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "conv2d_3_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "conv2d_3_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "batch_normalization_1_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "batch_normalization_1_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "batch_normalization_1_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "batch_normalization_1_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "batch_normalization_1_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "batch_normalization_1_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "batch_normalization_1_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "batch_normalization_1_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "conv2d_4_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "conv2d_4_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "conv2d_8_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "conv2d_8_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "conv2d_6_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "conv2d_6_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "conv2d_9_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "conv2d_9_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "conv2d_11_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "conv2d_11_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "conv2d_5_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "conv2d_5_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "conv2d_7_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "conv2d_7_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "conv2d_10_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "conv2d_10_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "batch_normalization_2_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "batch_normalization_2_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "batch_normalization_2_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "batch_normalization_2_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "batch_normalization_2_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "batch_normalization_2_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "batch_normalization_2_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "batch_normalization_2_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "conv2d_12_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "conv2d_12_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "conv2d_14_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "conv2d_14_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "conv2d_16_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "conv2d_16_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "conv2d_13_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "conv2d_13_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "conv2d_15_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "conv2d_15_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "batch_normalization_3_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "batch_normalization_3_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "batch_normalization_3_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "batch_normalization_3_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "batch_normalization_3_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "batch_normalization_3_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "batch_normalization_3_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "batch_normalization_3_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "conv2d_17_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "conv2d_17_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "conv2d_19_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "conv2d_19_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "conv2d_18_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "conv2d_18_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "conv2d_20_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "conv2d_20_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "batch_normalization_4_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "batch_normalization_4_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "batch_normalization_4_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "batch_normalization_4_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "batch_normalization_4_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "batch_normalization_4_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "batch_normalization_4_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "batch_normalization_4_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "batch_normalization_5_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "batch_normalization_5_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "batch_normalization_5_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "batch_normalization_5_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "batch_normalization_5_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "batch_normalization_5_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "batch_normalization_5_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "batch_normalization_5_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "dense_1_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "dense_1_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "y_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "y_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^batch_normalization_1_1/beta/Assign"
  input: "^batch_normalization_1_1/gamma/Assign"
  input: "^batch_normalization_1_1/moving_mean/Assign"
  input: "^batch_normalization_1_1/moving_mean/biased/Assign"
  input: "^batch_normalization_1_1/moving_mean/local_step/Assign"
  input: "^batch_normalization_1_1/moving_variance/Assign"
  input: "^batch_normalization_1_1/moving_variance/biased/Assign"
  input: "^batch_normalization_1_1/moving_variance/local_step/Assign"
  input: "^batch_normalization_2_1/beta/Assign"
  input: "^batch_normalization_2_1/gamma/Assign"
  input: "^batch_normalization_2_1/moving_mean/Assign"
  input: "^batch_normalization_2_1/moving_mean/biased/Assign"
  input: "^batch_normalization_2_1/moving_mean/local_step/Assign"
  input: "^batch_normalization_2_1/moving_variance/Assign"
  input: "^batch_normalization_2_1/moving_variance/biased/Assign"
  input: "^batch_normalization_2_1/moving_variance/local_step/Assign"
  input: "^batch_normalization_3_1/beta/Assign"
  input: "^batch_normalization_3_1/gamma/Assign"
  input: "^batch_normalization_3_1/moving_mean/Assign"
  input: "^batch_normalization_3_1/moving_mean/biased/Assign"
  input: "^batch_normalization_3_1/moving_mean/local_step/Assign"
  input: "^batch_normalization_3_1/moving_variance/Assign"
  input: "^batch_normalization_3_1/moving_variance/biased/Assign"
  input: "^batch_normalization_3_1/moving_variance/local_step/Assign"
  input: "^batch_normalization_4_1/beta/Assign"
  input: "^batch_normalization_4_1/gamma/Assign"
  input: "^batch_normalization_4_1/moving_mean/Assign"
  input: "^batch_normalization_4_1/moving_mean/biased/Assign"
  input: "^batch_normalization_4_1/moving_mean/local_step/Assign"
  input: "^batch_normalization_4_1/moving_variance/Assign"
  input: "^batch_normalization_4_1/moving_variance/biased/Assign"
  input: "^batch_normalization_4_1/moving_variance/local_step/Assign"
  input: "^batch_normalization_5_1/beta/Assign"
  input: "^batch_normalization_5_1/gamma/Assign"
  input: "^batch_normalization_5_1/moving_mean/Assign"
  input: "^batch_normalization_5_1/moving_mean/biased/Assign"
  input: "^batch_normalization_5_1/moving_mean/local_step/Assign"
  input: "^batch_normalization_5_1/moving_variance/Assign"
  input: "^batch_normalization_5_1/moving_variance/biased/Assign"
  input: "^batch_normalization_5_1/moving_variance/local_step/Assign"
  input: "^conv2d_10_1/bias/Assign"
  input: "^conv2d_10_1/kernel/Assign"
  input: "^conv2d_11_1/bias/Assign"
  input: "^conv2d_11_1/kernel/Assign"
  input: "^conv2d_12_1/bias/Assign"
  input: "^conv2d_12_1/kernel/Assign"
  input: "^conv2d_13_1/bias/Assign"
  input: "^conv2d_13_1/kernel/Assign"
  input: "^conv2d_14_1/bias/Assign"
  input: "^conv2d_14_1/kernel/Assign"
  input: "^conv2d_15_1/bias/Assign"
  input: "^conv2d_15_1/kernel/Assign"
  input: "^conv2d_16_1/bias/Assign"
  input: "^conv2d_16_1/kernel/Assign"
  input: "^conv2d_17_1/bias/Assign"
  input: "^conv2d_17_1/kernel/Assign"
  input: "^conv2d_18_1/bias/Assign"
  input: "^conv2d_18_1/kernel/Assign"
  input: "^conv2d_19_1/bias/Assign"
  input: "^conv2d_19_1/kernel/Assign"
  input: "^conv2d_1_1/bias/Assign"
  input: "^conv2d_1_1/kernel/Assign"
  input: "^conv2d_20_1/bias/Assign"
  input: "^conv2d_20_1/kernel/Assign"
  input: "^conv2d_2_1/bias/Assign"
  input: "^conv2d_2_1/kernel/Assign"
  input: "^conv2d_3_1/bias/Assign"
  input: "^conv2d_3_1/kernel/Assign"
  input: "^conv2d_4_1/bias/Assign"
  input: "^conv2d_4_1/kernel/Assign"
  input: "^conv2d_5_1/bias/Assign"
  input: "^conv2d_5_1/kernel/Assign"
  input: "^conv2d_6_1/bias/Assign"
  input: "^conv2d_6_1/kernel/Assign"
  input: "^conv2d_7_1/bias/Assign"
  input: "^conv2d_7_1/kernel/Assign"
  input: "^conv2d_8_1/bias/Assign"
  input: "^conv2d_8_1/kernel/Assign"
  input: "^conv2d_9_1/bias/Assign"
  input: "^conv2d_9_1/kernel/Assign"
  input: "^dense_1_1/bias/Assign"
  input: "^dense_1_1/kernel/Assign"
  input: "^y_1/bias/Assign"
  input: "^y_1/kernel/Assign"
}
node {
  name: "Adam_1/iterations/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "Adam_1/iterations"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adam_1/iterations/Assign"
  op: "Assign"
  input: "Adam_1/iterations"
  input: "Adam_1/iterations/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/iterations"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam_1/iterations/read"
  op: "Identity"
  input: "Adam_1/iterations"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/iterations"
      }
    }
  }
}
node {
  name: "Adam_1/lr/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.6806996427476406e-05
      }
    }
  }
}
node {
  name: "Adam_1/lr"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adam_1/lr/Assign"
  op: "Assign"
  input: "Adam_1/lr"
  input: "Adam_1/lr/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/lr"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam_1/lr/read"
  op: "Identity"
  input: "Adam_1/lr"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/lr"
      }
    }
  }
}
node {
  name: "Adam_1/beta_1/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam_1/beta_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adam_1/beta_1/Assign"
  op: "Assign"
  input: "Adam_1/beta_1"
  input: "Adam_1/beta_1/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam_1/beta_1/read"
  op: "Identity"
  input: "Adam_1/beta_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_1"
      }
    }
  }
}
node {
  name: "Adam_1/beta_2/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam_1/beta_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adam_1/beta_2/Assign"
  op: "Assign"
  input: "Adam_1/beta_2"
  input: "Adam_1/beta_2/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam_1/beta_2/read"
  op: "Identity"
  input: "Adam_1/beta_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_2"
      }
    }
  }
}
node {
  name: "Adam_1/decay/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Adam_1/decay"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adam_1/decay/Assign"
  op: "Assign"
  input: "Adam_1/decay"
  input: "Adam_1/decay/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/decay"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam_1/decay/read"
  op: "Identity"
  input: "Adam_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/decay"
      }
    }
  }
}
node {
  name: "y_target_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "y_sample_weights_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "loss_1/y_loss/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss_1/y_loss/Sum"
  op: "Sum"
  input: "y_1/Softmax"
  input: "loss_1/y_loss/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "loss_1/y_loss/truediv"
  op: "RealDiv"
  input: "y_1/Softmax"
  input: "loss_1/y_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/y_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "loss_1/y_loss/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss_1/y_loss/sub"
  op: "Sub"
  input: "loss_1/y_loss/sub/x"
  input: "loss_1/y_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/y_loss/clip_by_value/Minimum"
  op: "Minimum"
  input: "loss_1/y_loss/truediv"
  input: "loss_1/y_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/y_loss/clip_by_value"
  op: "Maximum"
  input: "loss_1/y_loss/clip_by_value/Minimum"
  input: "loss_1/y_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/y_loss/Log"
  op: "Log"
  input: "loss_1/y_loss/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/y_loss/mul"
  op: "Mul"
  input: "y_target_1"
  input: "loss_1/y_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/y_loss/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss_1/y_loss/Sum_1"
  op: "Sum"
  input: "loss_1/y_loss/mul"
  input: "loss_1/y_loss/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/y_loss/Neg"
  op: "Neg"
  input: "loss_1/y_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/y_loss/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss_1/y_loss/Mean"
  op: "Mean"
  input: "loss_1/y_loss/Neg"
  input: "loss_1/y_loss/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/y_loss/mul_1"
  op: "Mul"
  input: "loss_1/y_loss/Mean"
  input: "y_sample_weights_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/y_loss/NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss_1/y_loss/NotEqual"
  op: "NotEqual"
  input: "y_sample_weights_1"
  input: "loss_1/y_loss/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/y_loss/Cast"
  op: "Cast"
  input: "loss_1/y_loss/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/y_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_1/y_loss/Mean_1"
  op: "Mean"
  input: "loss_1/y_loss/Cast"
  input: "loss_1/y_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/y_loss/truediv_1"
  op: "RealDiv"
  input: "loss_1/y_loss/mul_1"
  input: "loss_1/y_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/y_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_1/y_loss/Mean_2"
  op: "Mean"
  input: "loss_1/y_loss/truediv_1"
  input: "loss_1/y_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss_1/mul"
  op: "Mul"
  input: "loss_1/mul/x"
  input: "loss_1/y_loss/Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/acc/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics_1/acc/ArgMax"
  op: "ArgMax"
  input: "y_target_1"
  input: "metrics_1/acc/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics_1/acc/ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics_1/acc/ArgMax_1"
  op: "ArgMax"
  input: "y_1/Softmax"
  input: "metrics_1/acc/ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics_1/acc/Equal"
  op: "Equal"
  input: "metrics_1/acc/ArgMax"
  input: "metrics_1/acc/ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics_1/acc/Cast"
  op: "Cast"
  input: "metrics_1/acc/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_1/acc/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics_1/acc/Mean"
  op: "Mean"
  input: "metrics_1/acc/Cast"
  input: "metrics_1/acc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_1/get_f1/mul"
  op: "Mul"
  input: "y_target_1"
  input: "y_1/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics_1/get_f1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "metrics_1/get_f1/clip_by_value/Minimum"
  op: "Minimum"
  input: "metrics_1/get_f1/mul"
  input: "metrics_1/get_f1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/clip_by_value"
  op: "Maximum"
  input: "metrics_1/get_f1/clip_by_value/Minimum"
  input: "metrics_1/get_f1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/Round"
  op: "Round"
  input: "metrics_1/get_f1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics_1/get_f1/Sum"
  op: "Sum"
  input: "metrics_1/get_f1/Round"
  input: "metrics_1/get_f1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_1/get_f1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics_1/get_f1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "metrics_1/get_f1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "y_target_1"
  input: "metrics_1/get_f1/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/clip_by_value_1"
  op: "Maximum"
  input: "metrics_1/get_f1/clip_by_value_1/Minimum"
  input: "metrics_1/get_f1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/Round_1"
  op: "Round"
  input: "metrics_1/get_f1/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics_1/get_f1/Sum_1"
  op: "Sum"
  input: "metrics_1/get_f1/Round_1"
  input: "metrics_1/get_f1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_1/get_f1/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics_1/get_f1/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "metrics_1/get_f1/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "y_1/Softmax"
  input: "metrics_1/get_f1/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/clip_by_value_2"
  op: "Maximum"
  input: "metrics_1/get_f1/clip_by_value_2/Minimum"
  input: "metrics_1/get_f1/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/Round_2"
  op: "Round"
  input: "metrics_1/get_f1/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics_1/get_f1/Sum_2"
  op: "Sum"
  input: "metrics_1/get_f1/Round_2"
  input: "metrics_1/get_f1/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_1/get_f1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "metrics_1/get_f1/add"
  op: "Add"
  input: "metrics_1/get_f1/Sum_2"
  input: "metrics_1/get_f1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/truediv"
  op: "RealDiv"
  input: "metrics_1/get_f1/Sum"
  input: "metrics_1/get_f1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "metrics_1/get_f1/add_1"
  op: "Add"
  input: "metrics_1/get_f1/Sum_1"
  input: "metrics_1/get_f1/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/truediv_1"
  op: "RealDiv"
  input: "metrics_1/get_f1/Sum"
  input: "metrics_1/get_f1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/mul_1"
  op: "Mul"
  input: "metrics_1/get_f1/truediv"
  input: "metrics_1/get_f1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "metrics_1/get_f1/mul_2"
  op: "Mul"
  input: "metrics_1/get_f1/mul_2/x"
  input: "metrics_1/get_f1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/add_2"
  op: "Add"
  input: "metrics_1/get_f1/truediv"
  input: "metrics_1/get_f1/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "metrics_1/get_f1/add_3"
  op: "Add"
  input: "metrics_1/get_f1/add_2"
  input: "metrics_1/get_f1/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/truediv_2"
  op: "RealDiv"
  input: "metrics_1/get_f1/mul_2"
  input: "metrics_1/get_f1/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_1/get_f1/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "metrics_1/get_f1/Mean"
  op: "Mean"
  input: "metrics_1/get_f1/truediv_2"
  input: "metrics_1/get_f1/Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Fill"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape"
  input: "training_2/Adam/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/mul"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/mul_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/Fill"
  input: "loss_1/y_loss/Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/mul_grad/Mul_1"
  op: "Mul"
  input: "training_2/Adam/gradients/Fill"
  input: "loss_1/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_1/mul_grad/Mul_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Shape"
  op: "Shape"
  input: "loss_1/y_loss/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean_2"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Tile"
  op: "Tile"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Shape_1"
  op: "Shape"
  input: "loss_1/y_loss/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean_2"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Shape_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Prod"
  op: "Prod"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Shape_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean_2"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Prod_1"
  op: "Prod"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Shape_2"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean_2"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Maximum"
  op: "Maximum"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Prod_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/floordiv"
  op: "FloorDiv"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Prod"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Cast"
  op: "Cast"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/truediv"
  op: "RealDiv"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Tile"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/Shape"
  op: "Shape"
  input: "loss_1/y_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/Shape"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/RealDiv"
  op: "RealDiv"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/truediv"
  input: "loss_1/y_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/RealDiv"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/Neg"
  op: "Neg"
  input: "loss_1/y_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/RealDiv_1"
  op: "RealDiv"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/Neg"
  input: "loss_1/y_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/RealDiv_2"
  op: "RealDiv"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/RealDiv_1"
  input: "loss_1/y_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/mul"
  op: "Mul"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_2_grad/truediv"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/mul"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/Sum_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Shape"
  op: "Shape"
  input: "loss_1/y_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Shape_1"
  op: "Shape"
  input: "y_sample_weights_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Shape"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/Reshape"
  input: "y_sample_weights_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Mul"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Mul_1"
  op: "Mul"
  input: "loss_1/y_loss/Mean"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Mul_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Sum_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Shape"
  op: "Shape"
  input: "loss_1/y_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/add"
  op: "Add"
  input: "loss_1/y_loss/Mean/reduction_indices"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/mod"
  op: "FloorMod"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/add"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/range"
  op: "Range"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/range/start"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Size"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Fill"
  op: "Fill"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Shape_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/range"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/mod"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Shape"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Maximum"
  op: "Maximum"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/DynamicStitch"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Shape"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_1_grad/Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Tile"
  op: "Tile"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Shape_2"
  op: "Shape"
  input: "loss_1/y_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Shape_3"
  op: "Shape"
  input: "loss_1/y_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Prod"
  op: "Prod"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Shape_2"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Prod_1"
  op: "Prod"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Shape_3"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Prod_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Prod"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Cast"
  op: "Cast"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Tile"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Neg_grad/Neg"
  op: "Neg"
  input: "training_2/Adam/gradients/loss_1/y_loss/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Neg"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Shape"
  op: "Shape"
  input: "loss_1/y_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/add"
  op: "Add"
  input: "loss_1/y_loss/Sum_1/reduction_indices"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/mod"
  op: "FloorMod"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/add"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/range"
  op: "Range"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/range/start"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Size"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Fill"
  op: "Fill"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Shape_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum_1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/range"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/mod"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Shape"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/DynamicStitch"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Shape"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/Neg_grad/Neg"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Shape"
  op: "Shape"
  input: "y_target_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "loss_1/y_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Shape"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Tile"
  input: "loss_1/y_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Mul"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "y_target_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Mul_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Sum_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "loss_1/y_loss/clip_by_value"
  input: "^training_2/Adam/gradients/loss_1/y_loss/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Log"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Log_grad/mul"
  op: "Mul"
  input: "training_2/Adam/gradients/loss_1/y_loss/mul_grad/Reshape_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/Log_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Log"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Shape"
  op: "Shape"
  input: "loss_1/y_loss/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "training_2/Adam/gradients/loss_1/y_loss/Log_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/zeros"
  op: "Fill"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Shape_2"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "loss_1/y_loss/clip_by_value/Minimum"
  input: "loss_1/y_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Shape"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Select"
  op: "Select"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/GreaterEqual"
  input: "training_2/Adam/gradients/loss_1/y_loss/Log_grad/mul"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Select_1"
  op: "Select"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/GreaterEqual"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/zeros"
  input: "training_2/Adam/gradients/loss_1/y_loss/Log_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Select"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Select_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Sum_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "loss_1/y_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Shape_2"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "loss_1/y_loss/truediv"
  input: "loss_1/y_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Shape"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/LessEqual"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/LessEqual"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/zeros"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Select"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Select_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Sum_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/Shape"
  op: "Shape"
  input: "y_1/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/Shape_1"
  op: "Shape"
  input: "loss_1/y_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/Shape"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Reshape"
  input: "loss_1/y_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/RealDiv"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/Neg"
  op: "Neg"
  input: "y_1/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/Neg"
  input: "loss_1/y_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/RealDiv_1"
  input: "loss_1/y_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/mul"
  op: "Mul"
  input: "training_2/Adam/gradients/loss_1/y_loss/clip_by_value/Minimum_grad/Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/mul"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/Sum_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Shape"
  op: "Shape"
  input: "y_1/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/add"
  op: "Add"
  input: "loss_1/y_loss/Sum/reduction_indices"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/mod"
  op: "FloorMod"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/add"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/range"
  op: "Range"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/range/start"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Size"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Fill"
  op: "Fill"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Shape_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/range"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/mod"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Shape"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Maximum"
  op: "Maximum"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/DynamicStitch"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Shape"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/Reshape_1"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/Sum"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN"
  op: "AddN"
  input: "training_2/Adam/gradients/loss_1/y_loss/truediv_grad/Reshape"
  input: "training_2/Adam/gradients/loss_1/y_loss/Sum_grad/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_1/y_loss/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/y_1/Softmax_grad/mul"
  op: "Mul"
  input: "training_2/Adam/gradients/AddN"
  input: "y_1/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/Softmax"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/y_1/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/Softmax"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/y_1/Softmax_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/y_1/Softmax_grad/mul"
  input: "training_2/Adam/gradients/y_1/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/Softmax"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/y_1/Softmax_grad/sub"
  op: "Sub"
  input: "training_2/Adam/gradients/AddN"
  input: "training_2/Adam/gradients/y_1/Softmax_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/Softmax"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/y_1/Softmax_grad/mul_1"
  op: "Mul"
  input: "training_2/Adam/gradients/y_1/Softmax_grad/sub"
  input: "y_1/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/Softmax"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/y_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/y_1/Softmax_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/y_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_2/Adam/gradients/y_1/Softmax_grad/mul_1"
  input: "y_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/y_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout_2_1/cond/Merge"
  input: "training_2/Adam/gradients/y_1/Softmax_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training_2/Adam/gradients/y_1/MatMul_grad/MatMul"
  input: "dropout_2_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/MatMul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch"
  op: "Switch"
  input: "dense_1_1/Relu"
  input: "dropout_2_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_1"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/Relu"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/Relu"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_1"
  input: "training_2/Adam/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/Relu"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/dropout_2_1/cond/Merge_grad/cond_grad"
  input: "training_2/Adam/gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_2_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_2_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Shape"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/dropout_2_1/cond/Merge_grad/cond_grad:1"
  input: "dropout_2_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Mul"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Sum"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_2_1/cond/dropout/truediv"
  input: "training_2/Adam/gradients/dropout_2_1/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Mul_1"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Sum_1"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/Shape"
  op: "Shape"
  input: "dropout_2_1/cond/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/Shape"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Reshape"
  input: "dropout_2_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/RealDiv"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/Sum"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/Neg"
  op: "Neg"
  input: "dropout_2_1/cond/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/Neg"
  input: "dropout_2_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/RealDiv_1"
  input: "dropout_2_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/mul"
  op: "Mul"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/mul_grad/Reshape"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/mul"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/Sum_1"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/dropout/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Shape"
  op: "Shape"
  input: "dropout_2_1/cond/mul/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Shape"
  input: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/Reshape"
  input: "dropout_2_1/cond/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Mul"
  input: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Sum"
  input: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_2_1/cond/mul/Switch:1"
  input: "training_2/Adam/gradients/dropout_2_1/cond/dropout/truediv_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Mul_1"
  input: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Sum_1"
  input: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_2_1/cond/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_1"
  op: "Switch"
  input: "dense_1_1/Relu"
  input: "dropout_2_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_1"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_2"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/Relu"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_1/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/Relu"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_1"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_2"
  input: "training_2/Adam/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/Relu"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_2_1/cond/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/zeros_1"
  input: "training_2/Adam/gradients/dropout_2_1/cond/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_1"
  op: "AddN"
  input: "training_2/Adam/gradients/dropout_2_1/cond/Switch_1_grad/cond_grad"
  input: "training_2/Adam/gradients/dropout_2_1/cond/mul/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_1_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/AddN_1"
  input: "dense_1_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_1_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/dense_1_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_1_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training_2/Adam/gradients/dense_1_1/Relu_grad/ReluGrad"
  input: "dense_1_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/dense_1_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "batch_normalization_5_1/cond/Merge"
  input: "training_2/Adam/gradients/dense_1_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training_2/Adam/gradients/dense_1_1/MatMul_grad/MatMul"
  input: "batch_normalization_5_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/MatMul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_5_1/cond/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/Shape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/Merge_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/Merge_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/Sum_1"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_2"
  op: "Switch"
  input: "batch_normalization_5_1/batchnorm/add_1"
  input: "batch_normalization_5_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_2"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_3"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_2/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_2"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_3"
  input: "training_2/Adam/gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/zeros_2"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_5_1/cond/batchnorm/mul_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Shape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_5_1/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Mul"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "batch_normalization_5_1/cond/batchnorm/mul_1/Switch"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Mul_1"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Sum_1"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "batch_normalization_5_1/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/Shape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/Switch_1_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/Switch_1_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/Sum_1"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_3"
  op: "Switch"
  input: "global_average_pooling2d_1_1/Mean"
  input: "batch_normalization_5_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_3"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_4"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_3/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_3"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_4"
  input: "training_2/Adam/gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Reshape"
  input: "training_2/Adam/gradients/zeros_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_4"
  op: "Switch"
  input: "batch_normalization_5_1/beta/read"
  input: "batch_normalization_5_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_4"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_5"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_4/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_4"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_5"
  input: "training_2/Adam/gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/sub/Switch_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/add_1_grad/Reshape_1"
  input: "training_2/Adam/gradients/zeros_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/sub_grad/Neg"
  input: "batch_normalization_5_1/cond/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/sub_grad/Neg"
  input: "batch_normalization_5_1/cond/batchnorm/mul_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "global_average_pooling2d_1_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Shape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/Reshape"
  input: "batch_normalization_5_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Mul"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "global_average_pooling2d_1_1/Mean"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Mul_1"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Sum_1"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/sub"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_2"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1_grad/Reshape_1"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/AddN_2"
  input: "batch_normalization_5_1/cond/batchnorm/mul/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training_2/Adam/gradients/AddN_2"
  input: "batch_normalization_5_1/cond/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/cond/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_3"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/sub/Switch_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_1_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/sub_grad/Neg"
  input: "batch_normalization_5_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/sub_grad/Neg"
  input: "batch_normalization_5_1/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/mul_2"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_5"
  op: "Switch"
  input: "batch_normalization_5_1/gamma/read"
  input: "batch_normalization_5_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_5"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_6"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_5/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_5"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_6"
  input: "training_2/Adam/gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_grad/Mul_1"
  input: "training_2/Adam/gradients/zeros_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/Squeeze"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_2_grad/Mul"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/Squeeze"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_4"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Reshape_1"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_2_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/mul_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/AddN_4"
  input: "batch_normalization_5_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "training_2/Adam/gradients/AddN_4"
  input: "batch_normalization_5_1/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "batch_normalization_5_1/batchnorm/Rsqrt"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/Rsqrt"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_5"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul/Switch_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_grad/Shape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_grad/Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_grad/Sum_1"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/batchnorm/add"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/Squeeze_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/add_grad/Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/Squeeze_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Shape"
  op: "Shape"
  input: "batch_normalization_5_1/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/add"
  op: "Add"
  input: "batch_normalization_5_1/moments/variance/reduction_indices"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/mod"
  op: "FloorMod"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/add"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/range"
  op: "Range"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/range/start"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Size"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Fill"
  op: "Fill"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Shape_1"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/range"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/mod"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Shape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/DynamicStitch"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Shape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/Squeeze_1_grad/Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Tile"
  op: "Tile"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Shape_2"
  op: "Shape"
  input: "batch_normalization_5_1/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Prod"
  op: "Prod"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Shape_2"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Prod_1"
  op: "Prod"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Shape_3"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Maximum_1"
  op: "Maximum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Prod_1"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/floordiv_1"
  op: "FloorDiv"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Prod"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Cast"
  op: "Cast"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Tile"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/variance"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "global_average_pooling2d_1_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Shape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/scalar"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "global_average_pooling2d_1_1/Mean"
  input: "batch_normalization_5_1/moments/StopGradient"
  input: "^training_2/Adam/gradients/batch_normalization_5_1/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Mul"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/mul_1"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/mul_1"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/SquaredDifference"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Sum_1"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/SquaredDifference"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Shape"
  op: "Shape"
  input: "global_average_pooling2d_1_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/add"
  op: "Add"
  input: "batch_normalization_5_1/moments/mean/reduction_indices"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/mod"
  op: "FloorMod"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/add"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/range"
  op: "Range"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/range/start"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Size"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Fill"
  op: "Fill"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Shape_1"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/range"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/mod"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Shape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/DynamicStitch"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Shape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/Squeeze_grad/Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Tile"
  op: "Tile"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Shape_2"
  op: "Shape"
  input: "global_average_pooling2d_1_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Prod"
  op: "Prod"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Shape_2"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Prod_1"
  op: "Prod"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Shape_3"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Maximum_1"
  op: "Maximum"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Prod_1"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Prod"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Cast"
  op: "Cast"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Tile"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/moments/mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_6"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_5_1/cond/batchnorm/mul_1/Switch_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_5_1/batchnorm/mul_1_grad/Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/SquaredDifference_grad/Reshape"
  input: "training_2/Adam/gradients/batch_normalization_5_1/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Shape"
  op: "Shape"
  input: "dropout_1_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/add"
  op: "Add"
  input: "global_average_pooling2d_1_1/Mean/reduction_indices"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/mod"
  op: "FloorMod"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/add"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/range"
  op: "Range"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/range/start"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Size"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Fill"
  op: "Fill"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Shape_1"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/range"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/mod"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Shape"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Maximum"
  op: "Maximum"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/DynamicStitch"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Shape"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/AddN_6"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Tile"
  op: "Tile"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Reshape"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Shape_2"
  op: "Shape"
  input: "dropout_1_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Shape_3"
  op: "Shape"
  input: "global_average_pooling2d_1_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Prod"
  op: "Prod"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Shape_2"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Prod_1"
  op: "Prod"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Shape_3"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Prod_1"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Prod"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Cast"
  op: "Cast"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/truediv"
  op: "RealDiv"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Tile"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training_2/Adam/gradients/global_average_pooling2d_1_1/Mean_grad/truediv"
  input: "dropout_1_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_average_pooling2d_1_1/Mean"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_6"
  op: "Switch"
  input: "max_pooling2d_6_1/MaxPool"
  input: "dropout_1_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6_1/MaxPool"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_6"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6_1/MaxPool"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_7"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6_1/MaxPool"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_6/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6_1/MaxPool"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_6"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_7"
  input: "training_2/Adam/gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6_1/MaxPool"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/dropout_1_1/cond/Merge_grad/cond_grad"
  input: "training_2/Adam/gradients/zeros_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6_1/MaxPool"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_1_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_1_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Shape"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/dropout_1_1/cond/Merge_grad/cond_grad:1"
  input: "dropout_1_1/cond/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Mul"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Sum"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_1_1/cond/dropout/truediv"
  input: "training_2/Adam/gradients/dropout_1_1/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Mul_1"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Sum_1"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/Shape"
  op: "Shape"
  input: "dropout_1_1/cond/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/Shape"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Reshape"
  input: "dropout_1_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/RealDiv"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/Sum"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/Neg"
  op: "Neg"
  input: "dropout_1_1/cond/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/Neg"
  input: "dropout_1_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/RealDiv_1"
  input: "dropout_1_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/mul"
  op: "Mul"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/mul_grad/Reshape"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/mul"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/Sum_1"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/dropout/truediv"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Shape"
  op: "Shape"
  input: "dropout_1_1/cond/mul/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Shape"
  input: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Mul"
  op: "Mul"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/Reshape"
  input: "dropout_1_1/cond/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Sum"
  op: "Sum"
  input: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Mul"
  input: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Reshape"
  op: "Reshape"
  input: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Sum"
  input: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_1_1/cond/mul/Switch:1"
  input: "training_2/Adam/gradients/dropout_1_1/cond/dropout/truediv_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Sum_1"
  op: "Sum"
  input: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Mul_1"
  input: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Sum_1"
  input: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dropout_1_1/cond/mul"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_7"
  op: "Switch"
  input: "max_pooling2d_6_1/MaxPool"
  input: "dropout_1_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6_1/MaxPool"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_7"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6_1/MaxPool"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_8"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6_1/MaxPool"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_7/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6_1/MaxPool"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_7"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_8"
  input: "training_2/Adam/gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6_1/MaxPool"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/dropout_1_1/cond/mul/Switch_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/zeros_7"
  input: "training_2/Adam/gradients/dropout_1_1/cond/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6_1/MaxPool"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_7"
  op: "AddN"
  input: "training_2/Adam/gradients/dropout_1_1/cond/Switch_1_grad/cond_grad"
  input: "training_2/Adam/gradients/dropout_1_1/cond/mul/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6_1/MaxPool"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/max_pooling2d_6_1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "activation_4_1/Relu"
  input: "max_pooling2d_6_1/MaxPool"
  input: "training_2/Adam/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6_1/MaxPool"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/activation_4_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/max_pooling2d_6_1/MaxPool_grad/MaxPoolGrad"
  input: "activation_4_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_4_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_4_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training_2/Adam/gradients/activation_4_1/Relu_grad/ReluGrad"
  input: "batch_normalization_4_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_4_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like"
  op: "ZerosLike"
  input: "batch_normalization_4_1/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/cond/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "batch_normalization_4_1/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/cond/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "batch_normalization_4_1/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/cond/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "batch_normalization_4_1/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/cond/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_4_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training_2/Adam/gradients/batch_normalization_4_1/cond/Merge_grad/cond_grad"
  input: "batch_normalization_4_1/cond/FusedBatchNorm/Switch"
  input: "batch_normalization_4_1/cond/FusedBatchNorm/Switch_1"
  input: "batch_normalization_4_1/cond/FusedBatchNorm/Switch_3"
  input: "batch_normalization_4_1/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/cond/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_8"
  op: "Switch"
  input: "batch_normalization_4_1/FusedBatchNorm"
  input: "batch_normalization_4_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_8"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_9"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_8/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_8"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_9"
  input: "training_2/Adam/gradients/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_4_1/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/zeros_8"
  input: "training_2/Adam/gradients/batch_normalization_4_1/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_9"
  op: "Switch"
  input: "concatenate_3_1/concat"
  input: "batch_normalization_4_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_9"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_10"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3_1/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_9/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_9"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3_1/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_9"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_10"
  input: "training_2/Adam/gradients/zeros_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3_1/concat"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_4_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/batch_normalization_4_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "training_2/Adam/gradients/zeros_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_10"
  op: "Switch"
  input: "batch_normalization_4_1/gamma/read"
  input: "batch_normalization_4_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_10"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_11"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_10/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_10"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_10"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_11"
  input: "training_2/Adam/gradients/zeros_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_4_1/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/batch_normalization_4_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "training_2/Adam/gradients/zeros_10"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_11"
  op: "Switch"
  input: "batch_normalization_4_1/beta/read"
  input: "batch_normalization_4_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_11"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_12"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_11/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_11"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_11"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_12"
  input: "training_2/Adam/gradients/zeros_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_4_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/batch_normalization_4_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "training_2/Adam/gradients/zeros_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "batch_normalization_4_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "batch_normalization_4_1/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "batch_normalization_4_1/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "batch_normalization_4_1/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_4_1/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training_2/Adam/gradients/batch_normalization_4_1/cond/Switch_1_grad/cond_grad"
  input: "concatenate_3_1/concat"
  input: "batch_normalization_4_1/gamma/read"
  input: "batch_normalization_4_1/FusedBatchNorm:3"
  input: "batch_normalization_4_1/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_8"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_4_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_4_1/FusedBatchNorm_grad/FusedBatchNormGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_3_1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3_1/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_3_1/concat_grad/mod"
  op: "FloorMod"
  input: "concatenate_3_1/concat/axis"
  input: "training_2/Adam/gradients/concatenate_3_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_3_1/concat_grad/Shape"
  op: "Shape"
  input: "conv2d_18_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3_1/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_3_1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_18_1/Relu"
  input: "conv2d_20_1/Relu"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3_1/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_3_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "training_2/Adam/gradients/concatenate_3_1/concat_grad/mod"
  input: "training_2/Adam/gradients/concatenate_3_1/concat_grad/ShapeN"
  input: "training_2/Adam/gradients/concatenate_3_1/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_3_1/concat_grad/Slice"
  op: "Slice"
  input: "training_2/Adam/gradients/AddN_8"
  input: "training_2/Adam/gradients/concatenate_3_1/concat_grad/ConcatOffset"
  input: "training_2/Adam/gradients/concatenate_3_1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_3_1/concat_grad/Slice_1"
  op: "Slice"
  input: "training_2/Adam/gradients/AddN_8"
  input: "training_2/Adam/gradients/concatenate_3_1/concat_grad/ConcatOffset:1"
  input: "training_2/Adam/gradients/concatenate_3_1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_3_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_9"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_4_1/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_4_1/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_10"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_4_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_4_1/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_18_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/concatenate_3_1/concat_grad/Slice"
  input: "conv2d_18_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_20_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/concatenate_3_1/concat_grad/Slice_1"
  input: "conv2d_20_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_18_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_18_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_20_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_20_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_18_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_5_1/MaxPool"
  input: "conv2d_18_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_18_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_18_1/convolution_grad/ShapeN"
  input: "conv2d_18_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_18_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_18_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_5_1/MaxPool"
  input: "training_2/Adam/gradients/conv2d_18_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_18_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_20_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_19_1/Relu"
  input: "conv2d_20_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_20_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_20_1/convolution_grad/ShapeN"
  input: "conv2d_20_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_20_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_20_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_19_1/Relu"
  input: "training_2/Adam/gradients/conv2d_20_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_20_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_19_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/conv2d_20_1/convolution_grad/Conv2DBackpropInput"
  input: "conv2d_19_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_19_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_19_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_19_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_5_1/MaxPool"
  input: "conv2d_19_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_19_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_19_1/convolution_grad/ShapeN"
  input: "conv2d_19_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_19_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_19_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_5_1/MaxPool"
  input: "training_2/Adam/gradients/conv2d_19_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_19_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_11"
  op: "AddN"
  input: "training_2/Adam/gradients/conv2d_18_1/convolution_grad/Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_19_1/convolution_grad/Conv2DBackpropInput"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18_1/convolution"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/max_pooling2d_5_1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_17_1/Relu"
  input: "max_pooling2d_5_1/MaxPool"
  input: "training_2/Adam/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_5_1/MaxPool"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_17_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/max_pooling2d_5_1/MaxPool_grad/MaxPoolGrad"
  input: "conv2d_17_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_17_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_17_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_17_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "activation_3_1/Relu"
  input: "conv2d_17_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_17_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_17_1/convolution_grad/ShapeN"
  input: "conv2d_17_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_17_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_17_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "activation_3_1/Relu"
  input: "training_2/Adam/gradients/conv2d_17_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_17_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/activation_3_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/conv2d_17_1/convolution_grad/Conv2DBackpropInput"
  input: "activation_3_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_3_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_3_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training_2/Adam/gradients/activation_3_1/Relu_grad/ReluGrad"
  input: "batch_normalization_3_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_3_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "batch_normalization_3_1/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/cond/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_9"
  op: "ZerosLike"
  input: "batch_normalization_3_1/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/cond/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_10"
  op: "ZerosLike"
  input: "batch_normalization_3_1/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/cond/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_11"
  op: "ZerosLike"
  input: "batch_normalization_3_1/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/cond/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_3_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training_2/Adam/gradients/batch_normalization_3_1/cond/Merge_grad/cond_grad"
  input: "batch_normalization_3_1/cond/FusedBatchNorm/Switch"
  input: "batch_normalization_3_1/cond/FusedBatchNorm/Switch_1"
  input: "batch_normalization_3_1/cond/FusedBatchNorm/Switch_3"
  input: "batch_normalization_3_1/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/cond/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_12"
  op: "Switch"
  input: "batch_normalization_3_1/FusedBatchNorm"
  input: "batch_normalization_3_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_12"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_13"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_12/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_12"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_12"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_13"
  input: "training_2/Adam/gradients/zeros_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_3_1/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/zeros_12"
  input: "training_2/Adam/gradients/batch_normalization_3_1/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_13"
  op: "Switch"
  input: "concatenate_2_1/concat"
  input: "batch_normalization_3_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_13"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_14"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2_1/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_13/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_13"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2_1/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_13"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_14"
  input: "training_2/Adam/gradients/zeros_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2_1/concat"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_3_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/batch_normalization_3_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "training_2/Adam/gradients/zeros_13"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_14"
  op: "Switch"
  input: "batch_normalization_3_1/gamma/read"
  input: "batch_normalization_3_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_14"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_15"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_14:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_14/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_14"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_14"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_15"
  input: "training_2/Adam/gradients/zeros_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_3_1/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/batch_normalization_3_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "training_2/Adam/gradients/zeros_14"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_15"
  op: "Switch"
  input: "batch_normalization_3_1/beta/read"
  input: "batch_normalization_3_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_15"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_16"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_15:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_15/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_15"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_15"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_16"
  input: "training_2/Adam/gradients/zeros_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_3_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/batch_normalization_3_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "training_2/Adam/gradients/zeros_15"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_12"
  op: "ZerosLike"
  input: "batch_normalization_3_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_13"
  op: "ZerosLike"
  input: "batch_normalization_3_1/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_14"
  op: "ZerosLike"
  input: "batch_normalization_3_1/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_15"
  op: "ZerosLike"
  input: "batch_normalization_3_1/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_3_1/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training_2/Adam/gradients/batch_normalization_3_1/cond/Switch_1_grad/cond_grad"
  input: "concatenate_2_1/concat"
  input: "batch_normalization_3_1/gamma/read"
  input: "batch_normalization_3_1/FusedBatchNorm:3"
  input: "batch_normalization_3_1/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_12"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_3_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_3_1/FusedBatchNorm_grad/FusedBatchNormGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_2_1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2_1/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_2_1/concat_grad/mod"
  op: "FloorMod"
  input: "concatenate_2_1/concat/axis"
  input: "training_2/Adam/gradients/concatenate_2_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_2_1/concat_grad/Shape"
  op: "Shape"
  input: "conv2d_13_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2_1/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_2_1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_13_1/Relu"
  input: "conv2d_15_1/Relu"
  input: "max_pooling2d_4_1/MaxPool"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2_1/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_2_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "training_2/Adam/gradients/concatenate_2_1/concat_grad/mod"
  input: "training_2/Adam/gradients/concatenate_2_1/concat_grad/ShapeN"
  input: "training_2/Adam/gradients/concatenate_2_1/concat_grad/ShapeN:1"
  input: "training_2/Adam/gradients/concatenate_2_1/concat_grad/ShapeN:2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_2_1/concat_grad/Slice"
  op: "Slice"
  input: "training_2/Adam/gradients/AddN_12"
  input: "training_2/Adam/gradients/concatenate_2_1/concat_grad/ConcatOffset"
  input: "training_2/Adam/gradients/concatenate_2_1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_2_1/concat_grad/Slice_1"
  op: "Slice"
  input: "training_2/Adam/gradients/AddN_12"
  input: "training_2/Adam/gradients/concatenate_2_1/concat_grad/ConcatOffset:1"
  input: "training_2/Adam/gradients/concatenate_2_1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_2_1/concat_grad/Slice_2"
  op: "Slice"
  input: "training_2/Adam/gradients/AddN_12"
  input: "training_2/Adam/gradients/concatenate_2_1/concat_grad/ConcatOffset:2"
  input: "training_2/Adam/gradients/concatenate_2_1/concat_grad/ShapeN:2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_2_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_13"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_3_1/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_3_1/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_14"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_3_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_3_1/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_13_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/concatenate_2_1/concat_grad/Slice"
  input: "conv2d_13_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_15_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/concatenate_2_1/concat_grad/Slice_1"
  input: "conv2d_15_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/max_pooling2d_4_1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_16_1/Relu"
  input: "max_pooling2d_4_1/MaxPool"
  input: "training_2/Adam/gradients/concatenate_2_1/concat_grad/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_4_1/MaxPool"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_13_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_13_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_15_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_15_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_16_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/max_pooling2d_4_1/MaxPool_grad/MaxPoolGrad"
  input: "conv2d_16_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_13_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_3_1/MaxPool"
  input: "conv2d_13_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_13_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_13_1/convolution_grad/ShapeN"
  input: "conv2d_13_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_13_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_13_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_3_1/MaxPool"
  input: "training_2/Adam/gradients/conv2d_13_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_13_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_15_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_14_1/Relu"
  input: "conv2d_15_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_15_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_15_1/convolution_grad/ShapeN"
  input: "conv2d_15_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_15_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_15_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_14_1/Relu"
  input: "training_2/Adam/gradients/conv2d_15_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_15_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_16_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_16_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_14_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/conv2d_15_1/convolution_grad/Conv2DBackpropInput"
  input: "conv2d_14_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_16_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_3_1/MaxPool"
  input: "conv2d_16_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_16_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_16_1/convolution_grad/ShapeN"
  input: "conv2d_16_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_16_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_16_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_3_1/MaxPool"
  input: "training_2/Adam/gradients/conv2d_16_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_16_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_14_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_14_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_14_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_3_1/MaxPool"
  input: "conv2d_14_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_14_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_14_1/convolution_grad/ShapeN"
  input: "conv2d_14_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_14_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_14_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_3_1/MaxPool"
  input: "training_2/Adam/gradients/conv2d_14_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_14_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_15"
  op: "AddN"
  input: "training_2/Adam/gradients/conv2d_13_1/convolution_grad/Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_16_1/convolution_grad/Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_14_1/convolution_grad/Conv2DBackpropInput"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13_1/convolution"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/max_pooling2d_3_1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_12_1/Relu"
  input: "max_pooling2d_3_1/MaxPool"
  input: "training_2/Adam/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_3_1/MaxPool"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_12_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/max_pooling2d_3_1/MaxPool_grad/MaxPoolGrad"
  input: "conv2d_12_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_12_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_12_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_12_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "activation_2_1/Relu"
  input: "conv2d_12_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_12_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_12_1/convolution_grad/ShapeN"
  input: "conv2d_12_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_12_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_12_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "activation_2_1/Relu"
  input: "training_2/Adam/gradients/conv2d_12_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_12_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/activation_2_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/conv2d_12_1/convolution_grad/Conv2DBackpropInput"
  input: "activation_2_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_2_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_2_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training_2/Adam/gradients/activation_2_1/Relu_grad/ReluGrad"
  input: "batch_normalization_2_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_2_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_16"
  op: "ZerosLike"
  input: "batch_normalization_2_1/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/cond/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_17"
  op: "ZerosLike"
  input: "batch_normalization_2_1/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/cond/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_18"
  op: "ZerosLike"
  input: "batch_normalization_2_1/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/cond/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_19"
  op: "ZerosLike"
  input: "batch_normalization_2_1/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/cond/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_2_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training_2/Adam/gradients/batch_normalization_2_1/cond/Merge_grad/cond_grad"
  input: "batch_normalization_2_1/cond/FusedBatchNorm/Switch"
  input: "batch_normalization_2_1/cond/FusedBatchNorm/Switch_1"
  input: "batch_normalization_2_1/cond/FusedBatchNorm/Switch_3"
  input: "batch_normalization_2_1/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/cond/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_16"
  op: "Switch"
  input: "batch_normalization_2_1/FusedBatchNorm"
  input: "batch_normalization_2_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_16"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_17"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_16/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_16"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_16"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_17"
  input: "training_2/Adam/gradients/zeros_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_2_1/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/zeros_16"
  input: "training_2/Adam/gradients/batch_normalization_2_1/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_17"
  op: "Switch"
  input: "concatenate_1_1/concat"
  input: "batch_normalization_2_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_17"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_18"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_17:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_17/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_17"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_17"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_18"
  input: "training_2/Adam/gradients/zeros_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_2_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/batch_normalization_2_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "training_2/Adam/gradients/zeros_17"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_18"
  op: "Switch"
  input: "batch_normalization_2_1/gamma/read"
  input: "batch_normalization_2_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_18"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_19"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_18:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_18/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_18"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_18"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_19"
  input: "training_2/Adam/gradients/zeros_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_2_1/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/batch_normalization_2_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "training_2/Adam/gradients/zeros_18"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_19"
  op: "Switch"
  input: "batch_normalization_2_1/beta/read"
  input: "batch_normalization_2_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_19"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_20"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_19:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_19/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_19"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_19"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_20"
  input: "training_2/Adam/gradients/zeros_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_2_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/batch_normalization_2_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "training_2/Adam/gradients/zeros_19"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_20"
  op: "ZerosLike"
  input: "batch_normalization_2_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_21"
  op: "ZerosLike"
  input: "batch_normalization_2_1/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_22"
  op: "ZerosLike"
  input: "batch_normalization_2_1/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_23"
  op: "ZerosLike"
  input: "batch_normalization_2_1/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_2_1/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training_2/Adam/gradients/batch_normalization_2_1/cond/Switch_1_grad/cond_grad"
  input: "concatenate_1_1/concat"
  input: "batch_normalization_2_1/gamma/read"
  input: "batch_normalization_2_1/FusedBatchNorm:3"
  input: "batch_normalization_2_1/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_16"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_2_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_2_1/FusedBatchNorm_grad/FusedBatchNormGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_1_1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_1_1/concat_grad/mod"
  op: "FloorMod"
  input: "concatenate_1_1/concat/axis"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_1_1/concat_grad/Shape"
  op: "Shape"
  input: "conv2d_5_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_1_1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_5_1/Relu"
  input: "conv2d_7_1/Relu"
  input: "conv2d_10_1/Relu"
  input: "max_pooling2d_2_1/MaxPool"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_1_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/mod"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/ShapeN"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/ShapeN:1"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/ShapeN:2"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/ShapeN:3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_1_1/concat_grad/Slice"
  op: "Slice"
  input: "training_2/Adam/gradients/AddN_16"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/ConcatOffset"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_1_1/concat_grad/Slice_1"
  op: "Slice"
  input: "training_2/Adam/gradients/AddN_16"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/ConcatOffset:1"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_1_1/concat_grad/Slice_2"
  op: "Slice"
  input: "training_2/Adam/gradients/AddN_16"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/ConcatOffset:2"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/ShapeN:2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/concatenate_1_1/concat_grad/Slice_3"
  op: "Slice"
  input: "training_2/Adam/gradients/AddN_16"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/ConcatOffset:3"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/ShapeN:3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1_1/concat"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_17"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_2_1/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_2_1/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_18"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_2_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_2_1/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_5_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/Slice"
  input: "conv2d_5_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_7_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/Slice_1"
  input: "conv2d_7_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_10_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/Slice_2"
  input: "conv2d_10_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/max_pooling2d_2_1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_11_1/Relu"
  input: "max_pooling2d_2_1/MaxPool"
  input: "training_2/Adam/gradients/concatenate_1_1/concat_grad/Slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_2_1/MaxPool"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_5_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_5_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_7_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_7_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_10_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_10_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_11_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/max_pooling2d_2_1/MaxPool_grad/MaxPoolGrad"
  input: "conv2d_11_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_5_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_1_1/MaxPool"
  input: "conv2d_5_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_5_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_5_1/convolution_grad/ShapeN"
  input: "conv2d_5_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_5_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_5_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_1_1/MaxPool"
  input: "training_2/Adam/gradients/conv2d_5_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_5_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_7_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_6_1/Relu"
  input: "conv2d_7_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_7_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_7_1/convolution_grad/ShapeN"
  input: "conv2d_7_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_7_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_7_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_6_1/Relu"
  input: "training_2/Adam/gradients/conv2d_7_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_7_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_10_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_9_1/Relu"
  input: "conv2d_10_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_10_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_10_1/convolution_grad/ShapeN"
  input: "conv2d_10_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_10_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_10_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_9_1/Relu"
  input: "training_2/Adam/gradients/conv2d_10_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_10_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_11_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_11_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_6_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/conv2d_7_1/convolution_grad/Conv2DBackpropInput"
  input: "conv2d_6_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_9_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/conv2d_10_1/convolution_grad/Conv2DBackpropInput"
  input: "conv2d_9_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_11_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_1_1/MaxPool"
  input: "conv2d_11_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_11_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_11_1/convolution_grad/ShapeN"
  input: "conv2d_11_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_11_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_11_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_1_1/MaxPool"
  input: "training_2/Adam/gradients/conv2d_11_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_11_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_6_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_6_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_9_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_9_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_6_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_1_1/MaxPool"
  input: "conv2d_6_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_6_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_6_1/convolution_grad/ShapeN"
  input: "conv2d_6_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_6_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_6_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_1_1/MaxPool"
  input: "training_2/Adam/gradients/conv2d_6_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_6_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_9_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_8_1/Relu"
  input: "conv2d_9_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_9_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_9_1/convolution_grad/ShapeN"
  input: "conv2d_9_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_9_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_9_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_8_1/Relu"
  input: "training_2/Adam/gradients/conv2d_9_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_9_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_8_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/conv2d_9_1/convolution_grad/Conv2DBackpropInput"
  input: "conv2d_8_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_8_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_8_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_8_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_1_1/MaxPool"
  input: "conv2d_8_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_8_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_8_1/convolution_grad/ShapeN"
  input: "conv2d_8_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_8_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_8_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_1_1/MaxPool"
  input: "training_2/Adam/gradients/conv2d_8_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_8_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_19"
  op: "AddN"
  input: "training_2/Adam/gradients/conv2d_5_1/convolution_grad/Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_11_1/convolution_grad/Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_6_1/convolution_grad/Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_8_1/convolution_grad/Conv2DBackpropInput"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5_1/convolution"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/max_pooling2d_1_1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_4_1/Relu"
  input: "max_pooling2d_1_1/MaxPool"
  input: "training_2/Adam/gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_1_1/MaxPool"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_4_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/max_pooling2d_1_1/MaxPool_grad/MaxPoolGrad"
  input: "conv2d_4_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_4_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_4_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_4_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "activation_1_1/Relu"
  input: "conv2d_4_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_4_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_4_1/convolution_grad/ShapeN"
  input: "conv2d_4_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_4_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_4_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "activation_1_1/Relu"
  input: "training_2/Adam/gradients/conv2d_4_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_4_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/activation_1_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/conv2d_4_1/convolution_grad/Conv2DBackpropInput"
  input: "activation_1_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_1_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_1_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "training_2/Adam/gradients/activation_1_1/Relu_grad/ReluGrad"
  input: "batch_normalization_1_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_1_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_24"
  op: "ZerosLike"
  input: "batch_normalization_1_1/cond/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/cond/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_25"
  op: "ZerosLike"
  input: "batch_normalization_1_1/cond/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/cond/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_26"
  op: "ZerosLike"
  input: "batch_normalization_1_1/cond/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/cond/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_27"
  op: "ZerosLike"
  input: "batch_normalization_1_1/cond/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/cond/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_1_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training_2/Adam/gradients/batch_normalization_1_1/cond/Merge_grad/cond_grad"
  input: "batch_normalization_1_1/cond/FusedBatchNorm/Switch"
  input: "batch_normalization_1_1/cond/FusedBatchNorm/Switch_1"
  input: "batch_normalization_1_1/cond/FusedBatchNorm/Switch_3"
  input: "batch_normalization_1_1/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/cond/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_20"
  op: "Switch"
  input: "batch_normalization_1_1/FusedBatchNorm"
  input: "batch_normalization_1_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_20"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_21"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_20/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_20"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_20"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_21"
  input: "training_2/Adam/gradients/zeros_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_1_1/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/zeros_20"
  input: "training_2/Adam/gradients/batch_normalization_1_1/cond/Merge_grad/cond_grad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_21"
  op: "Switch"
  input: "conv2d_3_1/Relu"
  input: "batch_normalization_1_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_21"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_22"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_21:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/Relu"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_21/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_21"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/Relu"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_21"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_22"
  input: "training_2/Adam/gradients/zeros_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/Relu"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_1_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/batch_normalization_1_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "training_2/Adam/gradients/zeros_21"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_22"
  op: "Switch"
  input: "batch_normalization_1_1/gamma/read"
  input: "batch_normalization_1_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_22"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_23"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_22:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/gamma"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_22/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_22"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_22"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_23"
  input: "training_2/Adam/gradients/zeros_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_1_1/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/batch_normalization_1_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "training_2/Adam/gradients/zeros_22"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Switch_23"
  op: "Switch"
  input: "batch_normalization_1_1/beta/read"
  input: "batch_normalization_1_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Identity_23"
  op: "Identity"
  input: "training_2/Adam/gradients/Switch_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/Shape_24"
  op: "Shape"
  input: "training_2/Adam/gradients/Switch_23:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/beta"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_23/Const"
  op: "Const"
  input: "^training_2/Adam/gradients/Identity_23"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_23"
  op: "Fill"
  input: "training_2/Adam/gradients/Shape_24"
  input: "training_2/Adam/gradients/zeros_23/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_1_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "training_2/Adam/gradients/batch_normalization_1_1/cond/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "training_2/Adam/gradients/zeros_23"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_28"
  op: "ZerosLike"
  input: "batch_normalization_1_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_29"
  op: "ZerosLike"
  input: "batch_normalization_1_1/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_30"
  op: "ZerosLike"
  input: "batch_normalization_1_1/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/zeros_like_31"
  op: "ZerosLike"
  input: "batch_normalization_1_1/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/batch_normalization_1_1/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "training_2/Adam/gradients/batch_normalization_1_1/cond/Switch_1_grad/cond_grad"
  input: "conv2d_3_1/Relu"
  input: "batch_normalization_1_1/gamma/read"
  input: "batch_normalization_1_1/FusedBatchNorm:3"
  input: "batch_normalization_1_1/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/FusedBatchNorm"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_20"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_1_1/cond/FusedBatchNorm/Switch_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_1_1/FusedBatchNorm_grad/FusedBatchNormGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_3_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/AddN_20"
  input: "conv2d_3_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_21"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_1_1/cond/FusedBatchNorm/Switch_1_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_1_1/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/gamma"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/AddN_22"
  op: "AddN"
  input: "training_2/Adam/gradients/batch_normalization_1_1/cond/FusedBatchNorm/Switch_2_grad/cond_grad"
  input: "training_2/Adam/gradients/batch_normalization_1_1/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/beta"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_3_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_3_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_3_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_2_1/Relu"
  input: "conv2d_3_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_3_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_3_1/convolution_grad/ShapeN"
  input: "conv2d_3_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_3_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_3_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_2_1/Relu"
  input: "training_2/Adam/gradients/conv2d_3_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_3_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_2_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/conv2d_3_1/convolution_grad/Conv2DBackpropInput"
  input: "conv2d_2_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_2_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_2_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_2_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_1_1/Relu"
  input: "conv2d_2_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_2_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_2_1/convolution_grad/ShapeN"
  input: "conv2d_2_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_2_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_2_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_1_1/Relu"
  input: "training_2/Adam/gradients/conv2d_2_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_2_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_1_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training_2/Adam/gradients/conv2d_2_1/convolution_grad/Conv2DBackpropInput"
  input: "conv2d_1_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1_1/Relu"
      }
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_1_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training_2/Adam/gradients/conv2d_1_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_1_1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "input_1_1"
  input: "conv2d_1_1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1_1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_1_1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training_2/Adam/gradients/conv2d_1_1/convolution_grad/ShapeN"
  input: "conv2d_1_1/kernel/read"
  input: "training_2/Adam/gradients/conv2d_1_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/gradients/conv2d_1_1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "input_1_1"
  input: "training_2/Adam/gradients/conv2d_1_1/convolution_grad/ShapeN:1"
  input: "training_2/Adam/gradients/conv2d_1_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1_1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/AssignAdd/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/AssignAdd"
  op: "AssignAdd"
  input: "Adam_1/iterations"
  input: "training_2/Adam/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/iterations"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/Cast"
  op: "Cast"
  input: "Adam_1/iterations/read"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "training_2/Adam/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/add"
  op: "Add"
  input: "training_2/Adam/Cast"
  input: "training_2/Adam/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Pow"
  op: "Pow"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub"
  op: "Sub"
  input: "training_2/Adam/sub/x"
  input: "training_2/Adam/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value/Minimum"
  op: "Minimum"
  input: "training_2/Adam/sub"
  input: "training_2/Adam/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value/Minimum"
  input: "training_2/Adam/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Pow_1"
  op: "Pow"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_1"
  op: "Sub"
  input: "training_2/Adam/sub_1/x"
  input: "training_2/Adam/Pow_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv"
  op: "RealDiv"
  input: "training_2/Adam/Sqrt"
  input: "training_2/Adam/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul"
  op: "Mul"
  input: "Adam_1/lr/read"
  input: "training_2/Adam/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros"
  op: "Fill"
  input: "training_2/Adam/zeros/shape_as_tensor"
  input: "training_2/Adam/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable"
  input: "training_2/Adam/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable/read"
  op: "Identity"
  input: "training_2/Adam/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_1/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_1"
  input: "training_2/Adam/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_1/read"
  op: "Identity"
  input: "training_2/Adam/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_1"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_2"
  op: "Fill"
  input: "training_2/Adam/zeros_2/shape_as_tensor"
  input: "training_2/Adam/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_2/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_2"
  input: "training_2/Adam/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_2/read"
  op: "Identity"
  input: "training_2/Adam/Variable_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_2"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_3"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_3/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_3"
  input: "training_2/Adam/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_3/read"
  op: "Identity"
  input: "training_2/Adam/Variable_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_3"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_4/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_4"
  op: "Fill"
  input: "training_2/Adam/zeros_4/shape_as_tensor"
  input: "training_2/Adam/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_4"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_4/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_4"
  input: "training_2/Adam/zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_4/read"
  op: "Identity"
  input: "training_2/Adam/Variable_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_4"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_5"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_5/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_5"
  input: "training_2/Adam/zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_5/read"
  op: "Identity"
  input: "training_2/Adam/Variable_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_5"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_6"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_6/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_6"
  input: "training_2/Adam/zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_6"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_6/read"
  op: "Identity"
  input: "training_2/Adam/Variable_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_6"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_7"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_7/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_7"
  input: "training_2/Adam/zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_7"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_7/read"
  op: "Identity"
  input: "training_2/Adam/Variable_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_7"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_8/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_8/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_8"
  op: "Fill"
  input: "training_2/Adam/zeros_8/shape_as_tensor"
  input: "training_2/Adam/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_8"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_8/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_8"
  input: "training_2/Adam/zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_8"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_8/read"
  op: "Identity"
  input: "training_2/Adam/Variable_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_8"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_9"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_9/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_9"
  input: "training_2/Adam/zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_9"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_9/read"
  op: "Identity"
  input: "training_2/Adam/Variable_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_9"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_10/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_10/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_10"
  op: "Fill"
  input: "training_2/Adam/zeros_10/shape_as_tensor"
  input: "training_2/Adam/zeros_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_10"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_10/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_10"
  input: "training_2/Adam/zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_10"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_10/read"
  op: "Identity"
  input: "training_2/Adam/Variable_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_10"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_11"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_11/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_11"
  input: "training_2/Adam/zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_11"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_11/read"
  op: "Identity"
  input: "training_2/Adam/Variable_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_11"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_12/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_12"
  op: "Fill"
  input: "training_2/Adam/zeros_12/shape_as_tensor"
  input: "training_2/Adam/zeros_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_12"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_12/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_12"
  input: "training_2/Adam/zeros_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_12"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_12/read"
  op: "Identity"
  input: "training_2/Adam/Variable_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_12"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_13"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_13/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_13"
  input: "training_2/Adam/zeros_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_13"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_13/read"
  op: "Identity"
  input: "training_2/Adam/Variable_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_13"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_14/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_14/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_14"
  op: "Fill"
  input: "training_2/Adam/zeros_14/shape_as_tensor"
  input: "training_2/Adam/zeros_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_14"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_14/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_14"
  input: "training_2/Adam/zeros_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_14"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_14/read"
  op: "Identity"
  input: "training_2/Adam/Variable_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_14"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_15"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_15/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_15"
  input: "training_2/Adam/zeros_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_15"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_15/read"
  op: "Identity"
  input: "training_2/Adam/Variable_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_15"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_16/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_16/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_16"
  op: "Fill"
  input: "training_2/Adam/zeros_16/shape_as_tensor"
  input: "training_2/Adam/zeros_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_16"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_16/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_16"
  input: "training_2/Adam/zeros_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_16"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_16/read"
  op: "Identity"
  input: "training_2/Adam/Variable_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_16"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_17"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_17/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_17"
  input: "training_2/Adam/zeros_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_17"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_17/read"
  op: "Identity"
  input: "training_2/Adam/Variable_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_17"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_18/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_18/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_18"
  op: "Fill"
  input: "training_2/Adam/zeros_18/shape_as_tensor"
  input: "training_2/Adam/zeros_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_18"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_18/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_18"
  input: "training_2/Adam/zeros_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_18"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_18/read"
  op: "Identity"
  input: "training_2/Adam/Variable_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_18"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_19"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_19/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_19"
  input: "training_2/Adam/zeros_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_19"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_19/read"
  op: "Identity"
  input: "training_2/Adam/Variable_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_19"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_20/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_20/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_20"
  op: "Fill"
  input: "training_2/Adam/zeros_20/shape_as_tensor"
  input: "training_2/Adam/zeros_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_20"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_20/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_20"
  input: "training_2/Adam/zeros_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_20"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_20/read"
  op: "Identity"
  input: "training_2/Adam/Variable_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_20"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_21"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_21/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_21"
  input: "training_2/Adam/zeros_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_21"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_21/read"
  op: "Identity"
  input: "training_2/Adam/Variable_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_21"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_22/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_22/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_22"
  op: "Fill"
  input: "training_2/Adam/zeros_22/shape_as_tensor"
  input: "training_2/Adam/zeros_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_22"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_22/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_22"
  input: "training_2/Adam/zeros_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_22"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_22/read"
  op: "Identity"
  input: "training_2/Adam/Variable_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_22"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_23"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_23/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_23"
  input: "training_2/Adam/zeros_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_23"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_23/read"
  op: "Identity"
  input: "training_2/Adam/Variable_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_23"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_24"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_24/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_24"
  input: "training_2/Adam/zeros_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_24"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_24/read"
  op: "Identity"
  input: "training_2/Adam/Variable_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_24"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_25"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_25/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_25"
  input: "training_2/Adam/zeros_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_25"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_25/read"
  op: "Identity"
  input: "training_2/Adam/Variable_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_25"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_26/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_26/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_26"
  op: "Fill"
  input: "training_2/Adam/zeros_26/shape_as_tensor"
  input: "training_2/Adam/zeros_26/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_26"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_26/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_26"
  input: "training_2/Adam/zeros_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_26"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_26/read"
  op: "Identity"
  input: "training_2/Adam/Variable_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_26"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_27"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_27/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_27"
  input: "training_2/Adam/zeros_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_27"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_27/read"
  op: "Identity"
  input: "training_2/Adam/Variable_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_27"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_28"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_28/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_28"
  input: "training_2/Adam/zeros_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_28"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_28/read"
  op: "Identity"
  input: "training_2/Adam/Variable_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_28"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_29"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_29/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_29"
  input: "training_2/Adam/zeros_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_29"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_29/read"
  op: "Identity"
  input: "training_2/Adam/Variable_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_29"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_30"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_30/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_30"
  input: "training_2/Adam/zeros_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_30"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_30/read"
  op: "Identity"
  input: "training_2/Adam/Variable_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_30"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_31"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_31/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_31"
  input: "training_2/Adam/zeros_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_31"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_31/read"
  op: "Identity"
  input: "training_2/Adam/Variable_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_31"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_32"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_32/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_32"
  input: "training_2/Adam/zeros_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_32"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_32/read"
  op: "Identity"
  input: "training_2/Adam/Variable_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_32"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_33"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_33/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_33"
  input: "training_2/Adam/zeros_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_33"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_33/read"
  op: "Identity"
  input: "training_2/Adam/Variable_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_33"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_34/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_34/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_34"
  op: "Fill"
  input: "training_2/Adam/zeros_34/shape_as_tensor"
  input: "training_2/Adam/zeros_34/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_34"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_34/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_34"
  input: "training_2/Adam/zeros_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_34"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_34/read"
  op: "Identity"
  input: "training_2/Adam/Variable_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_34"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_35"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_35/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_35"
  input: "training_2/Adam/zeros_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_35"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_35/read"
  op: "Identity"
  input: "training_2/Adam/Variable_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_35"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_36"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_36/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_36"
  input: "training_2/Adam/zeros_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_36"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_36/read"
  op: "Identity"
  input: "training_2/Adam/Variable_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_36"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_37"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_37"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_37/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_37"
  input: "training_2/Adam/zeros_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_37"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_37/read"
  op: "Identity"
  input: "training_2/Adam/Variable_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_37"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_38/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0000\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_38/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_38"
  op: "Fill"
  input: "training_2/Adam/zeros_38/shape_as_tensor"
  input: "training_2/Adam/zeros_38/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_38"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_38/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_38"
  input: "training_2/Adam/zeros_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_38"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_38/read"
  op: "Identity"
  input: "training_2/Adam/Variable_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_38"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_39"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_39/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_39"
  input: "training_2/Adam/zeros_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_39"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_39/read"
  op: "Identity"
  input: "training_2/Adam/Variable_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_39"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_40"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_40"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_40/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_40"
  input: "training_2/Adam/zeros_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_40"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_40/read"
  op: "Identity"
  input: "training_2/Adam/Variable_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_40"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_41"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_41/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_41"
  input: "training_2/Adam/zeros_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_41"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_41/read"
  op: "Identity"
  input: "training_2/Adam/Variable_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_41"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_42"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_42/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_42"
  input: "training_2/Adam/zeros_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_42"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_42/read"
  op: "Identity"
  input: "training_2/Adam/Variable_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_42"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_43"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_43"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_43/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_43"
  input: "training_2/Adam/zeros_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_43"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_43/read"
  op: "Identity"
  input: "training_2/Adam/Variable_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_43"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_44/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_44/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_44"
  op: "Fill"
  input: "training_2/Adam/zeros_44/shape_as_tensor"
  input: "training_2/Adam/zeros_44/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_44"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_44/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_44"
  input: "training_2/Adam/zeros_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_44"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_44/read"
  op: "Identity"
  input: "training_2/Adam/Variable_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_44"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_45"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_45/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_45"
  input: "training_2/Adam/zeros_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_45"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_45/read"
  op: "Identity"
  input: "training_2/Adam/Variable_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_45"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_46"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_46"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_46/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_46"
  input: "training_2/Adam/zeros_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_46"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_46/read"
  op: "Identity"
  input: "training_2/Adam/Variable_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_46"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_47"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_47/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_47"
  input: "training_2/Adam/zeros_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_47"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_47/read"
  op: "Identity"
  input: "training_2/Adam/Variable_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_47"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_48"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_48/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_48"
  input: "training_2/Adam/zeros_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_48"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_48/read"
  op: "Identity"
  input: "training_2/Adam/Variable_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_48"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_49"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_49"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_49/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_49"
  input: "training_2/Adam/zeros_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_49"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_49/read"
  op: "Identity"
  input: "training_2/Adam/Variable_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_49"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_50/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_50/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_50"
  op: "Fill"
  input: "training_2/Adam/zeros_50/shape_as_tensor"
  input: "training_2/Adam/zeros_50/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_50"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_50/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_50"
  input: "training_2/Adam/zeros_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_50"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_50/read"
  op: "Identity"
  input: "training_2/Adam/Variable_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_50"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_51"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_51/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_51"
  input: "training_2/Adam/zeros_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_51"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_51/read"
  op: "Identity"
  input: "training_2/Adam/Variable_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_51"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_52"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_52"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_52/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_52"
  input: "training_2/Adam/zeros_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_52"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_52/read"
  op: "Identity"
  input: "training_2/Adam/Variable_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_52"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_53"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_53/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_53"
  input: "training_2/Adam/zeros_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_53"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_53/read"
  op: "Identity"
  input: "training_2/Adam/Variable_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_53"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_54/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_54/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_54"
  op: "Fill"
  input: "training_2/Adam/zeros_54/shape_as_tensor"
  input: "training_2/Adam/zeros_54/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_54"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_54/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_54"
  input: "training_2/Adam/zeros_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_54"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_54/read"
  op: "Identity"
  input: "training_2/Adam/Variable_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_54"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_55"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_55"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_55/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_55"
  input: "training_2/Adam/zeros_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_55"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_55/read"
  op: "Identity"
  input: "training_2/Adam/Variable_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_55"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_56/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_56/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_56"
  op: "Fill"
  input: "training_2/Adam/zeros_56/shape_as_tensor"
  input: "training_2/Adam/zeros_56/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_56"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_56/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_56"
  input: "training_2/Adam/zeros_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_56"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_56/read"
  op: "Identity"
  input: "training_2/Adam/Variable_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_56"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_57"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_57/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_57"
  input: "training_2/Adam/zeros_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_57"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_57/read"
  op: "Identity"
  input: "training_2/Adam/Variable_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_57"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_58/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_58/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_58"
  op: "Fill"
  input: "training_2/Adam/zeros_58/shape_as_tensor"
  input: "training_2/Adam/zeros_58/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_58"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_58/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_58"
  input: "training_2/Adam/zeros_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_58"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_58/read"
  op: "Identity"
  input: "training_2/Adam/Variable_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_58"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_59"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_59/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_59"
  input: "training_2/Adam/zeros_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_59"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_59/read"
  op: "Identity"
  input: "training_2/Adam/Variable_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_59"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_60"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_60/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_60"
  input: "training_2/Adam/zeros_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_60"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_60/read"
  op: "Identity"
  input: "training_2/Adam/Variable_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_60"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_61"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_61"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_61/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_61"
  input: "training_2/Adam/zeros_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_61"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_61/read"
  op: "Identity"
  input: "training_2/Adam/Variable_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_61"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_62/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_62/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_62"
  op: "Fill"
  input: "training_2/Adam/zeros_62/shape_as_tensor"
  input: "training_2/Adam/zeros_62/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_62"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_62/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_62"
  input: "training_2/Adam/zeros_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_62"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_62/read"
  op: "Identity"
  input: "training_2/Adam/Variable_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_62"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_63"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_63/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_63"
  input: "training_2/Adam/zeros_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_63"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_63/read"
  op: "Identity"
  input: "training_2/Adam/Variable_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_63"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_64/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_64/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_64"
  op: "Fill"
  input: "training_2/Adam/zeros_64/shape_as_tensor"
  input: "training_2/Adam/zeros_64/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_64"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_64/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_64"
  input: "training_2/Adam/zeros_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_64"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_64/read"
  op: "Identity"
  input: "training_2/Adam/Variable_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_64"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_65"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_65/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_65"
  input: "training_2/Adam/zeros_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_65"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_65/read"
  op: "Identity"
  input: "training_2/Adam/Variable_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_65"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_66/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_66/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_66"
  op: "Fill"
  input: "training_2/Adam/zeros_66/shape_as_tensor"
  input: "training_2/Adam/zeros_66/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_66"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_66/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_66"
  input: "training_2/Adam/zeros_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_66"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_66/read"
  op: "Identity"
  input: "training_2/Adam/Variable_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_66"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_67"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_67"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_67/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_67"
  input: "training_2/Adam/zeros_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_67"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_67/read"
  op: "Identity"
  input: "training_2/Adam/Variable_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_67"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_68/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_68/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_68"
  op: "Fill"
  input: "training_2/Adam/zeros_68/shape_as_tensor"
  input: "training_2/Adam/zeros_68/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_68"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_68/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_68"
  input: "training_2/Adam/zeros_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_68"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_68/read"
  op: "Identity"
  input: "training_2/Adam/Variable_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_68"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_69"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_69/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_69"
  input: "training_2/Adam/zeros_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_69"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_69/read"
  op: "Identity"
  input: "training_2/Adam/Variable_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_69"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_70/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_70/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_70"
  op: "Fill"
  input: "training_2/Adam/zeros_70/shape_as_tensor"
  input: "training_2/Adam/zeros_70/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_70"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_70/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_70"
  input: "training_2/Adam/zeros_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_70"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_70/read"
  op: "Identity"
  input: "training_2/Adam/Variable_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_70"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_71"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_71/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_71"
  input: "training_2/Adam/zeros_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_71"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_71/read"
  op: "Identity"
  input: "training_2/Adam/Variable_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_71"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_72/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_72/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_72"
  op: "Fill"
  input: "training_2/Adam/zeros_72/shape_as_tensor"
  input: "training_2/Adam/zeros_72/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_72"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_72/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_72"
  input: "training_2/Adam/zeros_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_72"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_72/read"
  op: "Identity"
  input: "training_2/Adam/Variable_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_72"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_73"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_73"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_73/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_73"
  input: "training_2/Adam/zeros_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_73"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_73/read"
  op: "Identity"
  input: "training_2/Adam/Variable_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_73"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_74/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_74/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_74"
  op: "Fill"
  input: "training_2/Adam/zeros_74/shape_as_tensor"
  input: "training_2/Adam/zeros_74/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_74"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_74/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_74"
  input: "training_2/Adam/zeros_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_74"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_74/read"
  op: "Identity"
  input: "training_2/Adam/Variable_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_74"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_75"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_75/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_75"
  input: "training_2/Adam/zeros_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_75"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_75/read"
  op: "Identity"
  input: "training_2/Adam/Variable_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_75"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_76/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_76/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_76"
  op: "Fill"
  input: "training_2/Adam/zeros_76/shape_as_tensor"
  input: "training_2/Adam/zeros_76/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_76"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_76/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_76"
  input: "training_2/Adam/zeros_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_76"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_76/read"
  op: "Identity"
  input: "training_2/Adam/Variable_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_76"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_77"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_77/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_77"
  input: "training_2/Adam/zeros_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_77"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_77/read"
  op: "Identity"
  input: "training_2/Adam/Variable_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_77"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_78"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_78/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_78"
  input: "training_2/Adam/zeros_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_78"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_78/read"
  op: "Identity"
  input: "training_2/Adam/Variable_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_78"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_79"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_79"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_79/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_79"
  input: "training_2/Adam/zeros_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_79"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_79/read"
  op: "Identity"
  input: "training_2/Adam/Variable_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_79"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_80/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_80/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_80"
  op: "Fill"
  input: "training_2/Adam/zeros_80/shape_as_tensor"
  input: "training_2/Adam/zeros_80/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_80"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_80/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_80"
  input: "training_2/Adam/zeros_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_80"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_80/read"
  op: "Identity"
  input: "training_2/Adam/Variable_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_80"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_81"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_81/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_81"
  input: "training_2/Adam/zeros_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_81"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_81/read"
  op: "Identity"
  input: "training_2/Adam/Variable_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_81"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_82"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_82"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_82/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_82"
  input: "training_2/Adam/zeros_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_82"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_82/read"
  op: "Identity"
  input: "training_2/Adam/Variable_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_82"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_83"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_83/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_83"
  input: "training_2/Adam/zeros_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_83"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_83/read"
  op: "Identity"
  input: "training_2/Adam/Variable_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_83"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_84"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_84/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_84"
  input: "training_2/Adam/zeros_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_84"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_84/read"
  op: "Identity"
  input: "training_2/Adam/Variable_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_84"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_85"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_85"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_85/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_85"
  input: "training_2/Adam/zeros_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_85"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_85/read"
  op: "Identity"
  input: "training_2/Adam/Variable_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_85"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 48
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_86"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_86/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_86"
  input: "training_2/Adam/zeros_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_86"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_86/read"
  op: "Identity"
  input: "training_2/Adam/Variable_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_86"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_87"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_87/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_87"
  input: "training_2/Adam/zeros_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_87"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_87/read"
  op: "Identity"
  input: "training_2/Adam/Variable_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_87"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_88/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_88/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_88"
  op: "Fill"
  input: "training_2/Adam/zeros_88/shape_as_tensor"
  input: "training_2/Adam/zeros_88/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_88"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_88/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_88"
  input: "training_2/Adam/zeros_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_88"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_88/read"
  op: "Identity"
  input: "training_2/Adam/Variable_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_88"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_89"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_89/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_89"
  input: "training_2/Adam/zeros_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_89"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_89/read"
  op: "Identity"
  input: "training_2/Adam/Variable_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_89"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_90"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_90/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_90"
  input: "training_2/Adam/zeros_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_90"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_90/read"
  op: "Identity"
  input: "training_2/Adam/Variable_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_90"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_91"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_91"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_91/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_91"
  input: "training_2/Adam/zeros_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_91"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_91/read"
  op: "Identity"
  input: "training_2/Adam/Variable_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_91"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_92/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\0000\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_92/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_92"
  op: "Fill"
  input: "training_2/Adam/zeros_92/shape_as_tensor"
  input: "training_2/Adam/zeros_92/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_92"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_92/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_92"
  input: "training_2/Adam/zeros_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_92"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_92/read"
  op: "Identity"
  input: "training_2/Adam/Variable_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_92"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_93"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_93/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_93"
  input: "training_2/Adam/zeros_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_93"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_93/read"
  op: "Identity"
  input: "training_2/Adam/Variable_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_93"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_94"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_94"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_94/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_94"
  input: "training_2/Adam/zeros_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_94"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_94/read"
  op: "Identity"
  input: "training_2/Adam/Variable_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_94"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_95"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_95/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_95"
  input: "training_2/Adam/zeros_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_95"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_95/read"
  op: "Identity"
  input: "training_2/Adam/Variable_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_95"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_96"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_96/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_96"
  input: "training_2/Adam/zeros_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_96"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_96/read"
  op: "Identity"
  input: "training_2/Adam/Variable_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_96"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_97"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_97"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_97/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_97"
  input: "training_2/Adam/zeros_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_97"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_97/read"
  op: "Identity"
  input: "training_2/Adam/Variable_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_97"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_98/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_98/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_98"
  op: "Fill"
  input: "training_2/Adam/zeros_98/shape_as_tensor"
  input: "training_2/Adam/zeros_98/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_98"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_98/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_98"
  input: "training_2/Adam/zeros_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_98"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_98/read"
  op: "Identity"
  input: "training_2/Adam/Variable_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_98"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_99"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_99/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_99"
  input: "training_2/Adam/zeros_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_99"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_99/read"
  op: "Identity"
  input: "training_2/Adam/Variable_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_99"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_100"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_100"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_100/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_100"
  input: "training_2/Adam/zeros_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_100"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_100/read"
  op: "Identity"
  input: "training_2/Adam/Variable_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_100"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_101"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_101/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_101"
  input: "training_2/Adam/zeros_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_101"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_101/read"
  op: "Identity"
  input: "training_2/Adam/Variable_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_101"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_102"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_102/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_102"
  input: "training_2/Adam/zeros_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_102"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_102/read"
  op: "Identity"
  input: "training_2/Adam/Variable_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_102"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_103"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_103"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_103/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_103"
  input: "training_2/Adam/zeros_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_103"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_103/read"
  op: "Identity"
  input: "training_2/Adam/Variable_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_103"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_104/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_104/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_104"
  op: "Fill"
  input: "training_2/Adam/zeros_104/shape_as_tensor"
  input: "training_2/Adam/zeros_104/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_104"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_104/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_104"
  input: "training_2/Adam/zeros_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_104"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_104/read"
  op: "Identity"
  input: "training_2/Adam/Variable_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_104"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_105"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_105/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_105"
  input: "training_2/Adam/zeros_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_105"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_105/read"
  op: "Identity"
  input: "training_2/Adam/Variable_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_105"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_106"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_106"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_106/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_106"
  input: "training_2/Adam/zeros_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_106"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_106/read"
  op: "Identity"
  input: "training_2/Adam/Variable_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_106"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Variable_107"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_107/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_107"
  input: "training_2/Adam/zeros_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_107"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_107/read"
  op: "Identity"
  input: "training_2/Adam/Variable_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_107"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_108/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_108/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_108"
  op: "Fill"
  input: "training_2/Adam/zeros_108/shape_as_tensor"
  input: "training_2/Adam/zeros_108/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_108"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_108/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_108"
  input: "training_2/Adam/zeros_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_108"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_108/read"
  op: "Identity"
  input: "training_2/Adam/Variable_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_108"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_109/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_109/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_109"
  op: "Fill"
  input: "training_2/Adam/zeros_109/shape_as_tensor"
  input: "training_2/Adam/zeros_109/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_109"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_109/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_109"
  input: "training_2/Adam/zeros_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_109"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_109/read"
  op: "Identity"
  input: "training_2/Adam/Variable_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_109"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_110/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_110/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_110"
  op: "Fill"
  input: "training_2/Adam/zeros_110/shape_as_tensor"
  input: "training_2/Adam/zeros_110/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_110"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_110/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_110"
  input: "training_2/Adam/zeros_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_110"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_110/read"
  op: "Identity"
  input: "training_2/Adam/Variable_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_110"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_111/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_111/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_111"
  op: "Fill"
  input: "training_2/Adam/zeros_111/shape_as_tensor"
  input: "training_2/Adam/zeros_111/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_111"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_111/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_111"
  input: "training_2/Adam/zeros_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_111"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_111/read"
  op: "Identity"
  input: "training_2/Adam/Variable_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_111"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_112/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_112/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_112"
  op: "Fill"
  input: "training_2/Adam/zeros_112/shape_as_tensor"
  input: "training_2/Adam/zeros_112/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_112"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_112/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_112"
  input: "training_2/Adam/zeros_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_112"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_112/read"
  op: "Identity"
  input: "training_2/Adam/Variable_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_112"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_113/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_113/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_113"
  op: "Fill"
  input: "training_2/Adam/zeros_113/shape_as_tensor"
  input: "training_2/Adam/zeros_113/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_113"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_113/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_113"
  input: "training_2/Adam/zeros_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_113"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_113/read"
  op: "Identity"
  input: "training_2/Adam/Variable_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_113"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_114/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_114/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_114"
  op: "Fill"
  input: "training_2/Adam/zeros_114/shape_as_tensor"
  input: "training_2/Adam/zeros_114/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_114"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_114/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_114"
  input: "training_2/Adam/zeros_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_114"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_114/read"
  op: "Identity"
  input: "training_2/Adam/Variable_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_114"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_115/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_115/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_115"
  op: "Fill"
  input: "training_2/Adam/zeros_115/shape_as_tensor"
  input: "training_2/Adam/zeros_115/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_115"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_115/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_115"
  input: "training_2/Adam/zeros_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_115"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_115/read"
  op: "Identity"
  input: "training_2/Adam/Variable_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_115"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_116/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_116/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_116"
  op: "Fill"
  input: "training_2/Adam/zeros_116/shape_as_tensor"
  input: "training_2/Adam/zeros_116/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_116"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_116/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_116"
  input: "training_2/Adam/zeros_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_116"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_116/read"
  op: "Identity"
  input: "training_2/Adam/Variable_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_116"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_117/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_117/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_117"
  op: "Fill"
  input: "training_2/Adam/zeros_117/shape_as_tensor"
  input: "training_2/Adam/zeros_117/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_117"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_117/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_117"
  input: "training_2/Adam/zeros_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_117"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_117/read"
  op: "Identity"
  input: "training_2/Adam/Variable_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_117"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_118/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_118/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_118"
  op: "Fill"
  input: "training_2/Adam/zeros_118/shape_as_tensor"
  input: "training_2/Adam/zeros_118/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_118"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_118/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_118"
  input: "training_2/Adam/zeros_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_118"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_118/read"
  op: "Identity"
  input: "training_2/Adam/Variable_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_118"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_119/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_119/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_119"
  op: "Fill"
  input: "training_2/Adam/zeros_119/shape_as_tensor"
  input: "training_2/Adam/zeros_119/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_119"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_119/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_119"
  input: "training_2/Adam/zeros_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_119"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_119/read"
  op: "Identity"
  input: "training_2/Adam/Variable_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_119"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_120/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_120/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_120"
  op: "Fill"
  input: "training_2/Adam/zeros_120/shape_as_tensor"
  input: "training_2/Adam/zeros_120/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_120"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_120/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_120"
  input: "training_2/Adam/zeros_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_120"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_120/read"
  op: "Identity"
  input: "training_2/Adam/Variable_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_120"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_121/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_121/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_121"
  op: "Fill"
  input: "training_2/Adam/zeros_121/shape_as_tensor"
  input: "training_2/Adam/zeros_121/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_121"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_121/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_121"
  input: "training_2/Adam/zeros_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_121"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_121/read"
  op: "Identity"
  input: "training_2/Adam/Variable_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_121"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_122/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_122/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_122"
  op: "Fill"
  input: "training_2/Adam/zeros_122/shape_as_tensor"
  input: "training_2/Adam/zeros_122/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_122"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_122/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_122"
  input: "training_2/Adam/zeros_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_122"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_122/read"
  op: "Identity"
  input: "training_2/Adam/Variable_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_122"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_123/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_123/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_123"
  op: "Fill"
  input: "training_2/Adam/zeros_123/shape_as_tensor"
  input: "training_2/Adam/zeros_123/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_123"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_123/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_123"
  input: "training_2/Adam/zeros_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_123"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_123/read"
  op: "Identity"
  input: "training_2/Adam/Variable_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_123"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_124/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_124/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_124"
  op: "Fill"
  input: "training_2/Adam/zeros_124/shape_as_tensor"
  input: "training_2/Adam/zeros_124/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_124"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_124/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_124"
  input: "training_2/Adam/zeros_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_124"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_124/read"
  op: "Identity"
  input: "training_2/Adam/Variable_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_124"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_125/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_125/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_125"
  op: "Fill"
  input: "training_2/Adam/zeros_125/shape_as_tensor"
  input: "training_2/Adam/zeros_125/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_125"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_125/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_125"
  input: "training_2/Adam/zeros_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_125"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_125/read"
  op: "Identity"
  input: "training_2/Adam/Variable_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_125"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_126/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_126/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_126"
  op: "Fill"
  input: "training_2/Adam/zeros_126/shape_as_tensor"
  input: "training_2/Adam/zeros_126/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_126"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_126/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_126"
  input: "training_2/Adam/zeros_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_126"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_126/read"
  op: "Identity"
  input: "training_2/Adam/Variable_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_126"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_127/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_127/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_127"
  op: "Fill"
  input: "training_2/Adam/zeros_127/shape_as_tensor"
  input: "training_2/Adam/zeros_127/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_127"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_127/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_127"
  input: "training_2/Adam/zeros_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_127"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_127/read"
  op: "Identity"
  input: "training_2/Adam/Variable_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_127"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_128/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_128/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_128"
  op: "Fill"
  input: "training_2/Adam/zeros_128/shape_as_tensor"
  input: "training_2/Adam/zeros_128/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_128"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_128/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_128"
  input: "training_2/Adam/zeros_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_128"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_128/read"
  op: "Identity"
  input: "training_2/Adam/Variable_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_128"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_129/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_129/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_129"
  op: "Fill"
  input: "training_2/Adam/zeros_129/shape_as_tensor"
  input: "training_2/Adam/zeros_129/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_129"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_129/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_129"
  input: "training_2/Adam/zeros_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_129"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_129/read"
  op: "Identity"
  input: "training_2/Adam/Variable_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_129"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_130/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_130/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_130"
  op: "Fill"
  input: "training_2/Adam/zeros_130/shape_as_tensor"
  input: "training_2/Adam/zeros_130/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_130"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_130/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_130"
  input: "training_2/Adam/zeros_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_130"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_130/read"
  op: "Identity"
  input: "training_2/Adam/Variable_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_130"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_131/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_131/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_131"
  op: "Fill"
  input: "training_2/Adam/zeros_131/shape_as_tensor"
  input: "training_2/Adam/zeros_131/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_131"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_131/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_131"
  input: "training_2/Adam/zeros_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_131"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_131/read"
  op: "Identity"
  input: "training_2/Adam/Variable_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_131"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_132/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_132/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_132"
  op: "Fill"
  input: "training_2/Adam/zeros_132/shape_as_tensor"
  input: "training_2/Adam/zeros_132/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_132"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_132/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_132"
  input: "training_2/Adam/zeros_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_132"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_132/read"
  op: "Identity"
  input: "training_2/Adam/Variable_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_132"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_133/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_133/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_133"
  op: "Fill"
  input: "training_2/Adam/zeros_133/shape_as_tensor"
  input: "training_2/Adam/zeros_133/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_133"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_133/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_133"
  input: "training_2/Adam/zeros_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_133"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_133/read"
  op: "Identity"
  input: "training_2/Adam/Variable_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_133"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_134/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_134/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_134"
  op: "Fill"
  input: "training_2/Adam/zeros_134/shape_as_tensor"
  input: "training_2/Adam/zeros_134/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_134"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_134/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_134"
  input: "training_2/Adam/zeros_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_134"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_134/read"
  op: "Identity"
  input: "training_2/Adam/Variable_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_134"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_135/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_135/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_135"
  op: "Fill"
  input: "training_2/Adam/zeros_135/shape_as_tensor"
  input: "training_2/Adam/zeros_135/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_135"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_135/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_135"
  input: "training_2/Adam/zeros_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_135"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_135/read"
  op: "Identity"
  input: "training_2/Adam/Variable_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_135"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_136/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_136/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_136"
  op: "Fill"
  input: "training_2/Adam/zeros_136/shape_as_tensor"
  input: "training_2/Adam/zeros_136/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_136"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_136/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_136"
  input: "training_2/Adam/zeros_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_136"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_136/read"
  op: "Identity"
  input: "training_2/Adam/Variable_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_136"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_137/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_137/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_137"
  op: "Fill"
  input: "training_2/Adam/zeros_137/shape_as_tensor"
  input: "training_2/Adam/zeros_137/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_137"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_137/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_137"
  input: "training_2/Adam/zeros_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_137"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_137/read"
  op: "Identity"
  input: "training_2/Adam/Variable_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_137"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_138/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_138/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_138"
  op: "Fill"
  input: "training_2/Adam/zeros_138/shape_as_tensor"
  input: "training_2/Adam/zeros_138/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_138"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_138/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_138"
  input: "training_2/Adam/zeros_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_138"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_138/read"
  op: "Identity"
  input: "training_2/Adam/Variable_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_138"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_139/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_139/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_139"
  op: "Fill"
  input: "training_2/Adam/zeros_139/shape_as_tensor"
  input: "training_2/Adam/zeros_139/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_139"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_139/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_139"
  input: "training_2/Adam/zeros_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_139"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_139/read"
  op: "Identity"
  input: "training_2/Adam/Variable_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_139"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_140/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_140/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_140"
  op: "Fill"
  input: "training_2/Adam/zeros_140/shape_as_tensor"
  input: "training_2/Adam/zeros_140/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_140"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_140/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_140"
  input: "training_2/Adam/zeros_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_140"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_140/read"
  op: "Identity"
  input: "training_2/Adam/Variable_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_140"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_141/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_141/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_141"
  op: "Fill"
  input: "training_2/Adam/zeros_141/shape_as_tensor"
  input: "training_2/Adam/zeros_141/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_141"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_141/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_141"
  input: "training_2/Adam/zeros_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_141"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_141/read"
  op: "Identity"
  input: "training_2/Adam/Variable_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_141"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_142/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_142/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_142"
  op: "Fill"
  input: "training_2/Adam/zeros_142/shape_as_tensor"
  input: "training_2/Adam/zeros_142/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_142"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_142/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_142"
  input: "training_2/Adam/zeros_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_142"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_142/read"
  op: "Identity"
  input: "training_2/Adam/Variable_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_142"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_143/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_143/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_143"
  op: "Fill"
  input: "training_2/Adam/zeros_143/shape_as_tensor"
  input: "training_2/Adam/zeros_143/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_143"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_143/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_143"
  input: "training_2/Adam/zeros_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_143"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_143/read"
  op: "Identity"
  input: "training_2/Adam/Variable_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_143"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_144/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_144/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_144"
  op: "Fill"
  input: "training_2/Adam/zeros_144/shape_as_tensor"
  input: "training_2/Adam/zeros_144/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_144"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_144/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_144"
  input: "training_2/Adam/zeros_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_144"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_144/read"
  op: "Identity"
  input: "training_2/Adam/Variable_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_144"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_145/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_145/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_145"
  op: "Fill"
  input: "training_2/Adam/zeros_145/shape_as_tensor"
  input: "training_2/Adam/zeros_145/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_145"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_145/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_145"
  input: "training_2/Adam/zeros_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_145"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_145/read"
  op: "Identity"
  input: "training_2/Adam/Variable_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_145"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_146/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_146/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_146"
  op: "Fill"
  input: "training_2/Adam/zeros_146/shape_as_tensor"
  input: "training_2/Adam/zeros_146/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_146"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_146/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_146"
  input: "training_2/Adam/zeros_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_146"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_146/read"
  op: "Identity"
  input: "training_2/Adam/Variable_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_146"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_147/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_147/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_147"
  op: "Fill"
  input: "training_2/Adam/zeros_147/shape_as_tensor"
  input: "training_2/Adam/zeros_147/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_147"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_147/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_147"
  input: "training_2/Adam/zeros_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_147"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_147/read"
  op: "Identity"
  input: "training_2/Adam/Variable_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_147"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_148/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_148/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_148"
  op: "Fill"
  input: "training_2/Adam/zeros_148/shape_as_tensor"
  input: "training_2/Adam/zeros_148/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_148"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_148/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_148"
  input: "training_2/Adam/zeros_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_148"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_148/read"
  op: "Identity"
  input: "training_2/Adam/Variable_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_148"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_149/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_149/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_149"
  op: "Fill"
  input: "training_2/Adam/zeros_149/shape_as_tensor"
  input: "training_2/Adam/zeros_149/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_149"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_149/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_149"
  input: "training_2/Adam/zeros_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_149"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_149/read"
  op: "Identity"
  input: "training_2/Adam/Variable_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_149"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_150/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_150/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_150"
  op: "Fill"
  input: "training_2/Adam/zeros_150/shape_as_tensor"
  input: "training_2/Adam/zeros_150/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_150"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_150/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_150"
  input: "training_2/Adam/zeros_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_150"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_150/read"
  op: "Identity"
  input: "training_2/Adam/Variable_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_150"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_151/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_151/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_151"
  op: "Fill"
  input: "training_2/Adam/zeros_151/shape_as_tensor"
  input: "training_2/Adam/zeros_151/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_151"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_151/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_151"
  input: "training_2/Adam/zeros_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_151"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_151/read"
  op: "Identity"
  input: "training_2/Adam/Variable_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_151"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_152/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_152/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_152"
  op: "Fill"
  input: "training_2/Adam/zeros_152/shape_as_tensor"
  input: "training_2/Adam/zeros_152/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_152"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_152/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_152"
  input: "training_2/Adam/zeros_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_152"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_152/read"
  op: "Identity"
  input: "training_2/Adam/Variable_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_152"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_153/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_153/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_153"
  op: "Fill"
  input: "training_2/Adam/zeros_153/shape_as_tensor"
  input: "training_2/Adam/zeros_153/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_153"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_153/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_153"
  input: "training_2/Adam/zeros_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_153"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_153/read"
  op: "Identity"
  input: "training_2/Adam/Variable_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_153"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_154/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_154/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_154"
  op: "Fill"
  input: "training_2/Adam/zeros_154/shape_as_tensor"
  input: "training_2/Adam/zeros_154/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_154"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_154/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_154"
  input: "training_2/Adam/zeros_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_154"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_154/read"
  op: "Identity"
  input: "training_2/Adam/Variable_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_154"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_155/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_155/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_155"
  op: "Fill"
  input: "training_2/Adam/zeros_155/shape_as_tensor"
  input: "training_2/Adam/zeros_155/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_155"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_155/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_155"
  input: "training_2/Adam/zeros_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_155"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_155/read"
  op: "Identity"
  input: "training_2/Adam/Variable_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_155"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_156/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_156/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_156"
  op: "Fill"
  input: "training_2/Adam/zeros_156/shape_as_tensor"
  input: "training_2/Adam/zeros_156/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_156"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_156/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_156"
  input: "training_2/Adam/zeros_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_156"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_156/read"
  op: "Identity"
  input: "training_2/Adam/Variable_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_156"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_157/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_157/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_157"
  op: "Fill"
  input: "training_2/Adam/zeros_157/shape_as_tensor"
  input: "training_2/Adam/zeros_157/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_157"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_157/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_157"
  input: "training_2/Adam/zeros_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_157"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_157/read"
  op: "Identity"
  input: "training_2/Adam/Variable_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_157"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_158/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_158/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_158"
  op: "Fill"
  input: "training_2/Adam/zeros_158/shape_as_tensor"
  input: "training_2/Adam/zeros_158/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_158"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_158/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_158"
  input: "training_2/Adam/zeros_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_158"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_158/read"
  op: "Identity"
  input: "training_2/Adam/Variable_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_158"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_159/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_159/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_159"
  op: "Fill"
  input: "training_2/Adam/zeros_159/shape_as_tensor"
  input: "training_2/Adam/zeros_159/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_159"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_159/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_159"
  input: "training_2/Adam/zeros_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_159"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_159/read"
  op: "Identity"
  input: "training_2/Adam/Variable_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_159"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_160/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_160/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_160"
  op: "Fill"
  input: "training_2/Adam/zeros_160/shape_as_tensor"
  input: "training_2/Adam/zeros_160/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_160"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_160/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_160"
  input: "training_2/Adam/zeros_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_160"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_160/read"
  op: "Identity"
  input: "training_2/Adam/Variable_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_160"
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_161/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_161/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/zeros_161"
  op: "Fill"
  input: "training_2/Adam/zeros_161/shape_as_tensor"
  input: "training_2/Adam/zeros_161/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training_2/Adam/Variable_161"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training_2/Adam/Variable_161/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable_161"
  input: "training_2/Adam/zeros_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_161"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Variable_161/read"
  op: "Identity"
  input: "training_2/Adam/Variable_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_161"
      }
    }
  }
}
node {
  name: "training_2/Adam/mul_1"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_2"
  op: "Sub"
  input: "training_2/Adam/sub_2/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_2"
  op: "Mul"
  input: "training_2/Adam/sub_2"
  input: "training_2/Adam/gradients/conv2d_1_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_1"
  op: "Add"
  input: "training_2/Adam/mul_1"
  input: "training_2/Adam/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_3"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_54/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_3"
  op: "Sub"
  input: "training_2/Adam/sub_3/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_1_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_4"
  op: "Mul"
  input: "training_2/Adam/sub_3"
  input: "training_2/Adam/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_2"
  op: "Add"
  input: "training_2/Adam/mul_3"
  input: "training_2/Adam/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_5"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_2"
  input: "training_2/Adam/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_1"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_1/Minimum"
  input: "training_2/Adam/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_1"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_3"
  op: "Add"
  input: "training_2/Adam/Sqrt_1"
  input: "training_2/Adam/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_1"
  op: "RealDiv"
  input: "training_2/Adam/mul_5"
  input: "training_2/Adam/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_4"
  op: "Sub"
  input: "conv2d_1_1/kernel/read"
  input: "training_2/Adam/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign"
  op: "Assign"
  input: "training_2/Adam/Variable"
  input: "training_2/Adam/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_1"
  op: "Assign"
  input: "training_2/Adam/Variable_54"
  input: "training_2/Adam/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_54"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_2"
  op: "Assign"
  input: "conv2d_1_1/kernel"
  input: "training_2/Adam/sub_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_6"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_5"
  op: "Sub"
  input: "training_2/Adam/sub_5/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_7"
  op: "Mul"
  input: "training_2/Adam/sub_5"
  input: "training_2/Adam/gradients/conv2d_1_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_4"
  op: "Add"
  input: "training_2/Adam/mul_6"
  input: "training_2/Adam/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_8"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_55/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_6"
  op: "Sub"
  input: "training_2/Adam/sub_6/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_1"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_1_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_9"
  op: "Mul"
  input: "training_2/Adam/sub_6"
  input: "training_2/Adam/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_5"
  op: "Add"
  input: "training_2/Adam/mul_8"
  input: "training_2/Adam/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_10"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_5"
  input: "training_2/Adam/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_2"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_2/Minimum"
  input: "training_2/Adam/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_2"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_6"
  op: "Add"
  input: "training_2/Adam/Sqrt_2"
  input: "training_2/Adam/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_2"
  op: "RealDiv"
  input: "training_2/Adam/mul_10"
  input: "training_2/Adam/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_7"
  op: "Sub"
  input: "conv2d_1_1/bias/read"
  input: "training_2/Adam/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_3"
  op: "Assign"
  input: "training_2/Adam/Variable_1"
  input: "training_2/Adam/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_4"
  op: "Assign"
  input: "training_2/Adam/Variable_55"
  input: "training_2/Adam/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_55"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_5"
  op: "Assign"
  input: "conv2d_1_1/bias"
  input: "training_2/Adam/sub_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_11"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_8/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_8"
  op: "Sub"
  input: "training_2/Adam/sub_8/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_12"
  op: "Mul"
  input: "training_2/Adam/sub_8"
  input: "training_2/Adam/gradients/conv2d_2_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_7"
  op: "Add"
  input: "training_2/Adam/mul_11"
  input: "training_2/Adam/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_13"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_56/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_9/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_9"
  op: "Sub"
  input: "training_2/Adam/sub_9/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_2"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_2_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_14"
  op: "Mul"
  input: "training_2/Adam/sub_9"
  input: "training_2/Adam/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_8"
  op: "Add"
  input: "training_2/Adam/mul_13"
  input: "training_2/Adam/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_15"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_3/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_8"
  input: "training_2/Adam/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_3"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_3/Minimum"
  input: "training_2/Adam/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_3"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_9/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_9"
  op: "Add"
  input: "training_2/Adam/Sqrt_3"
  input: "training_2/Adam/add_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_3"
  op: "RealDiv"
  input: "training_2/Adam/mul_15"
  input: "training_2/Adam/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_10"
  op: "Sub"
  input: "conv2d_2_1/kernel/read"
  input: "training_2/Adam/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_6"
  op: "Assign"
  input: "training_2/Adam/Variable_2"
  input: "training_2/Adam/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_7"
  op: "Assign"
  input: "training_2/Adam/Variable_56"
  input: "training_2/Adam/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_56"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_8"
  op: "Assign"
  input: "conv2d_2_1/kernel"
  input: "training_2/Adam/sub_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_16"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_11/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_11"
  op: "Sub"
  input: "training_2/Adam/sub_11/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_17"
  op: "Mul"
  input: "training_2/Adam/sub_11"
  input: "training_2/Adam/gradients/conv2d_2_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_10"
  op: "Add"
  input: "training_2/Adam/mul_16"
  input: "training_2/Adam/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_18"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_57/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_12/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_12"
  op: "Sub"
  input: "training_2/Adam/sub_12/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_3"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_2_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_19"
  op: "Mul"
  input: "training_2/Adam/sub_12"
  input: "training_2/Adam/Square_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_11"
  op: "Add"
  input: "training_2/Adam/mul_18"
  input: "training_2/Adam/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_20"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_4/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_11"
  input: "training_2/Adam/Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_4"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_4/Minimum"
  input: "training_2/Adam/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_4"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_12/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_12"
  op: "Add"
  input: "training_2/Adam/Sqrt_4"
  input: "training_2/Adam/add_12/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_4"
  op: "RealDiv"
  input: "training_2/Adam/mul_20"
  input: "training_2/Adam/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_13"
  op: "Sub"
  input: "conv2d_2_1/bias/read"
  input: "training_2/Adam/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_9"
  op: "Assign"
  input: "training_2/Adam/Variable_3"
  input: "training_2/Adam/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_10"
  op: "Assign"
  input: "training_2/Adam/Variable_57"
  input: "training_2/Adam/add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_57"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_11"
  op: "Assign"
  input: "conv2d_2_1/bias"
  input: "training_2/Adam/sub_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_21"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_4/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_14/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_14"
  op: "Sub"
  input: "training_2/Adam/sub_14/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_22"
  op: "Mul"
  input: "training_2/Adam/sub_14"
  input: "training_2/Adam/gradients/conv2d_3_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_13"
  op: "Add"
  input: "training_2/Adam/mul_21"
  input: "training_2/Adam/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_23"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_58/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_15/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_15"
  op: "Sub"
  input: "training_2/Adam/sub_15/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_4"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_3_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_24"
  op: "Mul"
  input: "training_2/Adam/sub_15"
  input: "training_2/Adam/Square_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_14"
  op: "Add"
  input: "training_2/Adam/mul_23"
  input: "training_2/Adam/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_25"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_5/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_14"
  input: "training_2/Adam/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_5"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_5/Minimum"
  input: "training_2/Adam/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_5"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_15/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_15"
  op: "Add"
  input: "training_2/Adam/Sqrt_5"
  input: "training_2/Adam/add_15/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_5"
  op: "RealDiv"
  input: "training_2/Adam/mul_25"
  input: "training_2/Adam/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_16"
  op: "Sub"
  input: "conv2d_3_1/kernel/read"
  input: "training_2/Adam/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_12"
  op: "Assign"
  input: "training_2/Adam/Variable_4"
  input: "training_2/Adam/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_13"
  op: "Assign"
  input: "training_2/Adam/Variable_58"
  input: "training_2/Adam/add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_58"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_14"
  op: "Assign"
  input: "conv2d_3_1/kernel"
  input: "training_2/Adam/sub_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_26"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_5/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_17/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_17"
  op: "Sub"
  input: "training_2/Adam/sub_17/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_27"
  op: "Mul"
  input: "training_2/Adam/sub_17"
  input: "training_2/Adam/gradients/conv2d_3_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_16"
  op: "Add"
  input: "training_2/Adam/mul_26"
  input: "training_2/Adam/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_28"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_59/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_18/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_18"
  op: "Sub"
  input: "training_2/Adam/sub_18/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_5"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_3_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_29"
  op: "Mul"
  input: "training_2/Adam/sub_18"
  input: "training_2/Adam/Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_17"
  op: "Add"
  input: "training_2/Adam/mul_28"
  input: "training_2/Adam/mul_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_30"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_6/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_17"
  input: "training_2/Adam/Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_6"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_6/Minimum"
  input: "training_2/Adam/Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_6"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_18/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_18"
  op: "Add"
  input: "training_2/Adam/Sqrt_6"
  input: "training_2/Adam/add_18/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_6"
  op: "RealDiv"
  input: "training_2/Adam/mul_30"
  input: "training_2/Adam/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_19"
  op: "Sub"
  input: "conv2d_3_1/bias/read"
  input: "training_2/Adam/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_15"
  op: "Assign"
  input: "training_2/Adam/Variable_5"
  input: "training_2/Adam/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_16"
  op: "Assign"
  input: "training_2/Adam/Variable_59"
  input: "training_2/Adam/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_59"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_17"
  op: "Assign"
  input: "conv2d_3_1/bias"
  input: "training_2/Adam/sub_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_31"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_6/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_20/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_20"
  op: "Sub"
  input: "training_2/Adam/sub_20/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_32"
  op: "Mul"
  input: "training_2/Adam/sub_20"
  input: "training_2/Adam/gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_19"
  op: "Add"
  input: "training_2/Adam/mul_31"
  input: "training_2/Adam/mul_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_33"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_60/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_21/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_21"
  op: "Sub"
  input: "training_2/Adam/sub_21/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_6"
  op: "Square"
  input: "training_2/Adam/gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_34"
  op: "Mul"
  input: "training_2/Adam/sub_21"
  input: "training_2/Adam/Square_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_20"
  op: "Add"
  input: "training_2/Adam/mul_33"
  input: "training_2/Adam/mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_35"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_7/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_20"
  input: "training_2/Adam/Const_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_7"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_7/Minimum"
  input: "training_2/Adam/Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_7"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_21/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_21"
  op: "Add"
  input: "training_2/Adam/Sqrt_7"
  input: "training_2/Adam/add_21/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_7"
  op: "RealDiv"
  input: "training_2/Adam/mul_35"
  input: "training_2/Adam/add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_22"
  op: "Sub"
  input: "batch_normalization_1_1/gamma/read"
  input: "training_2/Adam/truediv_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_18"
  op: "Assign"
  input: "training_2/Adam/Variable_6"
  input: "training_2/Adam/add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_6"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_19"
  op: "Assign"
  input: "training_2/Adam/Variable_60"
  input: "training_2/Adam/add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_60"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_20"
  op: "Assign"
  input: "batch_normalization_1_1/gamma"
  input: "training_2/Adam/sub_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_36"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_7/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_23/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_23"
  op: "Sub"
  input: "training_2/Adam/sub_23/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_37"
  op: "Mul"
  input: "training_2/Adam/sub_23"
  input: "training_2/Adam/gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_22"
  op: "Add"
  input: "training_2/Adam/mul_36"
  input: "training_2/Adam/mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_38"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_61/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_24/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_24"
  op: "Sub"
  input: "training_2/Adam/sub_24/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_7"
  op: "Square"
  input: "training_2/Adam/gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_39"
  op: "Mul"
  input: "training_2/Adam/sub_24"
  input: "training_2/Adam/Square_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_23"
  op: "Add"
  input: "training_2/Adam/mul_38"
  input: "training_2/Adam/mul_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_40"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_8/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_23"
  input: "training_2/Adam/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_8"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_8/Minimum"
  input: "training_2/Adam/Const_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_8"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_24/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_24"
  op: "Add"
  input: "training_2/Adam/Sqrt_8"
  input: "training_2/Adam/add_24/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_8"
  op: "RealDiv"
  input: "training_2/Adam/mul_40"
  input: "training_2/Adam/add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_25"
  op: "Sub"
  input: "batch_normalization_1_1/beta/read"
  input: "training_2/Adam/truediv_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_21"
  op: "Assign"
  input: "training_2/Adam/Variable_7"
  input: "training_2/Adam/add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_7"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_22"
  op: "Assign"
  input: "training_2/Adam/Variable_61"
  input: "training_2/Adam/add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_61"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_23"
  op: "Assign"
  input: "batch_normalization_1_1/beta"
  input: "training_2/Adam/sub_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_41"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_8/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_26/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_26"
  op: "Sub"
  input: "training_2/Adam/sub_26/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_42"
  op: "Mul"
  input: "training_2/Adam/sub_26"
  input: "training_2/Adam/gradients/conv2d_4_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_25"
  op: "Add"
  input: "training_2/Adam/mul_41"
  input: "training_2/Adam/mul_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_43"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_62/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_27/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_27"
  op: "Sub"
  input: "training_2/Adam/sub_27/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_8"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_4_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_44"
  op: "Mul"
  input: "training_2/Adam/sub_27"
  input: "training_2/Adam/Square_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_26"
  op: "Add"
  input: "training_2/Adam/mul_43"
  input: "training_2/Adam/mul_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_45"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_9/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_26"
  input: "training_2/Adam/Const_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_9"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_9/Minimum"
  input: "training_2/Adam/Const_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_9"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_27/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_27"
  op: "Add"
  input: "training_2/Adam/Sqrt_9"
  input: "training_2/Adam/add_27/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_9"
  op: "RealDiv"
  input: "training_2/Adam/mul_45"
  input: "training_2/Adam/add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_28"
  op: "Sub"
  input: "conv2d_4_1/kernel/read"
  input: "training_2/Adam/truediv_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_24"
  op: "Assign"
  input: "training_2/Adam/Variable_8"
  input: "training_2/Adam/add_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_8"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_25"
  op: "Assign"
  input: "training_2/Adam/Variable_62"
  input: "training_2/Adam/add_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_62"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_26"
  op: "Assign"
  input: "conv2d_4_1/kernel"
  input: "training_2/Adam/sub_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_46"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_9/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_29/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_29"
  op: "Sub"
  input: "training_2/Adam/sub_29/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_47"
  op: "Mul"
  input: "training_2/Adam/sub_29"
  input: "training_2/Adam/gradients/conv2d_4_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_28"
  op: "Add"
  input: "training_2/Adam/mul_46"
  input: "training_2/Adam/mul_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_48"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_63/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_30/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_30"
  op: "Sub"
  input: "training_2/Adam/sub_30/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_9"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_4_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_49"
  op: "Mul"
  input: "training_2/Adam/sub_30"
  input: "training_2/Adam/Square_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_29"
  op: "Add"
  input: "training_2/Adam/mul_48"
  input: "training_2/Adam/mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_50"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_10/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_29"
  input: "training_2/Adam/Const_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_10"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_10/Minimum"
  input: "training_2/Adam/Const_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_10"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_30/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_30"
  op: "Add"
  input: "training_2/Adam/Sqrt_10"
  input: "training_2/Adam/add_30/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_10"
  op: "RealDiv"
  input: "training_2/Adam/mul_50"
  input: "training_2/Adam/add_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_31"
  op: "Sub"
  input: "conv2d_4_1/bias/read"
  input: "training_2/Adam/truediv_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_27"
  op: "Assign"
  input: "training_2/Adam/Variable_9"
  input: "training_2/Adam/add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_9"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_28"
  op: "Assign"
  input: "training_2/Adam/Variable_63"
  input: "training_2/Adam/add_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_63"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_29"
  op: "Assign"
  input: "conv2d_4_1/bias"
  input: "training_2/Adam/sub_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_51"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_10/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_32/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_32"
  op: "Sub"
  input: "training_2/Adam/sub_32/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_52"
  op: "Mul"
  input: "training_2/Adam/sub_32"
  input: "training_2/Adam/gradients/conv2d_8_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_31"
  op: "Add"
  input: "training_2/Adam/mul_51"
  input: "training_2/Adam/mul_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_53"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_64/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_33/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_33"
  op: "Sub"
  input: "training_2/Adam/sub_33/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_10"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_8_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_54"
  op: "Mul"
  input: "training_2/Adam/sub_33"
  input: "training_2/Adam/Square_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_32"
  op: "Add"
  input: "training_2/Adam/mul_53"
  input: "training_2/Adam/mul_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_55"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_22"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_11/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_32"
  input: "training_2/Adam/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_11"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_11/Minimum"
  input: "training_2/Adam/Const_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_11"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_33/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_33"
  op: "Add"
  input: "training_2/Adam/Sqrt_11"
  input: "training_2/Adam/add_33/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_11"
  op: "RealDiv"
  input: "training_2/Adam/mul_55"
  input: "training_2/Adam/add_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_34"
  op: "Sub"
  input: "conv2d_8_1/kernel/read"
  input: "training_2/Adam/truediv_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_30"
  op: "Assign"
  input: "training_2/Adam/Variable_10"
  input: "training_2/Adam/add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_10"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_31"
  op: "Assign"
  input: "training_2/Adam/Variable_64"
  input: "training_2/Adam/add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_64"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_32"
  op: "Assign"
  input: "conv2d_8_1/kernel"
  input: "training_2/Adam/sub_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_56"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_11/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_35/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_35"
  op: "Sub"
  input: "training_2/Adam/sub_35/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_57"
  op: "Mul"
  input: "training_2/Adam/sub_35"
  input: "training_2/Adam/gradients/conv2d_8_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_34"
  op: "Add"
  input: "training_2/Adam/mul_56"
  input: "training_2/Adam/mul_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_58"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_65/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_36/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_36"
  op: "Sub"
  input: "training_2/Adam/sub_36/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_11"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_8_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_59"
  op: "Mul"
  input: "training_2/Adam/sub_36"
  input: "training_2/Adam/Square_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_35"
  op: "Add"
  input: "training_2/Adam/mul_58"
  input: "training_2/Adam/mul_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_60"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_12/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_35"
  input: "training_2/Adam/Const_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_12"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_12/Minimum"
  input: "training_2/Adam/Const_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_12"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_36/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_36"
  op: "Add"
  input: "training_2/Adam/Sqrt_12"
  input: "training_2/Adam/add_36/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_12"
  op: "RealDiv"
  input: "training_2/Adam/mul_60"
  input: "training_2/Adam/add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_37"
  op: "Sub"
  input: "conv2d_8_1/bias/read"
  input: "training_2/Adam/truediv_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_33"
  op: "Assign"
  input: "training_2/Adam/Variable_11"
  input: "training_2/Adam/add_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_11"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_34"
  op: "Assign"
  input: "training_2/Adam/Variable_65"
  input: "training_2/Adam/add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_65"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_35"
  op: "Assign"
  input: "conv2d_8_1/bias"
  input: "training_2/Adam/sub_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_61"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_12/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_38/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_38"
  op: "Sub"
  input: "training_2/Adam/sub_38/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_62"
  op: "Mul"
  input: "training_2/Adam/sub_38"
  input: "training_2/Adam/gradients/conv2d_6_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_37"
  op: "Add"
  input: "training_2/Adam/mul_61"
  input: "training_2/Adam/mul_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_63"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_66/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_39/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_39"
  op: "Sub"
  input: "training_2/Adam/sub_39/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_12"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_6_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_64"
  op: "Mul"
  input: "training_2/Adam/sub_39"
  input: "training_2/Adam/Square_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_38"
  op: "Add"
  input: "training_2/Adam/mul_63"
  input: "training_2/Adam/mul_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_65"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_13/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_38"
  input: "training_2/Adam/Const_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_13"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_13/Minimum"
  input: "training_2/Adam/Const_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_13"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_39/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_39"
  op: "Add"
  input: "training_2/Adam/Sqrt_13"
  input: "training_2/Adam/add_39/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_13"
  op: "RealDiv"
  input: "training_2/Adam/mul_65"
  input: "training_2/Adam/add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_40"
  op: "Sub"
  input: "conv2d_6_1/kernel/read"
  input: "training_2/Adam/truediv_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_36"
  op: "Assign"
  input: "training_2/Adam/Variable_12"
  input: "training_2/Adam/add_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_12"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_37"
  op: "Assign"
  input: "training_2/Adam/Variable_66"
  input: "training_2/Adam/add_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_66"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_38"
  op: "Assign"
  input: "conv2d_6_1/kernel"
  input: "training_2/Adam/sub_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_66"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_13/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_41/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_41"
  op: "Sub"
  input: "training_2/Adam/sub_41/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_67"
  op: "Mul"
  input: "training_2/Adam/sub_41"
  input: "training_2/Adam/gradients/conv2d_6_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_40"
  op: "Add"
  input: "training_2/Adam/mul_66"
  input: "training_2/Adam/mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_68"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_67/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_42/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_42"
  op: "Sub"
  input: "training_2/Adam/sub_42/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_13"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_6_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_69"
  op: "Mul"
  input: "training_2/Adam/sub_42"
  input: "training_2/Adam/Square_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_41"
  op: "Add"
  input: "training_2/Adam/mul_68"
  input: "training_2/Adam/mul_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_70"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_14/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_41"
  input: "training_2/Adam/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_14"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_14/Minimum"
  input: "training_2/Adam/Const_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_14"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_42/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_42"
  op: "Add"
  input: "training_2/Adam/Sqrt_14"
  input: "training_2/Adam/add_42/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_14"
  op: "RealDiv"
  input: "training_2/Adam/mul_70"
  input: "training_2/Adam/add_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_43"
  op: "Sub"
  input: "conv2d_6_1/bias/read"
  input: "training_2/Adam/truediv_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_39"
  op: "Assign"
  input: "training_2/Adam/Variable_13"
  input: "training_2/Adam/add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_13"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_40"
  op: "Assign"
  input: "training_2/Adam/Variable_67"
  input: "training_2/Adam/add_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_67"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_41"
  op: "Assign"
  input: "conv2d_6_1/bias"
  input: "training_2/Adam/sub_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_71"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_14/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_44/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_44"
  op: "Sub"
  input: "training_2/Adam/sub_44/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_72"
  op: "Mul"
  input: "training_2/Adam/sub_44"
  input: "training_2/Adam/gradients/conv2d_9_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_43"
  op: "Add"
  input: "training_2/Adam/mul_71"
  input: "training_2/Adam/mul_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_73"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_68/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_45/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_45"
  op: "Sub"
  input: "training_2/Adam/sub_45/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_14"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_9_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_74"
  op: "Mul"
  input: "training_2/Adam/sub_45"
  input: "training_2/Adam/Square_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_44"
  op: "Add"
  input: "training_2/Adam/mul_73"
  input: "training_2/Adam/mul_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_75"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_15/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_44"
  input: "training_2/Adam/Const_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_15"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_15/Minimum"
  input: "training_2/Adam/Const_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_15"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_45/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_45"
  op: "Add"
  input: "training_2/Adam/Sqrt_15"
  input: "training_2/Adam/add_45/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_15"
  op: "RealDiv"
  input: "training_2/Adam/mul_75"
  input: "training_2/Adam/add_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_46"
  op: "Sub"
  input: "conv2d_9_1/kernel/read"
  input: "training_2/Adam/truediv_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_42"
  op: "Assign"
  input: "training_2/Adam/Variable_14"
  input: "training_2/Adam/add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_14"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_43"
  op: "Assign"
  input: "training_2/Adam/Variable_68"
  input: "training_2/Adam/add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_68"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_44"
  op: "Assign"
  input: "conv2d_9_1/kernel"
  input: "training_2/Adam/sub_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_76"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_15/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_47/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_47"
  op: "Sub"
  input: "training_2/Adam/sub_47/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_77"
  op: "Mul"
  input: "training_2/Adam/sub_47"
  input: "training_2/Adam/gradients/conv2d_9_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_46"
  op: "Add"
  input: "training_2/Adam/mul_76"
  input: "training_2/Adam/mul_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_78"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_69/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_48/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_48"
  op: "Sub"
  input: "training_2/Adam/sub_48/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_15"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_9_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_79"
  op: "Mul"
  input: "training_2/Adam/sub_48"
  input: "training_2/Adam/Square_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_47"
  op: "Add"
  input: "training_2/Adam/mul_78"
  input: "training_2/Adam/mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_80"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_16/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_47"
  input: "training_2/Adam/Const_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_16"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_16/Minimum"
  input: "training_2/Adam/Const_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_16"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_48/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_48"
  op: "Add"
  input: "training_2/Adam/Sqrt_16"
  input: "training_2/Adam/add_48/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_16"
  op: "RealDiv"
  input: "training_2/Adam/mul_80"
  input: "training_2/Adam/add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_49"
  op: "Sub"
  input: "conv2d_9_1/bias/read"
  input: "training_2/Adam/truediv_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_45"
  op: "Assign"
  input: "training_2/Adam/Variable_15"
  input: "training_2/Adam/add_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_15"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_46"
  op: "Assign"
  input: "training_2/Adam/Variable_69"
  input: "training_2/Adam/add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_69"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_47"
  op: "Assign"
  input: "conv2d_9_1/bias"
  input: "training_2/Adam/sub_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_81"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_16/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_50/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_50"
  op: "Sub"
  input: "training_2/Adam/sub_50/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_82"
  op: "Mul"
  input: "training_2/Adam/sub_50"
  input: "training_2/Adam/gradients/conv2d_11_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_49"
  op: "Add"
  input: "training_2/Adam/mul_81"
  input: "training_2/Adam/mul_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_83"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_70/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_51/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_51"
  op: "Sub"
  input: "training_2/Adam/sub_51/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_16"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_11_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_84"
  op: "Mul"
  input: "training_2/Adam/sub_51"
  input: "training_2/Adam/Square_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_50"
  op: "Add"
  input: "training_2/Adam/mul_83"
  input: "training_2/Adam/mul_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_85"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_34"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_17/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_50"
  input: "training_2/Adam/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_17"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_17/Minimum"
  input: "training_2/Adam/Const_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_17"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_51/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_51"
  op: "Add"
  input: "training_2/Adam/Sqrt_17"
  input: "training_2/Adam/add_51/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_17"
  op: "RealDiv"
  input: "training_2/Adam/mul_85"
  input: "training_2/Adam/add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_52"
  op: "Sub"
  input: "conv2d_11_1/kernel/read"
  input: "training_2/Adam/truediv_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_48"
  op: "Assign"
  input: "training_2/Adam/Variable_16"
  input: "training_2/Adam/add_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_16"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_49"
  op: "Assign"
  input: "training_2/Adam/Variable_70"
  input: "training_2/Adam/add_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_70"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_50"
  op: "Assign"
  input: "conv2d_11_1/kernel"
  input: "training_2/Adam/sub_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_86"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_17/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_53/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_53"
  op: "Sub"
  input: "training_2/Adam/sub_53/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_87"
  op: "Mul"
  input: "training_2/Adam/sub_53"
  input: "training_2/Adam/gradients/conv2d_11_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_52"
  op: "Add"
  input: "training_2/Adam/mul_86"
  input: "training_2/Adam/mul_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_88"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_71/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_54/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_54"
  op: "Sub"
  input: "training_2/Adam/sub_54/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_17"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_11_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_89"
  op: "Mul"
  input: "training_2/Adam/sub_54"
  input: "training_2/Adam/Square_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_53"
  op: "Add"
  input: "training_2/Adam/mul_88"
  input: "training_2/Adam/mul_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_90"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_37"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_18/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_53"
  input: "training_2/Adam/Const_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_18"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_18/Minimum"
  input: "training_2/Adam/Const_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_18"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_54/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_54"
  op: "Add"
  input: "training_2/Adam/Sqrt_18"
  input: "training_2/Adam/add_54/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_18"
  op: "RealDiv"
  input: "training_2/Adam/mul_90"
  input: "training_2/Adam/add_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_55"
  op: "Sub"
  input: "conv2d_11_1/bias/read"
  input: "training_2/Adam/truediv_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_51"
  op: "Assign"
  input: "training_2/Adam/Variable_17"
  input: "training_2/Adam/add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_17"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_52"
  op: "Assign"
  input: "training_2/Adam/Variable_71"
  input: "training_2/Adam/add_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_71"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_53"
  op: "Assign"
  input: "conv2d_11_1/bias"
  input: "training_2/Adam/sub_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_91"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_18/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_56/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_56"
  op: "Sub"
  input: "training_2/Adam/sub_56/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_92"
  op: "Mul"
  input: "training_2/Adam/sub_56"
  input: "training_2/Adam/gradients/conv2d_5_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_55"
  op: "Add"
  input: "training_2/Adam/mul_91"
  input: "training_2/Adam/mul_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_93"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_72/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_57/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_57"
  op: "Sub"
  input: "training_2/Adam/sub_57/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_18"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_5_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_94"
  op: "Mul"
  input: "training_2/Adam/sub_57"
  input: "training_2/Adam/Square_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_56"
  op: "Add"
  input: "training_2/Adam/mul_93"
  input: "training_2/Adam/mul_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_95"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_19/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_56"
  input: "training_2/Adam/Const_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_19"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_19/Minimum"
  input: "training_2/Adam/Const_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_19"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_57/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_57"
  op: "Add"
  input: "training_2/Adam/Sqrt_19"
  input: "training_2/Adam/add_57/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_19"
  op: "RealDiv"
  input: "training_2/Adam/mul_95"
  input: "training_2/Adam/add_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_58"
  op: "Sub"
  input: "conv2d_5_1/kernel/read"
  input: "training_2/Adam/truediv_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_54"
  op: "Assign"
  input: "training_2/Adam/Variable_18"
  input: "training_2/Adam/add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_18"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_55"
  op: "Assign"
  input: "training_2/Adam/Variable_72"
  input: "training_2/Adam/add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_72"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_56"
  op: "Assign"
  input: "conv2d_5_1/kernel"
  input: "training_2/Adam/sub_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_96"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_19/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_59/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_59"
  op: "Sub"
  input: "training_2/Adam/sub_59/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_97"
  op: "Mul"
  input: "training_2/Adam/sub_59"
  input: "training_2/Adam/gradients/conv2d_5_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_58"
  op: "Add"
  input: "training_2/Adam/mul_96"
  input: "training_2/Adam/mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_98"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_73/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_60/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_60"
  op: "Sub"
  input: "training_2/Adam/sub_60/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_19"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_5_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_99"
  op: "Mul"
  input: "training_2/Adam/sub_60"
  input: "training_2/Adam/Square_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_59"
  op: "Add"
  input: "training_2/Adam/mul_98"
  input: "training_2/Adam/mul_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_100"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_40"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_20/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_59"
  input: "training_2/Adam/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_20"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_20/Minimum"
  input: "training_2/Adam/Const_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_20"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_60/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_60"
  op: "Add"
  input: "training_2/Adam/Sqrt_20"
  input: "training_2/Adam/add_60/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_20"
  op: "RealDiv"
  input: "training_2/Adam/mul_100"
  input: "training_2/Adam/add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_61"
  op: "Sub"
  input: "conv2d_5_1/bias/read"
  input: "training_2/Adam/truediv_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_57"
  op: "Assign"
  input: "training_2/Adam/Variable_19"
  input: "training_2/Adam/add_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_19"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_58"
  op: "Assign"
  input: "training_2/Adam/Variable_73"
  input: "training_2/Adam/add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_73"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_59"
  op: "Assign"
  input: "conv2d_5_1/bias"
  input: "training_2/Adam/sub_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_101"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_20/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_62/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_62"
  op: "Sub"
  input: "training_2/Adam/sub_62/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_102"
  op: "Mul"
  input: "training_2/Adam/sub_62"
  input: "training_2/Adam/gradients/conv2d_7_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_61"
  op: "Add"
  input: "training_2/Adam/mul_101"
  input: "training_2/Adam/mul_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_103"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_74/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_63/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_63"
  op: "Sub"
  input: "training_2/Adam/sub_63/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_20"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_7_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_104"
  op: "Mul"
  input: "training_2/Adam/sub_63"
  input: "training_2/Adam/Square_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_62"
  op: "Add"
  input: "training_2/Adam/mul_103"
  input: "training_2/Adam/mul_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_105"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_43"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_21/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_62"
  input: "training_2/Adam/Const_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_21"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_21/Minimum"
  input: "training_2/Adam/Const_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_21"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_63/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_63"
  op: "Add"
  input: "training_2/Adam/Sqrt_21"
  input: "training_2/Adam/add_63/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_21"
  op: "RealDiv"
  input: "training_2/Adam/mul_105"
  input: "training_2/Adam/add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_64"
  op: "Sub"
  input: "conv2d_7_1/kernel/read"
  input: "training_2/Adam/truediv_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_60"
  op: "Assign"
  input: "training_2/Adam/Variable_20"
  input: "training_2/Adam/add_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_20"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_61"
  op: "Assign"
  input: "training_2/Adam/Variable_74"
  input: "training_2/Adam/add_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_74"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_62"
  op: "Assign"
  input: "conv2d_7_1/kernel"
  input: "training_2/Adam/sub_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_106"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_21/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_65/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_65"
  op: "Sub"
  input: "training_2/Adam/sub_65/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_107"
  op: "Mul"
  input: "training_2/Adam/sub_65"
  input: "training_2/Adam/gradients/conv2d_7_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_64"
  op: "Add"
  input: "training_2/Adam/mul_106"
  input: "training_2/Adam/mul_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_108"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_75/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_66/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_66"
  op: "Sub"
  input: "training_2/Adam/sub_66/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_21"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_7_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_109"
  op: "Mul"
  input: "training_2/Adam/sub_66"
  input: "training_2/Adam/Square_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_65"
  op: "Add"
  input: "training_2/Adam/mul_108"
  input: "training_2/Adam/mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_110"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_22/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_65"
  input: "training_2/Adam/Const_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_22"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_22/Minimum"
  input: "training_2/Adam/Const_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_22"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_66/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_66"
  op: "Add"
  input: "training_2/Adam/Sqrt_22"
  input: "training_2/Adam/add_66/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_22"
  op: "RealDiv"
  input: "training_2/Adam/mul_110"
  input: "training_2/Adam/add_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_67"
  op: "Sub"
  input: "conv2d_7_1/bias/read"
  input: "training_2/Adam/truediv_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_63"
  op: "Assign"
  input: "training_2/Adam/Variable_21"
  input: "training_2/Adam/add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_21"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_64"
  op: "Assign"
  input: "training_2/Adam/Variable_75"
  input: "training_2/Adam/add_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_75"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_65"
  op: "Assign"
  input: "conv2d_7_1/bias"
  input: "training_2/Adam/sub_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_111"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_22/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_68/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_68"
  op: "Sub"
  input: "training_2/Adam/sub_68/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_112"
  op: "Mul"
  input: "training_2/Adam/sub_68"
  input: "training_2/Adam/gradients/conv2d_10_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_67"
  op: "Add"
  input: "training_2/Adam/mul_111"
  input: "training_2/Adam/mul_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_113"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_76/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_69/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_69"
  op: "Sub"
  input: "training_2/Adam/sub_69/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_22"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_10_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_114"
  op: "Mul"
  input: "training_2/Adam/sub_69"
  input: "training_2/Adam/Square_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_68"
  op: "Add"
  input: "training_2/Adam/mul_113"
  input: "training_2/Adam/mul_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_115"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_46"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_23/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_68"
  input: "training_2/Adam/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_23"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_23/Minimum"
  input: "training_2/Adam/Const_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_23"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_69/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_69"
  op: "Add"
  input: "training_2/Adam/Sqrt_23"
  input: "training_2/Adam/add_69/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_23"
  op: "RealDiv"
  input: "training_2/Adam/mul_115"
  input: "training_2/Adam/add_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_70"
  op: "Sub"
  input: "conv2d_10_1/kernel/read"
  input: "training_2/Adam/truediv_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_66"
  op: "Assign"
  input: "training_2/Adam/Variable_22"
  input: "training_2/Adam/add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_22"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_67"
  op: "Assign"
  input: "training_2/Adam/Variable_76"
  input: "training_2/Adam/add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_76"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_68"
  op: "Assign"
  input: "conv2d_10_1/kernel"
  input: "training_2/Adam/sub_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_116"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_23/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_71/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_71"
  op: "Sub"
  input: "training_2/Adam/sub_71/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_117"
  op: "Mul"
  input: "training_2/Adam/sub_71"
  input: "training_2/Adam/gradients/conv2d_10_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_70"
  op: "Add"
  input: "training_2/Adam/mul_116"
  input: "training_2/Adam/mul_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_118"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_77/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_72/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_72"
  op: "Sub"
  input: "training_2/Adam/sub_72/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_23"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_10_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_119"
  op: "Mul"
  input: "training_2/Adam/sub_72"
  input: "training_2/Adam/Square_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_71"
  op: "Add"
  input: "training_2/Adam/mul_118"
  input: "training_2/Adam/mul_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_120"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_49"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_24/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_71"
  input: "training_2/Adam/Const_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_24"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_24/Minimum"
  input: "training_2/Adam/Const_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_24"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_72/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_72"
  op: "Add"
  input: "training_2/Adam/Sqrt_24"
  input: "training_2/Adam/add_72/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_24"
  op: "RealDiv"
  input: "training_2/Adam/mul_120"
  input: "training_2/Adam/add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_73"
  op: "Sub"
  input: "conv2d_10_1/bias/read"
  input: "training_2/Adam/truediv_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_69"
  op: "Assign"
  input: "training_2/Adam/Variable_23"
  input: "training_2/Adam/add_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_23"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_70"
  op: "Assign"
  input: "training_2/Adam/Variable_77"
  input: "training_2/Adam/add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_77"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_71"
  op: "Assign"
  input: "conv2d_10_1/bias"
  input: "training_2/Adam/sub_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_121"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_24/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_74/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_74"
  op: "Sub"
  input: "training_2/Adam/sub_74/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_122"
  op: "Mul"
  input: "training_2/Adam/sub_74"
  input: "training_2/Adam/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_73"
  op: "Add"
  input: "training_2/Adam/mul_121"
  input: "training_2/Adam/mul_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_123"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_78/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_75/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_75"
  op: "Sub"
  input: "training_2/Adam/sub_75/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_24"
  op: "Square"
  input: "training_2/Adam/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_124"
  op: "Mul"
  input: "training_2/Adam/sub_75"
  input: "training_2/Adam/Square_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_74"
  op: "Add"
  input: "training_2/Adam/mul_123"
  input: "training_2/Adam/mul_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_125"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_25/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_74"
  input: "training_2/Adam/Const_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_25"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_25/Minimum"
  input: "training_2/Adam/Const_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_25"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_75/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_75"
  op: "Add"
  input: "training_2/Adam/Sqrt_25"
  input: "training_2/Adam/add_75/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_25"
  op: "RealDiv"
  input: "training_2/Adam/mul_125"
  input: "training_2/Adam/add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_76"
  op: "Sub"
  input: "batch_normalization_2_1/gamma/read"
  input: "training_2/Adam/truediv_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_72"
  op: "Assign"
  input: "training_2/Adam/Variable_24"
  input: "training_2/Adam/add_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_24"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_73"
  op: "Assign"
  input: "training_2/Adam/Variable_78"
  input: "training_2/Adam/add_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_78"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_74"
  op: "Assign"
  input: "batch_normalization_2_1/gamma"
  input: "training_2/Adam/sub_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_126"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_25/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_77/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_77"
  op: "Sub"
  input: "training_2/Adam/sub_77/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_127"
  op: "Mul"
  input: "training_2/Adam/sub_77"
  input: "training_2/Adam/gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_76"
  op: "Add"
  input: "training_2/Adam/mul_126"
  input: "training_2/Adam/mul_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_128"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_79/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_78/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_78"
  op: "Sub"
  input: "training_2/Adam/sub_78/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_25"
  op: "Square"
  input: "training_2/Adam/gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_129"
  op: "Mul"
  input: "training_2/Adam/sub_78"
  input: "training_2/Adam/Square_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_77"
  op: "Add"
  input: "training_2/Adam/mul_128"
  input: "training_2/Adam/mul_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_130"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_52"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_26/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_77"
  input: "training_2/Adam/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_26"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_26/Minimum"
  input: "training_2/Adam/Const_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_26"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_78/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_78"
  op: "Add"
  input: "training_2/Adam/Sqrt_26"
  input: "training_2/Adam/add_78/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_26"
  op: "RealDiv"
  input: "training_2/Adam/mul_130"
  input: "training_2/Adam/add_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_79"
  op: "Sub"
  input: "batch_normalization_2_1/beta/read"
  input: "training_2/Adam/truediv_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_75"
  op: "Assign"
  input: "training_2/Adam/Variable_25"
  input: "training_2/Adam/add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_25"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_76"
  op: "Assign"
  input: "training_2/Adam/Variable_79"
  input: "training_2/Adam/add_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_79"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_77"
  op: "Assign"
  input: "batch_normalization_2_1/beta"
  input: "training_2/Adam/sub_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_131"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_26/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_80/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_80"
  op: "Sub"
  input: "training_2/Adam/sub_80/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_132"
  op: "Mul"
  input: "training_2/Adam/sub_80"
  input: "training_2/Adam/gradients/conv2d_12_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_79"
  op: "Add"
  input: "training_2/Adam/mul_131"
  input: "training_2/Adam/mul_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_133"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_80/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_81/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_81"
  op: "Sub"
  input: "training_2/Adam/sub_81/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_26"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_12_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_134"
  op: "Mul"
  input: "training_2/Adam/sub_81"
  input: "training_2/Adam/Square_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_80"
  op: "Add"
  input: "training_2/Adam/mul_133"
  input: "training_2/Adam/mul_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_135"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_55"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_27/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_80"
  input: "training_2/Adam/Const_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_27"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_27/Minimum"
  input: "training_2/Adam/Const_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_27"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_81/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_81"
  op: "Add"
  input: "training_2/Adam/Sqrt_27"
  input: "training_2/Adam/add_81/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_27"
  op: "RealDiv"
  input: "training_2/Adam/mul_135"
  input: "training_2/Adam/add_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_82"
  op: "Sub"
  input: "conv2d_12_1/kernel/read"
  input: "training_2/Adam/truediv_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_78"
  op: "Assign"
  input: "training_2/Adam/Variable_26"
  input: "training_2/Adam/add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_26"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_79"
  op: "Assign"
  input: "training_2/Adam/Variable_80"
  input: "training_2/Adam/add_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_80"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_80"
  op: "Assign"
  input: "conv2d_12_1/kernel"
  input: "training_2/Adam/sub_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_136"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_27/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_83/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_83"
  op: "Sub"
  input: "training_2/Adam/sub_83/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_137"
  op: "Mul"
  input: "training_2/Adam/sub_83"
  input: "training_2/Adam/gradients/conv2d_12_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_82"
  op: "Add"
  input: "training_2/Adam/mul_136"
  input: "training_2/Adam/mul_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_138"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_81/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_84/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_84"
  op: "Sub"
  input: "training_2/Adam/sub_84/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_27"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_12_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_139"
  op: "Mul"
  input: "training_2/Adam/sub_84"
  input: "training_2/Adam/Square_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_83"
  op: "Add"
  input: "training_2/Adam/mul_138"
  input: "training_2/Adam/mul_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_140"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_28/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_83"
  input: "training_2/Adam/Const_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_28"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_28/Minimum"
  input: "training_2/Adam/Const_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_28"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_84/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_84"
  op: "Add"
  input: "training_2/Adam/Sqrt_28"
  input: "training_2/Adam/add_84/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_28"
  op: "RealDiv"
  input: "training_2/Adam/mul_140"
  input: "training_2/Adam/add_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_85"
  op: "Sub"
  input: "conv2d_12_1/bias/read"
  input: "training_2/Adam/truediv_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_81"
  op: "Assign"
  input: "training_2/Adam/Variable_27"
  input: "training_2/Adam/add_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_27"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_82"
  op: "Assign"
  input: "training_2/Adam/Variable_81"
  input: "training_2/Adam/add_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_81"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_83"
  op: "Assign"
  input: "conv2d_12_1/bias"
  input: "training_2/Adam/sub_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_141"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_28/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_86/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_86"
  op: "Sub"
  input: "training_2/Adam/sub_86/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_142"
  op: "Mul"
  input: "training_2/Adam/sub_86"
  input: "training_2/Adam/gradients/conv2d_14_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_85"
  op: "Add"
  input: "training_2/Adam/mul_141"
  input: "training_2/Adam/mul_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_143"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_82/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_87/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_87"
  op: "Sub"
  input: "training_2/Adam/sub_87/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_28"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_14_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_144"
  op: "Mul"
  input: "training_2/Adam/sub_87"
  input: "training_2/Adam/Square_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_86"
  op: "Add"
  input: "training_2/Adam/mul_143"
  input: "training_2/Adam/mul_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_145"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_58"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_29/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_86"
  input: "training_2/Adam/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_29"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_29/Minimum"
  input: "training_2/Adam/Const_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_29"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_87/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_87"
  op: "Add"
  input: "training_2/Adam/Sqrt_29"
  input: "training_2/Adam/add_87/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_29"
  op: "RealDiv"
  input: "training_2/Adam/mul_145"
  input: "training_2/Adam/add_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_88"
  op: "Sub"
  input: "conv2d_14_1/kernel/read"
  input: "training_2/Adam/truediv_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_84"
  op: "Assign"
  input: "training_2/Adam/Variable_28"
  input: "training_2/Adam/add_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_28"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_85"
  op: "Assign"
  input: "training_2/Adam/Variable_82"
  input: "training_2/Adam/add_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_82"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_86"
  op: "Assign"
  input: "conv2d_14_1/kernel"
  input: "training_2/Adam/sub_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_146"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_29/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_89/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_89"
  op: "Sub"
  input: "training_2/Adam/sub_89/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_147"
  op: "Mul"
  input: "training_2/Adam/sub_89"
  input: "training_2/Adam/gradients/conv2d_14_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_88"
  op: "Add"
  input: "training_2/Adam/mul_146"
  input: "training_2/Adam/mul_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_148"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_83/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_90/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_90"
  op: "Sub"
  input: "training_2/Adam/sub_90/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_29"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_14_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_149"
  op: "Mul"
  input: "training_2/Adam/sub_90"
  input: "training_2/Adam/Square_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_89"
  op: "Add"
  input: "training_2/Adam/mul_148"
  input: "training_2/Adam/mul_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_150"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_61"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_30/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_89"
  input: "training_2/Adam/Const_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_30"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_30/Minimum"
  input: "training_2/Adam/Const_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_30"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_90/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_90"
  op: "Add"
  input: "training_2/Adam/Sqrt_30"
  input: "training_2/Adam/add_90/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_30"
  op: "RealDiv"
  input: "training_2/Adam/mul_150"
  input: "training_2/Adam/add_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_91"
  op: "Sub"
  input: "conv2d_14_1/bias/read"
  input: "training_2/Adam/truediv_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_87"
  op: "Assign"
  input: "training_2/Adam/Variable_29"
  input: "training_2/Adam/add_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_29"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_88"
  op: "Assign"
  input: "training_2/Adam/Variable_83"
  input: "training_2/Adam/add_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_83"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_89"
  op: "Assign"
  input: "conv2d_14_1/bias"
  input: "training_2/Adam/sub_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_151"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_30/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_92/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_92"
  op: "Sub"
  input: "training_2/Adam/sub_92/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_152"
  op: "Mul"
  input: "training_2/Adam/sub_92"
  input: "training_2/Adam/gradients/conv2d_16_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_91"
  op: "Add"
  input: "training_2/Adam/mul_151"
  input: "training_2/Adam/mul_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_153"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_84/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_93/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_93"
  op: "Sub"
  input: "training_2/Adam/sub_93/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_30"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_16_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_154"
  op: "Mul"
  input: "training_2/Adam/sub_93"
  input: "training_2/Adam/Square_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_92"
  op: "Add"
  input: "training_2/Adam/mul_153"
  input: "training_2/Adam/mul_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_155"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_31/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_92"
  input: "training_2/Adam/Const_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_31"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_31/Minimum"
  input: "training_2/Adam/Const_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_31"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_93/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_93"
  op: "Add"
  input: "training_2/Adam/Sqrt_31"
  input: "training_2/Adam/add_93/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_31"
  op: "RealDiv"
  input: "training_2/Adam/mul_155"
  input: "training_2/Adam/add_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_94"
  op: "Sub"
  input: "conv2d_16_1/kernel/read"
  input: "training_2/Adam/truediv_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_90"
  op: "Assign"
  input: "training_2/Adam/Variable_30"
  input: "training_2/Adam/add_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_30"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_91"
  op: "Assign"
  input: "training_2/Adam/Variable_84"
  input: "training_2/Adam/add_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_84"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_92"
  op: "Assign"
  input: "conv2d_16_1/kernel"
  input: "training_2/Adam/sub_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_156"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_31/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_95/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_95"
  op: "Sub"
  input: "training_2/Adam/sub_95/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_157"
  op: "Mul"
  input: "training_2/Adam/sub_95"
  input: "training_2/Adam/gradients/conv2d_16_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_94"
  op: "Add"
  input: "training_2/Adam/mul_156"
  input: "training_2/Adam/mul_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_158"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_85/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_96/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_96"
  op: "Sub"
  input: "training_2/Adam/sub_96/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_31"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_16_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_159"
  op: "Mul"
  input: "training_2/Adam/sub_96"
  input: "training_2/Adam/Square_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_95"
  op: "Add"
  input: "training_2/Adam/mul_158"
  input: "training_2/Adam/mul_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_160"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_64"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_32/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_95"
  input: "training_2/Adam/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_32"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_32/Minimum"
  input: "training_2/Adam/Const_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_32"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_96/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_96"
  op: "Add"
  input: "training_2/Adam/Sqrt_32"
  input: "training_2/Adam/add_96/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_32"
  op: "RealDiv"
  input: "training_2/Adam/mul_160"
  input: "training_2/Adam/add_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_97"
  op: "Sub"
  input: "conv2d_16_1/bias/read"
  input: "training_2/Adam/truediv_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_93"
  op: "Assign"
  input: "training_2/Adam/Variable_31"
  input: "training_2/Adam/add_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_31"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_94"
  op: "Assign"
  input: "training_2/Adam/Variable_85"
  input: "training_2/Adam/add_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_85"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_95"
  op: "Assign"
  input: "conv2d_16_1/bias"
  input: "training_2/Adam/sub_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_161"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_32/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_98/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_98"
  op: "Sub"
  input: "training_2/Adam/sub_98/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_162"
  op: "Mul"
  input: "training_2/Adam/sub_98"
  input: "training_2/Adam/gradients/conv2d_13_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_97"
  op: "Add"
  input: "training_2/Adam/mul_161"
  input: "training_2/Adam/mul_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_163"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_86/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_99/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_99"
  op: "Sub"
  input: "training_2/Adam/sub_99/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_32"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_13_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_164"
  op: "Mul"
  input: "training_2/Adam/sub_99"
  input: "training_2/Adam/Square_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_98"
  op: "Add"
  input: "training_2/Adam/mul_163"
  input: "training_2/Adam/mul_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_165"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_67"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_33/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_98"
  input: "training_2/Adam/Const_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_33"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_33/Minimum"
  input: "training_2/Adam/Const_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_33"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_99/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_99"
  op: "Add"
  input: "training_2/Adam/Sqrt_33"
  input: "training_2/Adam/add_99/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_33"
  op: "RealDiv"
  input: "training_2/Adam/mul_165"
  input: "training_2/Adam/add_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_100"
  op: "Sub"
  input: "conv2d_13_1/kernel/read"
  input: "training_2/Adam/truediv_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_96"
  op: "Assign"
  input: "training_2/Adam/Variable_32"
  input: "training_2/Adam/add_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_32"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_97"
  op: "Assign"
  input: "training_2/Adam/Variable_86"
  input: "training_2/Adam/add_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_86"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_98"
  op: "Assign"
  input: "conv2d_13_1/kernel"
  input: "training_2/Adam/sub_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_166"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_33/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_101/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_101"
  op: "Sub"
  input: "training_2/Adam/sub_101/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_167"
  op: "Mul"
  input: "training_2/Adam/sub_101"
  input: "training_2/Adam/gradients/conv2d_13_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_100"
  op: "Add"
  input: "training_2/Adam/mul_166"
  input: "training_2/Adam/mul_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_168"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_87/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_102/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_102"
  op: "Sub"
  input: "training_2/Adam/sub_102/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_33"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_13_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_169"
  op: "Mul"
  input: "training_2/Adam/sub_102"
  input: "training_2/Adam/Square_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_101"
  op: "Add"
  input: "training_2/Adam/mul_168"
  input: "training_2/Adam/mul_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_170"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_34/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_101"
  input: "training_2/Adam/Const_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_34"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_34/Minimum"
  input: "training_2/Adam/Const_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_34"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_102/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_102"
  op: "Add"
  input: "training_2/Adam/Sqrt_34"
  input: "training_2/Adam/add_102/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_34"
  op: "RealDiv"
  input: "training_2/Adam/mul_170"
  input: "training_2/Adam/add_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_103"
  op: "Sub"
  input: "conv2d_13_1/bias/read"
  input: "training_2/Adam/truediv_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_99"
  op: "Assign"
  input: "training_2/Adam/Variable_33"
  input: "training_2/Adam/add_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_33"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_100"
  op: "Assign"
  input: "training_2/Adam/Variable_87"
  input: "training_2/Adam/add_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_87"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_101"
  op: "Assign"
  input: "conv2d_13_1/bias"
  input: "training_2/Adam/sub_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_171"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_34/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_104/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_104"
  op: "Sub"
  input: "training_2/Adam/sub_104/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_172"
  op: "Mul"
  input: "training_2/Adam/sub_104"
  input: "training_2/Adam/gradients/conv2d_15_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_103"
  op: "Add"
  input: "training_2/Adam/mul_171"
  input: "training_2/Adam/mul_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_173"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_88/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_105/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_105"
  op: "Sub"
  input: "training_2/Adam/sub_105/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_34"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_15_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_174"
  op: "Mul"
  input: "training_2/Adam/sub_105"
  input: "training_2/Adam/Square_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_104"
  op: "Add"
  input: "training_2/Adam/mul_173"
  input: "training_2/Adam/mul_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_175"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_70"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_35/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_104"
  input: "training_2/Adam/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_35"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_35/Minimum"
  input: "training_2/Adam/Const_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_35"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_105/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_105"
  op: "Add"
  input: "training_2/Adam/Sqrt_35"
  input: "training_2/Adam/add_105/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_35"
  op: "RealDiv"
  input: "training_2/Adam/mul_175"
  input: "training_2/Adam/add_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_106"
  op: "Sub"
  input: "conv2d_15_1/kernel/read"
  input: "training_2/Adam/truediv_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_102"
  op: "Assign"
  input: "training_2/Adam/Variable_34"
  input: "training_2/Adam/add_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_34"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_103"
  op: "Assign"
  input: "training_2/Adam/Variable_88"
  input: "training_2/Adam/add_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_88"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_104"
  op: "Assign"
  input: "conv2d_15_1/kernel"
  input: "training_2/Adam/sub_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_176"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_35/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_107/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_107"
  op: "Sub"
  input: "training_2/Adam/sub_107/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_177"
  op: "Mul"
  input: "training_2/Adam/sub_107"
  input: "training_2/Adam/gradients/conv2d_15_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_106"
  op: "Add"
  input: "training_2/Adam/mul_176"
  input: "training_2/Adam/mul_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_178"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_89/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_108/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_108"
  op: "Sub"
  input: "training_2/Adam/sub_108/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_35"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_15_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_179"
  op: "Mul"
  input: "training_2/Adam/sub_108"
  input: "training_2/Adam/Square_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_107"
  op: "Add"
  input: "training_2/Adam/mul_178"
  input: "training_2/Adam/mul_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_180"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_73"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_36/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_107"
  input: "training_2/Adam/Const_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_36"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_36/Minimum"
  input: "training_2/Adam/Const_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_36"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_108/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_108"
  op: "Add"
  input: "training_2/Adam/Sqrt_36"
  input: "training_2/Adam/add_108/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_36"
  op: "RealDiv"
  input: "training_2/Adam/mul_180"
  input: "training_2/Adam/add_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_109"
  op: "Sub"
  input: "conv2d_15_1/bias/read"
  input: "training_2/Adam/truediv_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_105"
  op: "Assign"
  input: "training_2/Adam/Variable_35"
  input: "training_2/Adam/add_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_35"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_106"
  op: "Assign"
  input: "training_2/Adam/Variable_89"
  input: "training_2/Adam/add_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_89"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_107"
  op: "Assign"
  input: "conv2d_15_1/bias"
  input: "training_2/Adam/sub_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_181"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_36/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_110/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_110"
  op: "Sub"
  input: "training_2/Adam/sub_110/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_182"
  op: "Mul"
  input: "training_2/Adam/sub_110"
  input: "training_2/Adam/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_109"
  op: "Add"
  input: "training_2/Adam/mul_181"
  input: "training_2/Adam/mul_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_183"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_90/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_111/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_111"
  op: "Sub"
  input: "training_2/Adam/sub_111/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_36"
  op: "Square"
  input: "training_2/Adam/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_184"
  op: "Mul"
  input: "training_2/Adam/sub_111"
  input: "training_2/Adam/Square_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_110"
  op: "Add"
  input: "training_2/Adam/mul_183"
  input: "training_2/Adam/mul_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_185"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_37/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_110"
  input: "training_2/Adam/Const_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_37"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_37/Minimum"
  input: "training_2/Adam/Const_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_37"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_111/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_111"
  op: "Add"
  input: "training_2/Adam/Sqrt_37"
  input: "training_2/Adam/add_111/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_37"
  op: "RealDiv"
  input: "training_2/Adam/mul_185"
  input: "training_2/Adam/add_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_112"
  op: "Sub"
  input: "batch_normalization_3_1/gamma/read"
  input: "training_2/Adam/truediv_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_108"
  op: "Assign"
  input: "training_2/Adam/Variable_36"
  input: "training_2/Adam/add_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_36"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_109"
  op: "Assign"
  input: "training_2/Adam/Variable_90"
  input: "training_2/Adam/add_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_90"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_110"
  op: "Assign"
  input: "batch_normalization_3_1/gamma"
  input: "training_2/Adam/sub_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_186"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_37/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_113/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_113"
  op: "Sub"
  input: "training_2/Adam/sub_113/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_187"
  op: "Mul"
  input: "training_2/Adam/sub_113"
  input: "training_2/Adam/gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_112"
  op: "Add"
  input: "training_2/Adam/mul_186"
  input: "training_2/Adam/mul_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_188"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_91/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_114/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_114"
  op: "Sub"
  input: "training_2/Adam/sub_114/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_37"
  op: "Square"
  input: "training_2/Adam/gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_189"
  op: "Mul"
  input: "training_2/Adam/sub_114"
  input: "training_2/Adam/Square_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_113"
  op: "Add"
  input: "training_2/Adam/mul_188"
  input: "training_2/Adam/mul_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_190"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_76"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_38/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_113"
  input: "training_2/Adam/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_38"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_38/Minimum"
  input: "training_2/Adam/Const_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_38"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_114/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_114"
  op: "Add"
  input: "training_2/Adam/Sqrt_38"
  input: "training_2/Adam/add_114/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_38"
  op: "RealDiv"
  input: "training_2/Adam/mul_190"
  input: "training_2/Adam/add_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_115"
  op: "Sub"
  input: "batch_normalization_3_1/beta/read"
  input: "training_2/Adam/truediv_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_111"
  op: "Assign"
  input: "training_2/Adam/Variable_37"
  input: "training_2/Adam/add_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_37"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_112"
  op: "Assign"
  input: "training_2/Adam/Variable_91"
  input: "training_2/Adam/add_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_91"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_113"
  op: "Assign"
  input: "batch_normalization_3_1/beta"
  input: "training_2/Adam/sub_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_191"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_38/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_116/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_116"
  op: "Sub"
  input: "training_2/Adam/sub_116/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_192"
  op: "Mul"
  input: "training_2/Adam/sub_116"
  input: "training_2/Adam/gradients/conv2d_17_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_115"
  op: "Add"
  input: "training_2/Adam/mul_191"
  input: "training_2/Adam/mul_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_193"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_92/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_117/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_117"
  op: "Sub"
  input: "training_2/Adam/sub_117/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_38"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_17_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_194"
  op: "Mul"
  input: "training_2/Adam/sub_117"
  input: "training_2/Adam/Square_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_116"
  op: "Add"
  input: "training_2/Adam/mul_193"
  input: "training_2/Adam/mul_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_195"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_79"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_39/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_116"
  input: "training_2/Adam/Const_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_39"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_39/Minimum"
  input: "training_2/Adam/Const_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_39"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_117/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_117"
  op: "Add"
  input: "training_2/Adam/Sqrt_39"
  input: "training_2/Adam/add_117/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_39"
  op: "RealDiv"
  input: "training_2/Adam/mul_195"
  input: "training_2/Adam/add_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_118"
  op: "Sub"
  input: "conv2d_17_1/kernel/read"
  input: "training_2/Adam/truediv_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_114"
  op: "Assign"
  input: "training_2/Adam/Variable_38"
  input: "training_2/Adam/add_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_38"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_115"
  op: "Assign"
  input: "training_2/Adam/Variable_92"
  input: "training_2/Adam/add_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_92"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_116"
  op: "Assign"
  input: "conv2d_17_1/kernel"
  input: "training_2/Adam/sub_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_196"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_39/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_119/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_119"
  op: "Sub"
  input: "training_2/Adam/sub_119/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_197"
  op: "Mul"
  input: "training_2/Adam/sub_119"
  input: "training_2/Adam/gradients/conv2d_17_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_118"
  op: "Add"
  input: "training_2/Adam/mul_196"
  input: "training_2/Adam/mul_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_198"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_93/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_120/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_120"
  op: "Sub"
  input: "training_2/Adam/sub_120/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_39"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_17_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_199"
  op: "Mul"
  input: "training_2/Adam/sub_120"
  input: "training_2/Adam/Square_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_119"
  op: "Add"
  input: "training_2/Adam/mul_198"
  input: "training_2/Adam/mul_199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_200"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_80"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_81"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_40/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_119"
  input: "training_2/Adam/Const_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_40"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_40/Minimum"
  input: "training_2/Adam/Const_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_40"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_120/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_120"
  op: "Add"
  input: "training_2/Adam/Sqrt_40"
  input: "training_2/Adam/add_120/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_40"
  op: "RealDiv"
  input: "training_2/Adam/mul_200"
  input: "training_2/Adam/add_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_121"
  op: "Sub"
  input: "conv2d_17_1/bias/read"
  input: "training_2/Adam/truediv_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_117"
  op: "Assign"
  input: "training_2/Adam/Variable_39"
  input: "training_2/Adam/add_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_39"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_118"
  op: "Assign"
  input: "training_2/Adam/Variable_93"
  input: "training_2/Adam/add_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_93"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_119"
  op: "Assign"
  input: "conv2d_17_1/bias"
  input: "training_2/Adam/sub_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_201"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_40/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_122/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_122"
  op: "Sub"
  input: "training_2/Adam/sub_122/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_202"
  op: "Mul"
  input: "training_2/Adam/sub_122"
  input: "training_2/Adam/gradients/conv2d_19_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_121"
  op: "Add"
  input: "training_2/Adam/mul_201"
  input: "training_2/Adam/mul_202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_203"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_94/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_123/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_123"
  op: "Sub"
  input: "training_2/Adam/sub_123/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_40"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_19_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_204"
  op: "Mul"
  input: "training_2/Adam/sub_123"
  input: "training_2/Adam/Square_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_122"
  op: "Add"
  input: "training_2/Adam/mul_203"
  input: "training_2/Adam/mul_204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_205"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_82"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_83"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_41/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_122"
  input: "training_2/Adam/Const_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_41"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_41/Minimum"
  input: "training_2/Adam/Const_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_41"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_123/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_123"
  op: "Add"
  input: "training_2/Adam/Sqrt_41"
  input: "training_2/Adam/add_123/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_41"
  op: "RealDiv"
  input: "training_2/Adam/mul_205"
  input: "training_2/Adam/add_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_124"
  op: "Sub"
  input: "conv2d_19_1/kernel/read"
  input: "training_2/Adam/truediv_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_120"
  op: "Assign"
  input: "training_2/Adam/Variable_40"
  input: "training_2/Adam/add_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_40"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_121"
  op: "Assign"
  input: "training_2/Adam/Variable_94"
  input: "training_2/Adam/add_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_94"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_122"
  op: "Assign"
  input: "conv2d_19_1/kernel"
  input: "training_2/Adam/sub_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_206"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_41/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_125/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_125"
  op: "Sub"
  input: "training_2/Adam/sub_125/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_207"
  op: "Mul"
  input: "training_2/Adam/sub_125"
  input: "training_2/Adam/gradients/conv2d_19_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_124"
  op: "Add"
  input: "training_2/Adam/mul_206"
  input: "training_2/Adam/mul_207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_208"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_95/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_126/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_126"
  op: "Sub"
  input: "training_2/Adam/sub_126/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_41"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_19_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_209"
  op: "Mul"
  input: "training_2/Adam/sub_126"
  input: "training_2/Adam/Square_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_125"
  op: "Add"
  input: "training_2/Adam/mul_208"
  input: "training_2/Adam/mul_209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_210"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_84"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_85"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_42/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_125"
  input: "training_2/Adam/Const_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_42"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_42/Minimum"
  input: "training_2/Adam/Const_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_42"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_126/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_126"
  op: "Add"
  input: "training_2/Adam/Sqrt_42"
  input: "training_2/Adam/add_126/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_42"
  op: "RealDiv"
  input: "training_2/Adam/mul_210"
  input: "training_2/Adam/add_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_127"
  op: "Sub"
  input: "conv2d_19_1/bias/read"
  input: "training_2/Adam/truediv_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_123"
  op: "Assign"
  input: "training_2/Adam/Variable_41"
  input: "training_2/Adam/add_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_41"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_124"
  op: "Assign"
  input: "training_2/Adam/Variable_95"
  input: "training_2/Adam/add_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_95"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_125"
  op: "Assign"
  input: "conv2d_19_1/bias"
  input: "training_2/Adam/sub_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_211"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_42/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_128/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_128"
  op: "Sub"
  input: "training_2/Adam/sub_128/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_212"
  op: "Mul"
  input: "training_2/Adam/sub_128"
  input: "training_2/Adam/gradients/conv2d_18_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_127"
  op: "Add"
  input: "training_2/Adam/mul_211"
  input: "training_2/Adam/mul_212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_213"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_96/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_129/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_129"
  op: "Sub"
  input: "training_2/Adam/sub_129/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_42"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_18_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_214"
  op: "Mul"
  input: "training_2/Adam/sub_129"
  input: "training_2/Adam/Square_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_128"
  op: "Add"
  input: "training_2/Adam/mul_213"
  input: "training_2/Adam/mul_214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_215"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_86"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_87"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_43/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_128"
  input: "training_2/Adam/Const_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_43"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_43/Minimum"
  input: "training_2/Adam/Const_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_43"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_129/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_129"
  op: "Add"
  input: "training_2/Adam/Sqrt_43"
  input: "training_2/Adam/add_129/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_43"
  op: "RealDiv"
  input: "training_2/Adam/mul_215"
  input: "training_2/Adam/add_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_130"
  op: "Sub"
  input: "conv2d_18_1/kernel/read"
  input: "training_2/Adam/truediv_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_126"
  op: "Assign"
  input: "training_2/Adam/Variable_42"
  input: "training_2/Adam/add_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_42"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_127"
  op: "Assign"
  input: "training_2/Adam/Variable_96"
  input: "training_2/Adam/add_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_96"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_128"
  op: "Assign"
  input: "conv2d_18_1/kernel"
  input: "training_2/Adam/sub_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_216"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_43/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_131/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_131"
  op: "Sub"
  input: "training_2/Adam/sub_131/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_217"
  op: "Mul"
  input: "training_2/Adam/sub_131"
  input: "training_2/Adam/gradients/conv2d_18_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_130"
  op: "Add"
  input: "training_2/Adam/mul_216"
  input: "training_2/Adam/mul_217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_218"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_97/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_132/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_132"
  op: "Sub"
  input: "training_2/Adam/sub_132/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_43"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_18_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_219"
  op: "Mul"
  input: "training_2/Adam/sub_132"
  input: "training_2/Adam/Square_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_131"
  op: "Add"
  input: "training_2/Adam/mul_218"
  input: "training_2/Adam/mul_219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_220"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_88"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_89"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_44/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_131"
  input: "training_2/Adam/Const_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_44"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_44/Minimum"
  input: "training_2/Adam/Const_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_44"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_132/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_132"
  op: "Add"
  input: "training_2/Adam/Sqrt_44"
  input: "training_2/Adam/add_132/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_44"
  op: "RealDiv"
  input: "training_2/Adam/mul_220"
  input: "training_2/Adam/add_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_133"
  op: "Sub"
  input: "conv2d_18_1/bias/read"
  input: "training_2/Adam/truediv_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_129"
  op: "Assign"
  input: "training_2/Adam/Variable_43"
  input: "training_2/Adam/add_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_43"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_130"
  op: "Assign"
  input: "training_2/Adam/Variable_97"
  input: "training_2/Adam/add_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_97"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_131"
  op: "Assign"
  input: "conv2d_18_1/bias"
  input: "training_2/Adam/sub_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_221"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_44/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_134/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_134"
  op: "Sub"
  input: "training_2/Adam/sub_134/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_222"
  op: "Mul"
  input: "training_2/Adam/sub_134"
  input: "training_2/Adam/gradients/conv2d_20_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_133"
  op: "Add"
  input: "training_2/Adam/mul_221"
  input: "training_2/Adam/mul_222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_223"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_98/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_135/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_135"
  op: "Sub"
  input: "training_2/Adam/sub_135/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_44"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_20_1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_224"
  op: "Mul"
  input: "training_2/Adam/sub_135"
  input: "training_2/Adam/Square_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_134"
  op: "Add"
  input: "training_2/Adam/mul_223"
  input: "training_2/Adam/mul_224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_225"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_90"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_91"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_45/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_134"
  input: "training_2/Adam/Const_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_45"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_45/Minimum"
  input: "training_2/Adam/Const_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_45"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_135/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_135"
  op: "Add"
  input: "training_2/Adam/Sqrt_45"
  input: "training_2/Adam/add_135/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_45"
  op: "RealDiv"
  input: "training_2/Adam/mul_225"
  input: "training_2/Adam/add_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_136"
  op: "Sub"
  input: "conv2d_20_1/kernel/read"
  input: "training_2/Adam/truediv_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_132"
  op: "Assign"
  input: "training_2/Adam/Variable_44"
  input: "training_2/Adam/add_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_44"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_133"
  op: "Assign"
  input: "training_2/Adam/Variable_98"
  input: "training_2/Adam/add_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_98"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_134"
  op: "Assign"
  input: "conv2d_20_1/kernel"
  input: "training_2/Adam/sub_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_226"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_45/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_137/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_137"
  op: "Sub"
  input: "training_2/Adam/sub_137/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_227"
  op: "Mul"
  input: "training_2/Adam/sub_137"
  input: "training_2/Adam/gradients/conv2d_20_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_136"
  op: "Add"
  input: "training_2/Adam/mul_226"
  input: "training_2/Adam/mul_227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_228"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_99/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_138/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_138"
  op: "Sub"
  input: "training_2/Adam/sub_138/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_45"
  op: "Square"
  input: "training_2/Adam/gradients/conv2d_20_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_229"
  op: "Mul"
  input: "training_2/Adam/sub_138"
  input: "training_2/Adam/Square_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_137"
  op: "Add"
  input: "training_2/Adam/mul_228"
  input: "training_2/Adam/mul_229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_230"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_92"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_93"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_46/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_137"
  input: "training_2/Adam/Const_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_46"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_46/Minimum"
  input: "training_2/Adam/Const_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_46"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_138/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_138"
  op: "Add"
  input: "training_2/Adam/Sqrt_46"
  input: "training_2/Adam/add_138/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_46"
  op: "RealDiv"
  input: "training_2/Adam/mul_230"
  input: "training_2/Adam/add_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_139"
  op: "Sub"
  input: "conv2d_20_1/bias/read"
  input: "training_2/Adam/truediv_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_135"
  op: "Assign"
  input: "training_2/Adam/Variable_45"
  input: "training_2/Adam/add_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_45"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_136"
  op: "Assign"
  input: "training_2/Adam/Variable_99"
  input: "training_2/Adam/add_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_99"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_137"
  op: "Assign"
  input: "conv2d_20_1/bias"
  input: "training_2/Adam/sub_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_231"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_46/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_140/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_140"
  op: "Sub"
  input: "training_2/Adam/sub_140/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_232"
  op: "Mul"
  input: "training_2/Adam/sub_140"
  input: "training_2/Adam/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_139"
  op: "Add"
  input: "training_2/Adam/mul_231"
  input: "training_2/Adam/mul_232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_233"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_100/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_141/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_141"
  op: "Sub"
  input: "training_2/Adam/sub_141/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_46"
  op: "Square"
  input: "training_2/Adam/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_234"
  op: "Mul"
  input: "training_2/Adam/sub_141"
  input: "training_2/Adam/Square_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_140"
  op: "Add"
  input: "training_2/Adam/mul_233"
  input: "training_2/Adam/mul_234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_235"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_94"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_95"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_47/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_140"
  input: "training_2/Adam/Const_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_47"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_47/Minimum"
  input: "training_2/Adam/Const_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_47"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_141/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_141"
  op: "Add"
  input: "training_2/Adam/Sqrt_47"
  input: "training_2/Adam/add_141/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_47"
  op: "RealDiv"
  input: "training_2/Adam/mul_235"
  input: "training_2/Adam/add_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_142"
  op: "Sub"
  input: "batch_normalization_4_1/gamma/read"
  input: "training_2/Adam/truediv_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_138"
  op: "Assign"
  input: "training_2/Adam/Variable_46"
  input: "training_2/Adam/add_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_46"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_139"
  op: "Assign"
  input: "training_2/Adam/Variable_100"
  input: "training_2/Adam/add_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_100"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_140"
  op: "Assign"
  input: "batch_normalization_4_1/gamma"
  input: "training_2/Adam/sub_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_236"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_47/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_143/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_143"
  op: "Sub"
  input: "training_2/Adam/sub_143/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_237"
  op: "Mul"
  input: "training_2/Adam/sub_143"
  input: "training_2/Adam/gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_142"
  op: "Add"
  input: "training_2/Adam/mul_236"
  input: "training_2/Adam/mul_237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_238"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_101/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_144/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_144"
  op: "Sub"
  input: "training_2/Adam/sub_144/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_47"
  op: "Square"
  input: "training_2/Adam/gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_239"
  op: "Mul"
  input: "training_2/Adam/sub_144"
  input: "training_2/Adam/Square_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_143"
  op: "Add"
  input: "training_2/Adam/mul_238"
  input: "training_2/Adam/mul_239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_240"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_96"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_97"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_48/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_143"
  input: "training_2/Adam/Const_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_48"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_48/Minimum"
  input: "training_2/Adam/Const_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_48"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_144/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_144"
  op: "Add"
  input: "training_2/Adam/Sqrt_48"
  input: "training_2/Adam/add_144/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_48"
  op: "RealDiv"
  input: "training_2/Adam/mul_240"
  input: "training_2/Adam/add_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_145"
  op: "Sub"
  input: "batch_normalization_4_1/beta/read"
  input: "training_2/Adam/truediv_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_141"
  op: "Assign"
  input: "training_2/Adam/Variable_47"
  input: "training_2/Adam/add_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_47"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_142"
  op: "Assign"
  input: "training_2/Adam/Variable_101"
  input: "training_2/Adam/add_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_101"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_143"
  op: "Assign"
  input: "batch_normalization_4_1/beta"
  input: "training_2/Adam/sub_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_241"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_48/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_146/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_146"
  op: "Sub"
  input: "training_2/Adam/sub_146/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_242"
  op: "Mul"
  input: "training_2/Adam/sub_146"
  input: "training_2/Adam/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_145"
  op: "Add"
  input: "training_2/Adam/mul_241"
  input: "training_2/Adam/mul_242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_243"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_102/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_147/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_147"
  op: "Sub"
  input: "training_2/Adam/sub_147/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_48"
  op: "Square"
  input: "training_2/Adam/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_244"
  op: "Mul"
  input: "training_2/Adam/sub_147"
  input: "training_2/Adam/Square_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_146"
  op: "Add"
  input: "training_2/Adam/mul_243"
  input: "training_2/Adam/mul_244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_245"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_98"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_99"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_49/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_146"
  input: "training_2/Adam/Const_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_49"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_49/Minimum"
  input: "training_2/Adam/Const_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_49"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_147/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_147"
  op: "Add"
  input: "training_2/Adam/Sqrt_49"
  input: "training_2/Adam/add_147/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_49"
  op: "RealDiv"
  input: "training_2/Adam/mul_245"
  input: "training_2/Adam/add_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_148"
  op: "Sub"
  input: "batch_normalization_5_1/gamma/read"
  input: "training_2/Adam/truediv_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_144"
  op: "Assign"
  input: "training_2/Adam/Variable_48"
  input: "training_2/Adam/add_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_48"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_145"
  op: "Assign"
  input: "training_2/Adam/Variable_102"
  input: "training_2/Adam/add_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_102"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_146"
  op: "Assign"
  input: "batch_normalization_5_1/gamma"
  input: "training_2/Adam/sub_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_246"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_49/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_149/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_149"
  op: "Sub"
  input: "training_2/Adam/sub_149/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_247"
  op: "Mul"
  input: "training_2/Adam/sub_149"
  input: "training_2/Adam/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_148"
  op: "Add"
  input: "training_2/Adam/mul_246"
  input: "training_2/Adam/mul_247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_248"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_103/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_150/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_150"
  op: "Sub"
  input: "training_2/Adam/sub_150/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_49"
  op: "Square"
  input: "training_2/Adam/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_249"
  op: "Mul"
  input: "training_2/Adam/sub_150"
  input: "training_2/Adam/Square_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_149"
  op: "Add"
  input: "training_2/Adam/mul_248"
  input: "training_2/Adam/mul_249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_250"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_100"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_101"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_50/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_149"
  input: "training_2/Adam/Const_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_50"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_50/Minimum"
  input: "training_2/Adam/Const_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_50"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_150/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_150"
  op: "Add"
  input: "training_2/Adam/Sqrt_50"
  input: "training_2/Adam/add_150/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_50"
  op: "RealDiv"
  input: "training_2/Adam/mul_250"
  input: "training_2/Adam/add_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_151"
  op: "Sub"
  input: "batch_normalization_5_1/beta/read"
  input: "training_2/Adam/truediv_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_147"
  op: "Assign"
  input: "training_2/Adam/Variable_49"
  input: "training_2/Adam/add_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_49"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_148"
  op: "Assign"
  input: "training_2/Adam/Variable_103"
  input: "training_2/Adam/add_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_103"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_149"
  op: "Assign"
  input: "batch_normalization_5_1/beta"
  input: "training_2/Adam/sub_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_251"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_50/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_152/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_152"
  op: "Sub"
  input: "training_2/Adam/sub_152/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_252"
  op: "Mul"
  input: "training_2/Adam/sub_152"
  input: "training_2/Adam/gradients/dense_1_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_151"
  op: "Add"
  input: "training_2/Adam/mul_251"
  input: "training_2/Adam/mul_252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_253"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_104/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_153/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_153"
  op: "Sub"
  input: "training_2/Adam/sub_153/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_50"
  op: "Square"
  input: "training_2/Adam/gradients/dense_1_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_254"
  op: "Mul"
  input: "training_2/Adam/sub_153"
  input: "training_2/Adam/Square_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_152"
  op: "Add"
  input: "training_2/Adam/mul_253"
  input: "training_2/Adam/mul_254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_255"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_102"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_103"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_51/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_152"
  input: "training_2/Adam/Const_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_51"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_51/Minimum"
  input: "training_2/Adam/Const_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_51"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_153/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_153"
  op: "Add"
  input: "training_2/Adam/Sqrt_51"
  input: "training_2/Adam/add_153/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_51"
  op: "RealDiv"
  input: "training_2/Adam/mul_255"
  input: "training_2/Adam/add_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_154"
  op: "Sub"
  input: "dense_1_1/kernel/read"
  input: "training_2/Adam/truediv_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_150"
  op: "Assign"
  input: "training_2/Adam/Variable_50"
  input: "training_2/Adam/add_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_50"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_151"
  op: "Assign"
  input: "training_2/Adam/Variable_104"
  input: "training_2/Adam/add_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_104"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_152"
  op: "Assign"
  input: "dense_1_1/kernel"
  input: "training_2/Adam/sub_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_256"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_51/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_155/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_155"
  op: "Sub"
  input: "training_2/Adam/sub_155/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_257"
  op: "Mul"
  input: "training_2/Adam/sub_155"
  input: "training_2/Adam/gradients/dense_1_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_154"
  op: "Add"
  input: "training_2/Adam/mul_256"
  input: "training_2/Adam/mul_257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_258"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_105/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_156/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_156"
  op: "Sub"
  input: "training_2/Adam/sub_156/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_51"
  op: "Square"
  input: "training_2/Adam/gradients/dense_1_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_259"
  op: "Mul"
  input: "training_2/Adam/sub_156"
  input: "training_2/Adam/Square_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_155"
  op: "Add"
  input: "training_2/Adam/mul_258"
  input: "training_2/Adam/mul_259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_260"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_104"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_105"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_52/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_155"
  input: "training_2/Adam/Const_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_52"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_52/Minimum"
  input: "training_2/Adam/Const_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_52"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_156/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_156"
  op: "Add"
  input: "training_2/Adam/Sqrt_52"
  input: "training_2/Adam/add_156/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_52"
  op: "RealDiv"
  input: "training_2/Adam/mul_260"
  input: "training_2/Adam/add_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_157"
  op: "Sub"
  input: "dense_1_1/bias/read"
  input: "training_2/Adam/truediv_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_153"
  op: "Assign"
  input: "training_2/Adam/Variable_51"
  input: "training_2/Adam/add_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_51"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_154"
  op: "Assign"
  input: "training_2/Adam/Variable_105"
  input: "training_2/Adam/add_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_105"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_155"
  op: "Assign"
  input: "dense_1_1/bias"
  input: "training_2/Adam/sub_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_261"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_52/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_158/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_158"
  op: "Sub"
  input: "training_2/Adam/sub_158/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_262"
  op: "Mul"
  input: "training_2/Adam/sub_158"
  input: "training_2/Adam/gradients/y_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_157"
  op: "Add"
  input: "training_2/Adam/mul_261"
  input: "training_2/Adam/mul_262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_263"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_106/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_159/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_159"
  op: "Sub"
  input: "training_2/Adam/sub_159/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_52"
  op: "Square"
  input: "training_2/Adam/gradients/y_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_264"
  op: "Mul"
  input: "training_2/Adam/sub_159"
  input: "training_2/Adam/Square_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_158"
  op: "Add"
  input: "training_2/Adam/mul_263"
  input: "training_2/Adam/mul_264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_265"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_106"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_107"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_53/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_158"
  input: "training_2/Adam/Const_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_53"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_53/Minimum"
  input: "training_2/Adam/Const_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_53"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_159/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_159"
  op: "Add"
  input: "training_2/Adam/Sqrt_53"
  input: "training_2/Adam/add_159/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_53"
  op: "RealDiv"
  input: "training_2/Adam/mul_265"
  input: "training_2/Adam/add_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_160"
  op: "Sub"
  input: "y_1/kernel/read"
  input: "training_2/Adam/truediv_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_156"
  op: "Assign"
  input: "training_2/Adam/Variable_52"
  input: "training_2/Adam/add_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_52"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_157"
  op: "Assign"
  input: "training_2/Adam/Variable_106"
  input: "training_2/Adam/add_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_106"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_158"
  op: "Assign"
  input: "y_1/kernel"
  input: "training_2/Adam/sub_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/mul_266"
  op: "Mul"
  input: "Adam_1/beta_1/read"
  input: "training_2/Adam/Variable_53/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_161/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_161"
  op: "Sub"
  input: "training_2/Adam/sub_161/x"
  input: "Adam_1/beta_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_267"
  op: "Mul"
  input: "training_2/Adam/sub_161"
  input: "training_2/Adam/gradients/y_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_160"
  op: "Add"
  input: "training_2/Adam/mul_266"
  input: "training_2/Adam/mul_267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_268"
  op: "Mul"
  input: "Adam_1/beta_2/read"
  input: "training_2/Adam/Variable_107/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_162/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training_2/Adam/sub_162"
  op: "Sub"
  input: "training_2/Adam/sub_162/x"
  input: "Adam_1/beta_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Square_53"
  op: "Square"
  input: "training_2/Adam/gradients/y_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_269"
  op: "Mul"
  input: "training_2/Adam/sub_162"
  input: "training_2/Adam/Square_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_161"
  op: "Add"
  input: "training_2/Adam/mul_268"
  input: "training_2/Adam/mul_269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/mul_270"
  op: "Mul"
  input: "training_2/Adam/mul"
  input: "training_2/Adam/add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Const_108"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training_2/Adam/Const_109"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_54/Minimum"
  op: "Minimum"
  input: "training_2/Adam/add_161"
  input: "training_2/Adam/Const_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/clip_by_value_54"
  op: "Maximum"
  input: "training_2/Adam/clip_by_value_54/Minimum"
  input: "training_2/Adam/Const_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Sqrt_54"
  op: "Sqrt"
  input: "training_2/Adam/clip_by_value_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/add_162/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training_2/Adam/add_162"
  op: "Add"
  input: "training_2/Adam/Sqrt_54"
  input: "training_2/Adam/add_162/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/truediv_54"
  op: "RealDiv"
  input: "training_2/Adam/mul_270"
  input: "training_2/Adam/add_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/sub_163"
  op: "Sub"
  input: "y_1/bias/read"
  input: "training_2/Adam/truediv_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training_2/Adam/Assign_159"
  op: "Assign"
  input: "training_2/Adam/Variable_53"
  input: "training_2/Adam/add_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_53"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_160"
  op: "Assign"
  input: "training_2/Adam/Variable_107"
  input: "training_2/Adam/add_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_107"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/Adam/Assign_161"
  op: "Assign"
  input: "y_1/bias"
  input: "training_2/Adam/sub_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@y_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_2/group_deps"
  op: "NoOp"
  input: "^batch_normalization_1_1/AssignMovingAvg"
  input: "^batch_normalization_1_1/AssignMovingAvg_1"
  input: "^batch_normalization_2_1/AssignMovingAvg"
  input: "^batch_normalization_2_1/AssignMovingAvg_1"
  input: "^batch_normalization_3_1/AssignMovingAvg"
  input: "^batch_normalization_3_1/AssignMovingAvg_1"
  input: "^batch_normalization_4_1/AssignMovingAvg"
  input: "^batch_normalization_4_1/AssignMovingAvg_1"
  input: "^batch_normalization_5_1/AssignMovingAvg"
  input: "^batch_normalization_5_1/AssignMovingAvg_1"
  input: "^loss_1/mul"
  input: "^metrics_1/acc/Mean"
  input: "^metrics_1/get_f1/Mean"
  input: "^training_2/Adam/Assign"
  input: "^training_2/Adam/AssignAdd"
  input: "^training_2/Adam/Assign_1"
  input: "^training_2/Adam/Assign_10"
  input: "^training_2/Adam/Assign_100"
  input: "^training_2/Adam/Assign_101"
  input: "^training_2/Adam/Assign_102"
  input: "^training_2/Adam/Assign_103"
  input: "^training_2/Adam/Assign_104"
  input: "^training_2/Adam/Assign_105"
  input: "^training_2/Adam/Assign_106"
  input: "^training_2/Adam/Assign_107"
  input: "^training_2/Adam/Assign_108"
  input: "^training_2/Adam/Assign_109"
  input: "^training_2/Adam/Assign_11"
  input: "^training_2/Adam/Assign_110"
  input: "^training_2/Adam/Assign_111"
  input: "^training_2/Adam/Assign_112"
  input: "^training_2/Adam/Assign_113"
  input: "^training_2/Adam/Assign_114"
  input: "^training_2/Adam/Assign_115"
  input: "^training_2/Adam/Assign_116"
  input: "^training_2/Adam/Assign_117"
  input: "^training_2/Adam/Assign_118"
  input: "^training_2/Adam/Assign_119"
  input: "^training_2/Adam/Assign_12"
  input: "^training_2/Adam/Assign_120"
  input: "^training_2/Adam/Assign_121"
  input: "^training_2/Adam/Assign_122"
  input: "^training_2/Adam/Assign_123"
  input: "^training_2/Adam/Assign_124"
  input: "^training_2/Adam/Assign_125"
  input: "^training_2/Adam/Assign_126"
  input: "^training_2/Adam/Assign_127"
  input: "^training_2/Adam/Assign_128"
  input: "^training_2/Adam/Assign_129"
  input: "^training_2/Adam/Assign_13"
  input: "^training_2/Adam/Assign_130"
  input: "^training_2/Adam/Assign_131"
  input: "^training_2/Adam/Assign_132"
  input: "^training_2/Adam/Assign_133"
  input: "^training_2/Adam/Assign_134"
  input: "^training_2/Adam/Assign_135"
  input: "^training_2/Adam/Assign_136"
  input: "^training_2/Adam/Assign_137"
  input: "^training_2/Adam/Assign_138"
  input: "^training_2/Adam/Assign_139"
  input: "^training_2/Adam/Assign_14"
  input: "^training_2/Adam/Assign_140"
  input: "^training_2/Adam/Assign_141"
  input: "^training_2/Adam/Assign_142"
  input: "^training_2/Adam/Assign_143"
  input: "^training_2/Adam/Assign_144"
  input: "^training_2/Adam/Assign_145"
  input: "^training_2/Adam/Assign_146"
  input: "^training_2/Adam/Assign_147"
  input: "^training_2/Adam/Assign_148"
  input: "^training_2/Adam/Assign_149"
  input: "^training_2/Adam/Assign_15"
  input: "^training_2/Adam/Assign_150"
  input: "^training_2/Adam/Assign_151"
  input: "^training_2/Adam/Assign_152"
  input: "^training_2/Adam/Assign_153"
  input: "^training_2/Adam/Assign_154"
  input: "^training_2/Adam/Assign_155"
  input: "^training_2/Adam/Assign_156"
  input: "^training_2/Adam/Assign_157"
  input: "^training_2/Adam/Assign_158"
  input: "^training_2/Adam/Assign_159"
  input: "^training_2/Adam/Assign_16"
  input: "^training_2/Adam/Assign_160"
  input: "^training_2/Adam/Assign_161"
  input: "^training_2/Adam/Assign_17"
  input: "^training_2/Adam/Assign_18"
  input: "^training_2/Adam/Assign_19"
  input: "^training_2/Adam/Assign_2"
  input: "^training_2/Adam/Assign_20"
  input: "^training_2/Adam/Assign_21"
  input: "^training_2/Adam/Assign_22"
  input: "^training_2/Adam/Assign_23"
  input: "^training_2/Adam/Assign_24"
  input: "^training_2/Adam/Assign_25"
  input: "^training_2/Adam/Assign_26"
  input: "^training_2/Adam/Assign_27"
  input: "^training_2/Adam/Assign_28"
  input: "^training_2/Adam/Assign_29"
  input: "^training_2/Adam/Assign_3"
  input: "^training_2/Adam/Assign_30"
  input: "^training_2/Adam/Assign_31"
  input: "^training_2/Adam/Assign_32"
  input: "^training_2/Adam/Assign_33"
  input: "^training_2/Adam/Assign_34"
  input: "^training_2/Adam/Assign_35"
  input: "^training_2/Adam/Assign_36"
  input: "^training_2/Adam/Assign_37"
  input: "^training_2/Adam/Assign_38"
  input: "^training_2/Adam/Assign_39"
  input: "^training_2/Adam/Assign_4"
  input: "^training_2/Adam/Assign_40"
  input: "^training_2/Adam/Assign_41"
  input: "^training_2/Adam/Assign_42"
  input: "^training_2/Adam/Assign_43"
  input: "^training_2/Adam/Assign_44"
  input: "^training_2/Adam/Assign_45"
  input: "^training_2/Adam/Assign_46"
  input: "^training_2/Adam/Assign_47"
  input: "^training_2/Adam/Assign_48"
  input: "^training_2/Adam/Assign_49"
  input: "^training_2/Adam/Assign_5"
  input: "^training_2/Adam/Assign_50"
  input: "^training_2/Adam/Assign_51"
  input: "^training_2/Adam/Assign_52"
  input: "^training_2/Adam/Assign_53"
  input: "^training_2/Adam/Assign_54"
  input: "^training_2/Adam/Assign_55"
  input: "^training_2/Adam/Assign_56"
  input: "^training_2/Adam/Assign_57"
  input: "^training_2/Adam/Assign_58"
  input: "^training_2/Adam/Assign_59"
  input: "^training_2/Adam/Assign_6"
  input: "^training_2/Adam/Assign_60"
  input: "^training_2/Adam/Assign_61"
  input: "^training_2/Adam/Assign_62"
  input: "^training_2/Adam/Assign_63"
  input: "^training_2/Adam/Assign_64"
  input: "^training_2/Adam/Assign_65"
  input: "^training_2/Adam/Assign_66"
  input: "^training_2/Adam/Assign_67"
  input: "^training_2/Adam/Assign_68"
  input: "^training_2/Adam/Assign_69"
  input: "^training_2/Adam/Assign_7"
  input: "^training_2/Adam/Assign_70"
  input: "^training_2/Adam/Assign_71"
  input: "^training_2/Adam/Assign_72"
  input: "^training_2/Adam/Assign_73"
  input: "^training_2/Adam/Assign_74"
  input: "^training_2/Adam/Assign_75"
  input: "^training_2/Adam/Assign_76"
  input: "^training_2/Adam/Assign_77"
  input: "^training_2/Adam/Assign_78"
  input: "^training_2/Adam/Assign_79"
  input: "^training_2/Adam/Assign_8"
  input: "^training_2/Adam/Assign_80"
  input: "^training_2/Adam/Assign_81"
  input: "^training_2/Adam/Assign_82"
  input: "^training_2/Adam/Assign_83"
  input: "^training_2/Adam/Assign_84"
  input: "^training_2/Adam/Assign_85"
  input: "^training_2/Adam/Assign_86"
  input: "^training_2/Adam/Assign_87"
  input: "^training_2/Adam/Assign_88"
  input: "^training_2/Adam/Assign_89"
  input: "^training_2/Adam/Assign_9"
  input: "^training_2/Adam/Assign_90"
  input: "^training_2/Adam/Assign_91"
  input: "^training_2/Adam/Assign_92"
  input: "^training_2/Adam/Assign_93"
  input: "^training_2/Adam/Assign_94"
  input: "^training_2/Adam/Assign_95"
  input: "^training_2/Adam/Assign_96"
  input: "^training_2/Adam/Assign_97"
  input: "^training_2/Adam/Assign_98"
  input: "^training_2/Adam/Assign_99"
}
node {
  name: "IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "Adam_1/iterations"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "Adam_1/lr"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/lr"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "Adam_1/beta_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "Adam_1/beta_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "Adam_1/decay"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_6"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_7"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_8"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_9"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_9"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_10"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_10"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_11"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_11"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_12"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_12"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_13"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_13"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_14"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_14"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_15"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_15"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_16"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_16"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_17"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_17"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_18"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_18"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_19"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_19"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_20"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_20"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_21"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_21"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_22"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_22"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_23"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_23"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_24"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_24"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_25"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_25"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_26"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_26"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_27"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_27"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_28"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_28"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_29"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_29"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_30"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_30"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_31"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_31"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_32"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_32"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_33"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_33"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_34"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_34"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_35"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_35"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_36"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_36"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_37"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_37"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_38"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_38"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_39"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_39"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_40"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_40"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_41"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_41"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_42"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_42"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_43"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_43"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_44"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_44"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_45"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_45"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_135"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_46"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_46"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_136"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_47"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_47"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_137"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_48"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_48"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_138"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_49"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_49"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_139"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_50"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_50"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_140"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_51"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_51"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_141"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_52"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_52"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_142"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_53"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_53"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_143"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_54"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_54"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_144"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_55"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_55"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_145"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_56"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_56"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_146"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_57"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_57"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_147"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_58"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_58"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_148"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_59"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_59"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_149"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_60"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_60"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_150"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_61"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_61"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_151"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_62"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_62"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_152"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_63"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_63"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_153"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_64"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_64"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_154"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_65"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_65"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_155"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_66"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_66"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_156"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_67"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_67"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_157"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_68"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_68"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_158"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_69"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_69"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_159"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_70"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_70"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_160"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_71"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_71"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_161"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_72"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_72"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_162"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_73"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_73"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_163"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_74"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_74"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_164"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_75"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_75"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_165"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_76"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_76"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_166"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_77"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_77"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_167"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_78"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_78"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_168"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_79"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_79"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_169"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_80"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_80"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_170"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_81"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_81"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_171"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_82"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_82"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_172"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_83"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_83"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_173"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_84"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_84"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_174"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_85"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_85"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_175"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_86"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_86"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_176"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_87"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_87"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_177"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_88"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_88"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_178"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_89"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_89"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_179"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_90"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_90"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_180"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_91"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_91"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_181"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_92"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_92"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_182"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_93"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_93"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_183"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_94"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_94"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_184"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_95"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_95"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_185"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_96"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_96"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_186"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_97"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_97"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_187"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_98"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_98"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_188"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_99"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_99"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_189"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_100"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_100"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_190"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_101"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_101"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_191"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_102"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_102"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_192"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_103"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_103"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_193"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_104"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_104"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_194"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_105"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_105"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_195"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_106"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_106"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_196"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_107"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_107"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_197"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_108"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_108"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_198"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_109"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_109"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_199"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_110"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_110"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_200"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_111"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_111"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_201"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_112"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_112"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_202"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_113"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_113"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_203"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_114"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_114"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_204"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_115"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_115"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_205"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_116"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_116"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_206"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_117"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_117"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_207"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_118"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_118"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_208"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_119"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_119"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_209"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_120"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_120"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_210"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_121"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_121"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_211"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_122"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_122"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_212"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_123"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_123"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_213"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_124"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_124"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_214"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_125"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_125"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_215"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_126"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_126"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_216"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_127"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_127"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_217"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_128"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_128"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_218"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_129"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_129"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_219"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_130"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_130"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_220"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_131"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_131"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_221"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_132"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_132"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_222"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_133"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_133"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_223"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_134"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_134"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_224"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_135"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_135"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_225"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_136"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_136"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_226"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_137"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_137"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_227"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_138"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_138"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_228"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_139"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_139"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_229"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_140"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_140"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_230"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_141"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_141"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_231"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_142"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_142"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_232"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_143"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_143"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_233"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_144"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_144"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_234"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_145"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_145"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_235"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_146"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_146"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_236"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_147"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_147"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_237"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_148"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_148"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_238"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_149"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_149"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_239"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_150"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_150"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_240"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_151"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_151"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_241"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_152"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_152"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_242"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_153"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_153"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_243"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_154"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_154"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_244"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_155"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_155"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_245"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_156"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_156"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_246"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_157"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_157"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_247"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_158"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_158"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_248"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_159"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_159"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_249"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_160"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_160"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_250"
  op: "IsVariableInitialized"
  input: "training_2/Adam/Variable_161"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_161"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_3"
  op: "NoOp"
  input: "^Adam_1/beta_1/Assign"
  input: "^Adam_1/beta_2/Assign"
  input: "^Adam_1/decay/Assign"
  input: "^Adam_1/iterations/Assign"
  input: "^Adam_1/lr/Assign"
  input: "^training_2/Adam/Variable/Assign"
  input: "^training_2/Adam/Variable_1/Assign"
  input: "^training_2/Adam/Variable_10/Assign"
  input: "^training_2/Adam/Variable_100/Assign"
  input: "^training_2/Adam/Variable_101/Assign"
  input: "^training_2/Adam/Variable_102/Assign"
  input: "^training_2/Adam/Variable_103/Assign"
  input: "^training_2/Adam/Variable_104/Assign"
  input: "^training_2/Adam/Variable_105/Assign"
  input: "^training_2/Adam/Variable_106/Assign"
  input: "^training_2/Adam/Variable_107/Assign"
  input: "^training_2/Adam/Variable_108/Assign"
  input: "^training_2/Adam/Variable_109/Assign"
  input: "^training_2/Adam/Variable_11/Assign"
  input: "^training_2/Adam/Variable_110/Assign"
  input: "^training_2/Adam/Variable_111/Assign"
  input: "^training_2/Adam/Variable_112/Assign"
  input: "^training_2/Adam/Variable_113/Assign"
  input: "^training_2/Adam/Variable_114/Assign"
  input: "^training_2/Adam/Variable_115/Assign"
  input: "^training_2/Adam/Variable_116/Assign"
  input: "^training_2/Adam/Variable_117/Assign"
  input: "^training_2/Adam/Variable_118/Assign"
  input: "^training_2/Adam/Variable_119/Assign"
  input: "^training_2/Adam/Variable_12/Assign"
  input: "^training_2/Adam/Variable_120/Assign"
  input: "^training_2/Adam/Variable_121/Assign"
  input: "^training_2/Adam/Variable_122/Assign"
  input: "^training_2/Adam/Variable_123/Assign"
  input: "^training_2/Adam/Variable_124/Assign"
  input: "^training_2/Adam/Variable_125/Assign"
  input: "^training_2/Adam/Variable_126/Assign"
  input: "^training_2/Adam/Variable_127/Assign"
  input: "^training_2/Adam/Variable_128/Assign"
  input: "^training_2/Adam/Variable_129/Assign"
  input: "^training_2/Adam/Variable_13/Assign"
  input: "^training_2/Adam/Variable_130/Assign"
  input: "^training_2/Adam/Variable_131/Assign"
  input: "^training_2/Adam/Variable_132/Assign"
  input: "^training_2/Adam/Variable_133/Assign"
  input: "^training_2/Adam/Variable_134/Assign"
  input: "^training_2/Adam/Variable_135/Assign"
  input: "^training_2/Adam/Variable_136/Assign"
  input: "^training_2/Adam/Variable_137/Assign"
  input: "^training_2/Adam/Variable_138/Assign"
  input: "^training_2/Adam/Variable_139/Assign"
  input: "^training_2/Adam/Variable_14/Assign"
  input: "^training_2/Adam/Variable_140/Assign"
  input: "^training_2/Adam/Variable_141/Assign"
  input: "^training_2/Adam/Variable_142/Assign"
  input: "^training_2/Adam/Variable_143/Assign"
  input: "^training_2/Adam/Variable_144/Assign"
  input: "^training_2/Adam/Variable_145/Assign"
  input: "^training_2/Adam/Variable_146/Assign"
  input: "^training_2/Adam/Variable_147/Assign"
  input: "^training_2/Adam/Variable_148/Assign"
  input: "^training_2/Adam/Variable_149/Assign"
  input: "^training_2/Adam/Variable_15/Assign"
  input: "^training_2/Adam/Variable_150/Assign"
  input: "^training_2/Adam/Variable_151/Assign"
  input: "^training_2/Adam/Variable_152/Assign"
  input: "^training_2/Adam/Variable_153/Assign"
  input: "^training_2/Adam/Variable_154/Assign"
  input: "^training_2/Adam/Variable_155/Assign"
  input: "^training_2/Adam/Variable_156/Assign"
  input: "^training_2/Adam/Variable_157/Assign"
  input: "^training_2/Adam/Variable_158/Assign"
  input: "^training_2/Adam/Variable_159/Assign"
  input: "^training_2/Adam/Variable_16/Assign"
  input: "^training_2/Adam/Variable_160/Assign"
  input: "^training_2/Adam/Variable_161/Assign"
  input: "^training_2/Adam/Variable_17/Assign"
  input: "^training_2/Adam/Variable_18/Assign"
  input: "^training_2/Adam/Variable_19/Assign"
  input: "^training_2/Adam/Variable_2/Assign"
  input: "^training_2/Adam/Variable_20/Assign"
  input: "^training_2/Adam/Variable_21/Assign"
  input: "^training_2/Adam/Variable_22/Assign"
  input: "^training_2/Adam/Variable_23/Assign"
  input: "^training_2/Adam/Variable_24/Assign"
  input: "^training_2/Adam/Variable_25/Assign"
  input: "^training_2/Adam/Variable_26/Assign"
  input: "^training_2/Adam/Variable_27/Assign"
  input: "^training_2/Adam/Variable_28/Assign"
  input: "^training_2/Adam/Variable_29/Assign"
  input: "^training_2/Adam/Variable_3/Assign"
  input: "^training_2/Adam/Variable_30/Assign"
  input: "^training_2/Adam/Variable_31/Assign"
  input: "^training_2/Adam/Variable_32/Assign"
  input: "^training_2/Adam/Variable_33/Assign"
  input: "^training_2/Adam/Variable_34/Assign"
  input: "^training_2/Adam/Variable_35/Assign"
  input: "^training_2/Adam/Variable_36/Assign"
  input: "^training_2/Adam/Variable_37/Assign"
  input: "^training_2/Adam/Variable_38/Assign"
  input: "^training_2/Adam/Variable_39/Assign"
  input: "^training_2/Adam/Variable_4/Assign"
  input: "^training_2/Adam/Variable_40/Assign"
  input: "^training_2/Adam/Variable_41/Assign"
  input: "^training_2/Adam/Variable_42/Assign"
  input: "^training_2/Adam/Variable_43/Assign"
  input: "^training_2/Adam/Variable_44/Assign"
  input: "^training_2/Adam/Variable_45/Assign"
  input: "^training_2/Adam/Variable_46/Assign"
  input: "^training_2/Adam/Variable_47/Assign"
  input: "^training_2/Adam/Variable_48/Assign"
  input: "^training_2/Adam/Variable_49/Assign"
  input: "^training_2/Adam/Variable_5/Assign"
  input: "^training_2/Adam/Variable_50/Assign"
  input: "^training_2/Adam/Variable_51/Assign"
  input: "^training_2/Adam/Variable_52/Assign"
  input: "^training_2/Adam/Variable_53/Assign"
  input: "^training_2/Adam/Variable_54/Assign"
  input: "^training_2/Adam/Variable_55/Assign"
  input: "^training_2/Adam/Variable_56/Assign"
  input: "^training_2/Adam/Variable_57/Assign"
  input: "^training_2/Adam/Variable_58/Assign"
  input: "^training_2/Adam/Variable_59/Assign"
  input: "^training_2/Adam/Variable_6/Assign"
  input: "^training_2/Adam/Variable_60/Assign"
  input: "^training_2/Adam/Variable_61/Assign"
  input: "^training_2/Adam/Variable_62/Assign"
  input: "^training_2/Adam/Variable_63/Assign"
  input: "^training_2/Adam/Variable_64/Assign"
  input: "^training_2/Adam/Variable_65/Assign"
  input: "^training_2/Adam/Variable_66/Assign"
  input: "^training_2/Adam/Variable_67/Assign"
  input: "^training_2/Adam/Variable_68/Assign"
  input: "^training_2/Adam/Variable_69/Assign"
  input: "^training_2/Adam/Variable_7/Assign"
  input: "^training_2/Adam/Variable_70/Assign"
  input: "^training_2/Adam/Variable_71/Assign"
  input: "^training_2/Adam/Variable_72/Assign"
  input: "^training_2/Adam/Variable_73/Assign"
  input: "^training_2/Adam/Variable_74/Assign"
  input: "^training_2/Adam/Variable_75/Assign"
  input: "^training_2/Adam/Variable_76/Assign"
  input: "^training_2/Adam/Variable_77/Assign"
  input: "^training_2/Adam/Variable_78/Assign"
  input: "^training_2/Adam/Variable_79/Assign"
  input: "^training_2/Adam/Variable_8/Assign"
  input: "^training_2/Adam/Variable_80/Assign"
  input: "^training_2/Adam/Variable_81/Assign"
  input: "^training_2/Adam/Variable_82/Assign"
  input: "^training_2/Adam/Variable_83/Assign"
  input: "^training_2/Adam/Variable_84/Assign"
  input: "^training_2/Adam/Variable_85/Assign"
  input: "^training_2/Adam/Variable_86/Assign"
  input: "^training_2/Adam/Variable_87/Assign"
  input: "^training_2/Adam/Variable_88/Assign"
  input: "^training_2/Adam/Variable_89/Assign"
  input: "^training_2/Adam/Variable_9/Assign"
  input: "^training_2/Adam/Variable_90/Assign"
  input: "^training_2/Adam/Variable_91/Assign"
  input: "^training_2/Adam/Variable_92/Assign"
  input: "^training_2/Adam/Variable_93/Assign"
  input: "^training_2/Adam/Variable_94/Assign"
  input: "^training_2/Adam/Variable_95/Assign"
  input: "^training_2/Adam/Variable_96/Assign"
  input: "^training_2/Adam/Variable_97/Assign"
  input: "^training_2/Adam/Variable_98/Assign"
  input: "^training_2/Adam/Variable_99/Assign"
}
node {
  name: "Placeholder_291"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Assign_64"
  op: "Assign"
  input: "Adam_1/iterations"
  input: "Placeholder_291"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adam_1/iterations"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_292"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_65"
  op: "Assign"
  input: "training_2/Adam/Variable"
  input: "Placeholder_292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_293"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_66"
  op: "Assign"
  input: "training_2/Adam/Variable_1"
  input: "Placeholder_293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_294"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_67"
  op: "Assign"
  input: "training_2/Adam/Variable_2"
  input: "Placeholder_294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_295"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_68"
  op: "Assign"
  input: "training_2/Adam/Variable_3"
  input: "Placeholder_295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_296"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_69"
  op: "Assign"
  input: "training_2/Adam/Variable_4"
  input: "Placeholder_296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_297"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_70"
  op: "Assign"
  input: "training_2/Adam/Variable_5"
  input: "Placeholder_297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_298"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_71"
  op: "Assign"
  input: "training_2/Adam/Variable_6"
  input: "Placeholder_298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_6"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_299"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_72"
  op: "Assign"
  input: "training_2/Adam/Variable_7"
  input: "Placeholder_299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_7"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_300"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_73"
  op: "Assign"
  input: "training_2/Adam/Variable_8"
  input: "Placeholder_300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_8"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_301"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_74"
  op: "Assign"
  input: "training_2/Adam/Variable_9"
  input: "Placeholder_301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_9"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_302"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_75"
  op: "Assign"
  input: "training_2/Adam/Variable_10"
  input: "Placeholder_302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_10"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_303"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_76"
  op: "Assign"
  input: "training_2/Adam/Variable_11"
  input: "Placeholder_303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_11"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_304"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_77"
  op: "Assign"
  input: "training_2/Adam/Variable_12"
  input: "Placeholder_304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_12"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_305"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_78"
  op: "Assign"
  input: "training_2/Adam/Variable_13"
  input: "Placeholder_305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_13"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_306"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_79"
  op: "Assign"
  input: "training_2/Adam/Variable_14"
  input: "Placeholder_306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_14"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_307"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_80"
  op: "Assign"
  input: "training_2/Adam/Variable_15"
  input: "Placeholder_307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_15"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_308"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_81"
  op: "Assign"
  input: "training_2/Adam/Variable_16"
  input: "Placeholder_308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_16"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_309"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_82"
  op: "Assign"
  input: "training_2/Adam/Variable_17"
  input: "Placeholder_309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_17"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_310"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_83"
  op: "Assign"
  input: "training_2/Adam/Variable_18"
  input: "Placeholder_310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_18"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_311"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_84"
  op: "Assign"
  input: "training_2/Adam/Variable_19"
  input: "Placeholder_311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_19"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_312"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_85"
  op: "Assign"
  input: "training_2/Adam/Variable_20"
  input: "Placeholder_312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_20"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_313"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_86"
  op: "Assign"
  input: "training_2/Adam/Variable_21"
  input: "Placeholder_313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_21"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_314"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_87"
  op: "Assign"
  input: "training_2/Adam/Variable_22"
  input: "Placeholder_314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_22"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_315"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_88"
  op: "Assign"
  input: "training_2/Adam/Variable_23"
  input: "Placeholder_315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_23"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_316"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_89"
  op: "Assign"
  input: "training_2/Adam/Variable_24"
  input: "Placeholder_316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_24"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_317"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_90"
  op: "Assign"
  input: "training_2/Adam/Variable_25"
  input: "Placeholder_317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_25"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_318"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "Assign_91"
  op: "Assign"
  input: "training_2/Adam/Variable_26"
  input: "Placeholder_318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_26"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_319"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "Assign_92"
  op: "Assign"
  input: "training_2/Adam/Variable_27"
  input: "Placeholder_319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_27"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_320"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_93"
  op: "Assign"
  input: "training_2/Adam/Variable_28"
  input: "Placeholder_320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_28"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_321"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_94"
  op: "Assign"
  input: "training_2/Adam/Variable_29"
  input: "Placeholder_321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_29"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_322"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_95"
  op: "Assign"
  input: "training_2/Adam/Variable_30"
  input: "Placeholder_322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_30"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_323"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_96"
  op: "Assign"
  input: "training_2/Adam/Variable_31"
  input: "Placeholder_323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_31"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_324"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_97"
  op: "Assign"
  input: "training_2/Adam/Variable_32"
  input: "Placeholder_324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_32"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_325"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_98"
  op: "Assign"
  input: "training_2/Adam/Variable_33"
  input: "Placeholder_325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_33"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_326"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_99"
  op: "Assign"
  input: "training_2/Adam/Variable_34"
  input: "Placeholder_326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_34"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_327"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_100"
  op: "Assign"
  input: "training_2/Adam/Variable_35"
  input: "Placeholder_327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_35"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_328"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "Assign_101"
  op: "Assign"
  input: "training_2/Adam/Variable_36"
  input: "Placeholder_328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_36"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_329"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "Assign_102"
  op: "Assign"
  input: "training_2/Adam/Variable_37"
  input: "Placeholder_329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_37"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_330"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_103"
  op: "Assign"
  input: "training_2/Adam/Variable_38"
  input: "Placeholder_330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_38"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_331"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_104"
  op: "Assign"
  input: "training_2/Adam/Variable_39"
  input: "Placeholder_331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_39"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_332"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_105"
  op: "Assign"
  input: "training_2/Adam/Variable_40"
  input: "Placeholder_332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_40"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_333"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_106"
  op: "Assign"
  input: "training_2/Adam/Variable_41"
  input: "Placeholder_333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_41"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_334"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_107"
  op: "Assign"
  input: "training_2/Adam/Variable_42"
  input: "Placeholder_334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_42"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_335"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_108"
  op: "Assign"
  input: "training_2/Adam/Variable_43"
  input: "Placeholder_335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_43"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_336"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_109"
  op: "Assign"
  input: "training_2/Adam/Variable_44"
  input: "Placeholder_336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_44"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_337"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_110"
  op: "Assign"
  input: "training_2/Adam/Variable_45"
  input: "Placeholder_337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_45"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_338"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_111"
  op: "Assign"
  input: "training_2/Adam/Variable_46"
  input: "Placeholder_338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_46"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_339"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_112"
  op: "Assign"
  input: "training_2/Adam/Variable_47"
  input: "Placeholder_339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_47"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_340"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_113"
  op: "Assign"
  input: "training_2/Adam/Variable_48"
  input: "Placeholder_340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_48"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_341"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_114"
  op: "Assign"
  input: "training_2/Adam/Variable_49"
  input: "Placeholder_341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_49"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_342"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_115"
  op: "Assign"
  input: "training_2/Adam/Variable_50"
  input: "Placeholder_342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_50"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_343"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_116"
  op: "Assign"
  input: "training_2/Adam/Variable_51"
  input: "Placeholder_343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_51"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_344"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Assign_117"
  op: "Assign"
  input: "training_2/Adam/Variable_52"
  input: "Placeholder_344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_52"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_345"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Assign_118"
  op: "Assign"
  input: "training_2/Adam/Variable_53"
  input: "Placeholder_345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_53"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_346"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_119"
  op: "Assign"
  input: "training_2/Adam/Variable_54"
  input: "Placeholder_346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_54"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_347"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_120"
  op: "Assign"
  input: "training_2/Adam/Variable_55"
  input: "Placeholder_347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_55"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_348"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_121"
  op: "Assign"
  input: "training_2/Adam/Variable_56"
  input: "Placeholder_348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_56"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_349"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_122"
  op: "Assign"
  input: "training_2/Adam/Variable_57"
  input: "Placeholder_349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_57"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_350"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_123"
  op: "Assign"
  input: "training_2/Adam/Variable_58"
  input: "Placeholder_350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_58"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_351"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_124"
  op: "Assign"
  input: "training_2/Adam/Variable_59"
  input: "Placeholder_351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_59"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_352"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_125"
  op: "Assign"
  input: "training_2/Adam/Variable_60"
  input: "Placeholder_352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_60"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_353"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_126"
  op: "Assign"
  input: "training_2/Adam/Variable_61"
  input: "Placeholder_353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_61"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_354"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_127"
  op: "Assign"
  input: "training_2/Adam/Variable_62"
  input: "Placeholder_354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_62"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_355"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_128"
  op: "Assign"
  input: "training_2/Adam/Variable_63"
  input: "Placeholder_355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_63"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_356"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_129"
  op: "Assign"
  input: "training_2/Adam/Variable_64"
  input: "Placeholder_356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_64"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_357"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_130"
  op: "Assign"
  input: "training_2/Adam/Variable_65"
  input: "Placeholder_357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_65"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_358"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_131"
  op: "Assign"
  input: "training_2/Adam/Variable_66"
  input: "Placeholder_358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_66"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_359"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_132"
  op: "Assign"
  input: "training_2/Adam/Variable_67"
  input: "Placeholder_359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_67"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_360"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_133"
  op: "Assign"
  input: "training_2/Adam/Variable_68"
  input: "Placeholder_360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_68"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_361"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_134"
  op: "Assign"
  input: "training_2/Adam/Variable_69"
  input: "Placeholder_361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_69"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_362"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_135"
  op: "Assign"
  input: "training_2/Adam/Variable_70"
  input: "Placeholder_362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_70"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_363"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_136"
  op: "Assign"
  input: "training_2/Adam/Variable_71"
  input: "Placeholder_363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_71"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_364"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_137"
  op: "Assign"
  input: "training_2/Adam/Variable_72"
  input: "Placeholder_364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_72"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_365"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_138"
  op: "Assign"
  input: "training_2/Adam/Variable_73"
  input: "Placeholder_365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_73"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_366"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_139"
  op: "Assign"
  input: "training_2/Adam/Variable_74"
  input: "Placeholder_366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_74"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_367"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_140"
  op: "Assign"
  input: "training_2/Adam/Variable_75"
  input: "Placeholder_367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_75"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_368"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_141"
  op: "Assign"
  input: "training_2/Adam/Variable_76"
  input: "Placeholder_368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_76"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_369"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_142"
  op: "Assign"
  input: "training_2/Adam/Variable_77"
  input: "Placeholder_369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_77"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_370"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_143"
  op: "Assign"
  input: "training_2/Adam/Variable_78"
  input: "Placeholder_370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_78"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_371"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_144"
  op: "Assign"
  input: "training_2/Adam/Variable_79"
  input: "Placeholder_371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_79"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_372"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "Assign_145"
  op: "Assign"
  input: "training_2/Adam/Variable_80"
  input: "Placeholder_372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_80"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_373"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "Assign_146"
  op: "Assign"
  input: "training_2/Adam/Variable_81"
  input: "Placeholder_373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_81"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_374"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_147"
  op: "Assign"
  input: "training_2/Adam/Variable_82"
  input: "Placeholder_374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_82"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_375"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_148"
  op: "Assign"
  input: "training_2/Adam/Variable_83"
  input: "Placeholder_375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_83"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_376"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_149"
  op: "Assign"
  input: "training_2/Adam/Variable_84"
  input: "Placeholder_376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_84"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_377"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_150"
  op: "Assign"
  input: "training_2/Adam/Variable_85"
  input: "Placeholder_377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_85"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_378"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_151"
  op: "Assign"
  input: "training_2/Adam/Variable_86"
  input: "Placeholder_378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_86"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_379"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_152"
  op: "Assign"
  input: "training_2/Adam/Variable_87"
  input: "Placeholder_379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_87"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_380"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_153"
  op: "Assign"
  input: "training_2/Adam/Variable_88"
  input: "Placeholder_380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_88"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_381"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_154"
  op: "Assign"
  input: "training_2/Adam/Variable_89"
  input: "Placeholder_381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_89"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_382"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "Assign_155"
  op: "Assign"
  input: "training_2/Adam/Variable_90"
  input: "Placeholder_382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_90"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_383"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
}
node {
  name: "Assign_156"
  op: "Assign"
  input: "training_2/Adam/Variable_91"
  input: "Placeholder_383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_91"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_384"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 48
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_157"
  op: "Assign"
  input: "training_2/Adam/Variable_92"
  input: "Placeholder_384"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_92"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_385"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_158"
  op: "Assign"
  input: "training_2/Adam/Variable_93"
  input: "Placeholder_385"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_93"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_386"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_159"
  op: "Assign"
  input: "training_2/Adam/Variable_94"
  input: "Placeholder_386"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_94"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_387"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_160"
  op: "Assign"
  input: "training_2/Adam/Variable_95"
  input: "Placeholder_387"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_95"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_388"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_161"
  op: "Assign"
  input: "training_2/Adam/Variable_96"
  input: "Placeholder_388"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_96"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_389"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_162"
  op: "Assign"
  input: "training_2/Adam/Variable_97"
  input: "Placeholder_389"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_97"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_390"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_163"
  op: "Assign"
  input: "training_2/Adam/Variable_98"
  input: "Placeholder_390"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_98"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_391"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_164"
  op: "Assign"
  input: "training_2/Adam/Variable_99"
  input: "Placeholder_391"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_99"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_392"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_165"
  op: "Assign"
  input: "training_2/Adam/Variable_100"
  input: "Placeholder_392"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_100"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_393"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_166"
  op: "Assign"
  input: "training_2/Adam/Variable_101"
  input: "Placeholder_393"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_101"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_394"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_167"
  op: "Assign"
  input: "training_2/Adam/Variable_102"
  input: "Placeholder_394"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_102"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_395"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_168"
  op: "Assign"
  input: "training_2/Adam/Variable_103"
  input: "Placeholder_395"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_103"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_396"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_169"
  op: "Assign"
  input: "training_2/Adam/Variable_104"
  input: "Placeholder_396"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_104"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_397"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_170"
  op: "Assign"
  input: "training_2/Adam/Variable_105"
  input: "Placeholder_397"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_105"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_398"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Assign_171"
  op: "Assign"
  input: "training_2/Adam/Variable_106"
  input: "Placeholder_398"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_106"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_399"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Assign_172"
  op: "Assign"
  input: "training_2/Adam/Variable_107"
  input: "Placeholder_399"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_107"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_400"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_173"
  op: "Assign"
  input: "training_2/Adam/Variable_108"
  input: "Placeholder_400"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_108"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_401"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_174"
  op: "Assign"
  input: "training_2/Adam/Variable_109"
  input: "Placeholder_401"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_109"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_402"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_175"
  op: "Assign"
  input: "training_2/Adam/Variable_110"
  input: "Placeholder_402"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_110"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_403"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_176"
  op: "Assign"
  input: "training_2/Adam/Variable_111"
  input: "Placeholder_403"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_111"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_404"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_177"
  op: "Assign"
  input: "training_2/Adam/Variable_112"
  input: "Placeholder_404"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_112"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_405"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_178"
  op: "Assign"
  input: "training_2/Adam/Variable_113"
  input: "Placeholder_405"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_113"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_406"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_179"
  op: "Assign"
  input: "training_2/Adam/Variable_114"
  input: "Placeholder_406"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_114"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_407"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_180"
  op: "Assign"
  input: "training_2/Adam/Variable_115"
  input: "Placeholder_407"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_115"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_408"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_181"
  op: "Assign"
  input: "training_2/Adam/Variable_116"
  input: "Placeholder_408"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_116"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_409"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_182"
  op: "Assign"
  input: "training_2/Adam/Variable_117"
  input: "Placeholder_409"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_117"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_410"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_183"
  op: "Assign"
  input: "training_2/Adam/Variable_118"
  input: "Placeholder_410"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_118"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_411"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_184"
  op: "Assign"
  input: "training_2/Adam/Variable_119"
  input: "Placeholder_411"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_119"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_412"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_185"
  op: "Assign"
  input: "training_2/Adam/Variable_120"
  input: "Placeholder_412"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_120"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_413"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_186"
  op: "Assign"
  input: "training_2/Adam/Variable_121"
  input: "Placeholder_413"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_121"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_414"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_187"
  op: "Assign"
  input: "training_2/Adam/Variable_122"
  input: "Placeholder_414"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_122"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_415"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_188"
  op: "Assign"
  input: "training_2/Adam/Variable_123"
  input: "Placeholder_415"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_123"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_416"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_189"
  op: "Assign"
  input: "training_2/Adam/Variable_124"
  input: "Placeholder_416"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_124"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_417"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_190"
  op: "Assign"
  input: "training_2/Adam/Variable_125"
  input: "Placeholder_417"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_125"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_418"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_191"
  op: "Assign"
  input: "training_2/Adam/Variable_126"
  input: "Placeholder_418"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_126"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_419"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_192"
  op: "Assign"
  input: "training_2/Adam/Variable_127"
  input: "Placeholder_419"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_127"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_420"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_193"
  op: "Assign"
  input: "training_2/Adam/Variable_128"
  input: "Placeholder_420"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_128"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_421"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_194"
  op: "Assign"
  input: "training_2/Adam/Variable_129"
  input: "Placeholder_421"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_129"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_422"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_195"
  op: "Assign"
  input: "training_2/Adam/Variable_130"
  input: "Placeholder_422"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_130"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_423"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_196"
  op: "Assign"
  input: "training_2/Adam/Variable_131"
  input: "Placeholder_423"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_131"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_424"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_197"
  op: "Assign"
  input: "training_2/Adam/Variable_132"
  input: "Placeholder_424"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_132"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_425"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_198"
  op: "Assign"
  input: "training_2/Adam/Variable_133"
  input: "Placeholder_425"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_133"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_426"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_199"
  op: "Assign"
  input: "training_2/Adam/Variable_134"
  input: "Placeholder_426"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_134"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_427"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_200"
  op: "Assign"
  input: "training_2/Adam/Variable_135"
  input: "Placeholder_427"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_135"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_428"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_201"
  op: "Assign"
  input: "training_2/Adam/Variable_136"
  input: "Placeholder_428"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_136"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_429"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_202"
  op: "Assign"
  input: "training_2/Adam/Variable_137"
  input: "Placeholder_429"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_137"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_430"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_203"
  op: "Assign"
  input: "training_2/Adam/Variable_138"
  input: "Placeholder_430"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_138"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_431"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_204"
  op: "Assign"
  input: "training_2/Adam/Variable_139"
  input: "Placeholder_431"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_139"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_432"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_205"
  op: "Assign"
  input: "training_2/Adam/Variable_140"
  input: "Placeholder_432"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_140"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_433"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_206"
  op: "Assign"
  input: "training_2/Adam/Variable_141"
  input: "Placeholder_433"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_141"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_434"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_207"
  op: "Assign"
  input: "training_2/Adam/Variable_142"
  input: "Placeholder_434"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_142"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_435"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_208"
  op: "Assign"
  input: "training_2/Adam/Variable_143"
  input: "Placeholder_435"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_143"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_436"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_209"
  op: "Assign"
  input: "training_2/Adam/Variable_144"
  input: "Placeholder_436"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_144"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_437"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_210"
  op: "Assign"
  input: "training_2/Adam/Variable_145"
  input: "Placeholder_437"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_145"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_438"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_211"
  op: "Assign"
  input: "training_2/Adam/Variable_146"
  input: "Placeholder_438"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_146"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_439"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_212"
  op: "Assign"
  input: "training_2/Adam/Variable_147"
  input: "Placeholder_439"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_147"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_440"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_213"
  op: "Assign"
  input: "training_2/Adam/Variable_148"
  input: "Placeholder_440"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_148"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_441"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_214"
  op: "Assign"
  input: "training_2/Adam/Variable_149"
  input: "Placeholder_441"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_149"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_442"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_215"
  op: "Assign"
  input: "training_2/Adam/Variable_150"
  input: "Placeholder_442"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_150"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_443"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_216"
  op: "Assign"
  input: "training_2/Adam/Variable_151"
  input: "Placeholder_443"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_151"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_444"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_217"
  op: "Assign"
  input: "training_2/Adam/Variable_152"
  input: "Placeholder_444"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_152"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_445"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_218"
  op: "Assign"
  input: "training_2/Adam/Variable_153"
  input: "Placeholder_445"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_153"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_446"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_219"
  op: "Assign"
  input: "training_2/Adam/Variable_154"
  input: "Placeholder_446"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_154"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_447"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_220"
  op: "Assign"
  input: "training_2/Adam/Variable_155"
  input: "Placeholder_447"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_155"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_448"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_221"
  op: "Assign"
  input: "training_2/Adam/Variable_156"
  input: "Placeholder_448"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_156"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_449"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_222"
  op: "Assign"
  input: "training_2/Adam/Variable_157"
  input: "Placeholder_449"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_157"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_450"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_223"
  op: "Assign"
  input: "training_2/Adam/Variable_158"
  input: "Placeholder_450"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_158"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_451"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_224"
  op: "Assign"
  input: "training_2/Adam/Variable_159"
  input: "Placeholder_451"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_159"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_452"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_225"
  op: "Assign"
  input: "training_2/Adam/Variable_160"
  input: "Placeholder_452"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_160"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_453"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_226"
  op: "Assign"
  input: "training_2/Adam/Variable_161"
  input: "Placeholder_453"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training_2/Adam/Variable_161"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "y_1/Softmax"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "k2tfout_0"
  op: "Identity"
  input: "strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 27
}
